cscope 15 $HOME/test/netclient-master -q 0000001390 0000201735
	@ByteBuffer.h

1 #i‚de‡
_BYTEBUFFER_H


2 
	#_BYTEBUFFER_H


	)

4 
	~<io°ªam
>

5 
	~<ve˘‹
>

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

9 #ifde‡
_WIN


10 
	~<Wödows.h
>

13 
«me•a˚
 
	g√t
{

16 ˛as†
	cByãBuf„r
{

18 
	gpublic
:

20 
ByãBuf„r
(
size_t
 
size
):
buf„r
(size),
ªfCou¡
(1){}

22 
ByãBuf„r
(c⁄° ByãBuf„r& 
o
):
buf„r
(o.buf„r.
ˇ∑côy
()),
ªfCou¡
(1){

23 
mem˝y
((*)&
buf„r
[0],(*)&
o
.buf„r[0],o.buf„r.
ˇ∑côy
());

26 
size_t
 
C≠
() const{

27  
	gbuf„r
.
ˇ∑côy
();

30 
	g°d
::
ve˘‹
<>& 
Buf
(){

31  
buf„r
;

34 
ByãBuf„r
* 
IncRef
(){

35 #ifde‡
_WIN


36 
I¡îlockedIn¸emít
(&
ªfCou¡
);

38 
__sync_add_™d_„tch
(&
ªfCou¡
,1);

40  
	gthis
;

43 
DecRef
(){

44 #ifde‡
_WIN


45 if(
I¡îlockedDe¸emít
(&
ªfCou¡
) <= 0)

47 if(
__sync_sub_™d_„tch
(&
ªfCou¡
,1) <=0 )

49 
dñëe
 
this
;

52 
WrôeUöt8
(
size_t
 
pos
,
v
){

53 
	gwrôe
<>(
	gpos
,
	gv
);

56 
WrôeUöt16
(
size_t
 
pos
,
v
){

57 
	gwrôe
<>(
	gpos
,
	gv
);

60 
WrôeUöt32
(
size_t
 
pos
,
v
){

61 
	gwrôe
<>(
	gpos
,
	gv
);

64 
WrôeUöt64
(
size_t
 
pos
,
v
){

65 
	gwrôe
<>(
	gpos
,
	gv
);

68 
WrôeDoubÀ
(
size_t
 
pos
,
v
){

69 
	gwrôe
<>(
	gpos
,
	gv
);

72 
WrôeFlﬂt
(
size_t
 
pos
,
v
){

73 
	gwrôe
<>(
	gpos
,
	gv
);

76 
WrôeBö
(
size_t
 
pos
,*
v
,size_à
size
){

77 
size_t
 
	gˇp
 = 
buf„r
.
ˇ∑côy
();

78 i‡(
	gˇp
 < 
	gpos
 + 
	gsize
){

79 if(
	gˇp
 >
size
)

80 
buf„r
.
ªsize
(
ˇp
*2);

82 
	gbuf„r
.
ªsize
(
ˇp
+
size
);

84 
mem˝y
((*)&
buf„r
[
pos
],
v
,
size
);

87 
WrôeSåög
(
size_t
 
pos
,c⁄° *
v
){

88 
WrôeBö
(
pos
,(*)
v
,
°æí
(v)+1);

91 
RódUöt8
(
size_t
 
pos
) const{

92  
	gªad
<>(
	gpos
);

95 
RódUöt16
(
size_t
 
pos
) const{

96  
	gªad
<>(
	gpos
);

99 
RódUöt32
(
size_t
 
pos
) const{

100  
	gªad
<>(
	gpos
);

103 
RódI¡8
(
size_t
 
pos
) const{

104  
	gªad
<>(
	gpos
);

107 
RódI¡16
(
size_t
 
pos
) const{

108  
	gªad
<>(
	gpos
);

111 
RódI¡32
(
size_t
 
pos
) const{

112  
	gªad
<>(
	gpos
);

115 
RódUöt64
(
size_t
 
pos
) const{

116  
	gªad
<> (
	gpos
);

119 
RódFlﬂt
(
size_t
 
pos
) const{

120  
	gªad
<>(
	gpos
);

123 
RódDoubÀ
(
size_t
 
pos
) const {

124  
	gªad
<>(
	gpos
);

127 *
RódBö
(
size_t
 
pos
) const {

128 if(
	gpos
 < 
	gbuf„r
.
ˇ∑côy
())

129  (*)&
	gbuf„r
[
pos
];

130  
	gNULL
;

133 c⁄° *
RódSåög
(
size_t
 
pos
) const{

134  (c⁄° *)
RódBö
(
pos
);

137 
	g¥iv©e
:

139 
ãm∂©e
<
ty≥«me
 
T
>

140 
wrôe
(
size_t
 
pos
,c⁄° 
T
 &
v
){

141 
size_t
 
	gˇp
 = 
buf„r
.
ˇ∑côy
();

142 i‡(
	gˇp
 <
pos
 + (
T
)){

143 if(
ˇp
 >(
T
))

144 
buf„r
.
ªsize
(
ˇp
*2);

146 
	gbuf„r
.
ªsize
(
ˇp
+(
T
));

148 (*((
	gT
*)&
	gbuf„r
[
pos
])Ë
v
;

151 
	gãm∂©e
<
ty≥«me
 
	gT
>

152 
T
 
ªad
(
size_t
 
pos
) const{

153 if(
	gpos
+(
	gT
Ë> 
	gbuf„r
.
ˇ∑côy
())

154  
T
();

155  (*((
	gT
*)&
	gbuf„r
[
pos
]));

158 
	gByãBuf„r
& 
	g›î©‹
 = (c⁄° 
ByãBuf„r
&);

159 ~
ByãBuf„r
(){}

160 
	g°d
::
ve˘‹
<> 
buf„r
;

161 vﬁ©ûê
	gªfCou¡
;

	@Decoder.h

1 #i‚de‡ 
_DECODER_H


2 
	#_DECODER_H


	)

4 
	~"Packë.h
"

5 
	~"RPackë.h
"

7 
«me•a˚
 
	g√t
{

9 ˛as†
	cDecodî
{

10 
	gpublic
:

11 
Decodî
(){}

12 
vútuÆ
 
Packë
 *
u≈ack
(*
buf
,
size_t
 
pos
,size_à
size
,size_à
max
,size_à&
pkÀn
,&
îr
) = 0;

13 
	gvútuÆ
 ~
Decodî
(){};

14 
	g¥iv©e
:

15 
Decodî
(const Decoder&);

16 
	gDecodî
& 
	g›î©‹
 = (c⁄° 
Decodî
 &
o
);

19 ˛as†
	cPackëDecodî
 : 
public
 
Decodî
{

20 
public
:

21 
Packë
 *
u≈ack
(*
buf
,
size_t
 
pos
,size_à
size
,size_à
max
,size_à&
pkÀn
,&
îr
){

22 
Packë
 *
	gªt
 = 
NULL
;

23 
	gpkÀn
 = 0;

24 
	gîr
 = 0;

25 if(
	gsize
 >= 4){

26 
Àn
 = *(*)&
buf
[
pos
];

27 if(
	gÀn
 <0 || ()(
Àn
 + ()Ë> ()
max
)

28 
îr
 = -1;

30 
	gÀn
 += ();

31 if(
	gsize
 >(
size_t
)
Àn
){

32 
ByãBuf„r
 *
b
 = 
√w
 ByãBuf„r(
Àn
);

33 
	gb
->
WrôeBö
(0,(*)&
buf
[
pos
],
Àn
);

34 
	gªt
 = 
√w
 
RPackë
(
b
);

35 
	gpkÀn
 = 
Àn
;

36 
	gb
->
DecRef
();

40  
	gªt
;

44 ˛as†
	cRawBö¨yDecodî
 : 
public
 
Decodî
{

45 
public
:

46 
Packë
 *
u≈ack
(*
buf
,
size_t
 
pos
,size_à
size
,size_à
max
,size_à&
pkÀn
,&
îr
){

47  
	gNULL
;

	@HttpDecoder.h

1 #i‚de‡
_HTTPDECODER_H


2 
	#_HTTPDECODER_H


	)

5 
	~"HâpPackë.h
"

6 
	~"Decodî.h
"

7 
	~"hâp-∑r£r/hâp_∑r£r.h
"

9 
«me•a˚
 
	g√t
{

11 ˛as†
	cHâpDecodî
 : 
public
 
Decodî
{

14 
PACKET_COMPLETE
 = 1,

17 
	sluahâp_∑r£r
{

18 
hâp_∑r£r
 
	gba£
;

19 
hâp_∑r£r_£âögs
 
	g£âögs
;

20 
HâpDecodî
 *
	gdecodî
;

23 
	gpublic
:

24 
HâpDecodî
(
maxsize
):
m_∑ckë
(
NULL
),
°©us
(0),maxsize(maxsizê> 65535 ? 65535 : maxsize),
m_size
(0){

25 
	gm_∑r£r
.
	g£âögs
.
	g⁄_mesßge_begö
 = 
⁄_mesßge_begö
;

26 
	gm_∑r£r
.
	g£âögs
.
	g⁄_uæ
 = 
⁄_uæ
;

27 
	gm_∑r£r
.
	g£âögs
.
	g⁄_°©us
 = 
⁄_°©us
;

28 
	gm_∑r£r
.
	g£âögs
.
	g⁄_hódî_fõld
 = 
⁄_hódî_fõld
;

29 
	gm_∑r£r
.
	g£âögs
.
	g⁄_hódî_vÆue
 = 
⁄_hódî_vÆue
;

30 
	gm_∑r£r
.
	g£âögs
.
	g⁄_hódîs_com∂ëe
 = 
⁄_hódîs_com∂ëe
;

31 
	gm_∑r£r
.
	g£âögs
.
	g⁄_body
 = 
⁄_body
;

32 
	gm_∑r£r
.
	g£âögs
.
	g⁄_mesßge_com∂ëe
 = 
⁄_mesßge_com∂ëe
;

33 
	gm_∑r£r
.
	gdecodî
 = 
this
;

34 
hâp_∑r£r_öô
((
hâp_∑r£r
*)&
m_∑r£r
,
HTTP_BOTH
);

37 
	gvútuÆ
 ~
HâpDecodî
(){ if(
	gm_∑ckë
Ë
dñëe
 m_packet;}

39 
Packë
 *
u≈ack
(*
buf
,
size_t
 
pos
,size_à
size
,size_à
_
,size_à&
pkÀn
,&
îr
){

40 
Packë
 *
	gªt
 = 
NULL
;

41 
	gpkÀn
 = 0;

42 
	gîr
 = 0;

43 
size_t
 
	g≈¨£d
 = 
hâp_∑r£r_execuã
((
hâp_∑r£r
*)&
m_∑r£r
,&m_∑r£r.
£âögs
,&
buf
[
pos
],
size
);

44 if(
	g≈¨£d
 > 0){

45 
	gm_size
 +
≈¨£d
;

46 
	gpkÀn
 = 
≈¨£d
;

48 if(
	g°©us
 =
PACKET_COMPLETE
){

49 
°©us
 = 0;

50 
	gªt
 = 
m_∑ckë
;

51 
	gm_∑ckë
 = 
NULL
;

52 
hâp_∑r£r_öô
((
hâp_∑r£r
*)&
m_∑r£r
,
HTTP_BOTH
);

54 if(
	gm_size
 >
maxsize
Ë
îr
 = -1;

55 if(
	g≈¨£d
 !
size
Ë
îr
 = -1;

57  
	gªt
;

60 
	g¥iv©e
:

61 
⁄_mesßge_begö
 (
hâp_∑r£r
 *
_∑r£r
){

62 
HâpDecodî
 *
decodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->decoder;

63 if(
	gdecodî
->
	gm_∑ckë
)  -1;

64 
	gdecodî
->
	gm_∑ckë
 = 
√w
 
HâpPackë
;

68 
⁄_uæ
(
hâp_∑r£r
 *
_∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

69 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

70 
	gdecodî
->
	gm_∑ckë
->
Aµíd
(
URL
,
©
,
Àngth
);

74 
⁄_°©us
(
hâp_∑r£r
 *
_∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

75 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

76 
	gdecodî
->
	gm_∑ckë
->
Aµíd
(
STATUS
,
©
,
Àngth
);

80 
⁄_hódî_fõld
(
hâp_∑r£r
 *
_∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

81 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

82 
	gdecodî
->
	gm_∑ckë
->
Aµíd
(
HEADER_FIELD
,
©
,
Àngth
);

86 
⁄_hódî_vÆue
(
hâp_∑r£r
 *
_∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

87 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

88 
	gdecodî
->
	gm_∑ckë
->
Aµíd
(
HEADER_VALUE
,
©
,
Àngth
);

92 
⁄_hódîs_com∂ëe
(
hâp_∑r£r
 *
_∑r£r
){

93 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

94 
	gdecodî
->
	gm_∑ckë
->
SëMëhod
(
_∑r£r
->
mëhod
);

98 
⁄_body
(
hâp_∑r£r
 *
_∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

99 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

100 
	gdecodî
->
	gm_∑ckë
->
Aµíd
(
BODY
,
©
,
Àngth
);

104 
⁄_mesßge_com∂ëe
(
hâp_∑r£r
 *
_∑r£r
){

105 
HâpDecodî
 *
	gdecodî
 = ((
luahâp_∑r£r
*)
_∑r£r
)->
decodî
;

106 
	gdecodî
->
	g°©us
 = 
PACKET_COMPLETE
;

110 
	g¥iv©e
:

111 
luahâp_∑r£r
 
m_∑r£r
;

112 
HâpPackë
 *
	gm_∑ckë
;

113 
	g°©us
;

114 
size_t
 
	gmaxsize
;

115 
size_t
 
	gm_size
;

	@HttpPacket.h

1 #i‚de‡
_HTTPPACKET_H


2 
	#_HTTPPACKET_H


	)

4 
	~"Packë.h
"

5 
	~"LuaUtû.h
"

8 
	mURL
 = 1,

9 
	mSTATUS
,

10 
	mHEADER_FIELD
,

11 
	mHEADER_VALUE
,

12 
	mBODY
,

15 
«me•a˚
 
	g√t
{

17 ˛as†
	cHâpPackë
 : 
public
 
Packë
{

18 
¥iv©e
:

20 
public
:

21 
HâpPackë
():
Packë
(
HTTPPACKET
,
NULL
),
m_mëhod
(-1),
m_bodysize
(0){

24 ~
HâpPackë
(){}

26 
HâpPackë
(c⁄° HâpPackë &
o
):
Packë
(
HTTPPACKET
,
NULL
){

27 
	gm_hódî_fõld
 = 
o
.
m_hódî_fõld
;

28 
	gm_hódî_vÆue
 = 
o
.
m_hódî_vÆue
;

29 
	gm_°©us
 = 
o
.
m_°©us
;

30 
	gm_uæ
 = 
o
.
m_uæ
;

31 
	gm_bodysize
 = 
o
.
m_bodysize
;

32 if(
	go
.
	gm_buf„r
){

33 
	gm_buf„r
 = 
o
.
m_buf„r
;

34 
	gm_buf„r
->
IncRef
();

36 
	gm_mëhod
 = 
o
.
m_mëhod
;

39 
	gHâpPackë
& 
	g›î©‹
 = (c⁄° 
HâpPackë
 &
o
){

40 if(&
o
 !
this
){

41 
m_hódî_fõld
 = 
o
.m_header_field;

42 
	gm_hódî_vÆue
 = 
o
.
m_hódî_vÆue
;

43 
	gm_°©us
 = 
o
.
m_°©us
;

44 
	gm_uæ
 = 
o
.
m_uæ
;

45 
	gm_mëhod
 = 
o
.
m_mëhod
;

46 
	gm_bodysize
 = 
o
.
m_bodysize
;

47 if(
	go
.
	gm_buf„r
){

48 
	gm_buf„r
 = 
o
.
m_buf„r
;

49 
	gm_buf„r
->
IncRef
();

52  *
	gthis
;

55 
Packë
 *
Cl⁄e
(){

56  
√w
 
HâpPackë
(*
this
);

59 
Packë
 *
MakeWrôePackë
(){

60  
	gNULL
;

63 
Packë
 *
MakeRódPackë
(){

64  
Cl⁄e
();

67 
size_t
 
PkLí
(){

71 
size_t
 
PkTŸÆ
(){

75 
SëMëhod
(
mëhod
){

76 
	gm_mëhod
 = 
mëhod
;

79 
GëMëhod
(){

80  
	gm_mëhod
;

83 
Aµíd
(
ty≥
,c⁄° *
°r
,
size_t
 
Àn
){

84 if(
	gty≥
 =
URL
){

85 
size_t
 
i
 = 0;
	gi
 < 
	gÀn
;++i)

86 
	gm_uæ
.
push_back
(
°r
[
i
]);

87 }if(
	gty≥
 =
STATUS
){

88 
size_t
 
i
 = 0;
	gi
 < 
	gÀn
;++i)

89 
	gm_°©us
.
push_back
(
°r
[
i
]);

90 }if(
	gty≥
 =
BODY
){

91 if(!
m_buf„r
Ëm_buf„∏
√w
 
ByãBuf„r
(1024);

92 
	gm_buf„r
->
WrôeBö
(
m_bodysize
,(*)(
°r
),
Àn
);

93 
	gm_bodysize
 +
Àn
;

94 }if(
	gty≥
 =
HEADER_FIELD
){

95 if(
m_hódî_fõld
.
size
(Ë=
m_hódî_vÆue
.size()){

96 
m_hódî_fõld
.
push_back
(
°d
::
°rög
(""));

98 
	g°d
::
°rög
 *
±r
 = &
m_hódî_fõld
[m_hódî_fõld.
size
()-1];

99 
size_t
 
	gi
 = 0;ò< 
	gÀn
;++i)

100 
	g±r
->
push_back
(
°r
[
i
]);

101 }if(
	gty≥
 =
HEADER_VALUE
){

102 if(
m_hódî_fõld
.
size
(Ë!
m_hódî_vÆue
.size()){

103 
m_hódî_vÆue
.
push_back
(
°d
::
°rög
(""));

105 
	g°d
::
°rög
 *
±r
 = &
m_hódî_vÆue
[m_hódî_vÆue.
size
()-1];

106 
size_t
 
	gi
 = 0;ò< 
	gÀn
;++i)

107 
	g±r
->
push_back
(
°r
[
i
]);

111 c⁄° *
GëUæ
(){

112  
	gm_uæ
.
c_°r
();

115 c⁄° *
GëSètus
(){

116  
	gm_°©us
.
c_°r
();

119 c⁄° *
GëBody
(
size_t
 &
Àn
){

120 if(!
	gm_buf„r
Ë 
	gNULL
;

121 
	gÀn
 = 
m_bodysize
;

122  &
	gm_buf„r
->
Buf
()[0];

125 
PushHódîs
(
lua_Sèã
 *
L
){

126 
lua_√wèbÀ
(
L
);

127 
size_t
 
	gsize
 = 
m_hódî_vÆue
.
size
();

128 
size_t
 
	gi
 = 0; i < 
	gsize
; ++i){

129 
lua_push°rög
(
L
, 
m_hódî_fõld
[
i
].
c_°r
());

130 
lua_push°rög
(
L
, 
m_hódî_vÆue
[
i
].
c_°r
());

131 
lua_øw£t
(
L
, -3);

135 
	g¥iv©e
:

136 
°d
::
ve˘‹
<°d::
°rög
> 
m_hódî_fõld
;

137 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
m_hódî_vÆue
;

138 
	g°d
::
°rög
 
m_uæ
;

139 
	g°d
::
°rög
 
m_°©us
;

140 
	gm_mëhod
;

141 
size_t
 
	gm_bodysize
;

	@LuaPacket.cpp

1 
	~"LuaPackë.h
"

2 
	~"as£π.h
"

3 
	~"RPackë.h
"

4 
	~"WPackë.h
"

5 
	~"HâpPackë.h
"

6 
	~"RawBöPackë.h
"

9 
	mL_TABLE
 = 1,

10 
	mL_STRING
,

11 
	mL_BOOL
,

12 
	mL_FLOAT
,

13 
	mL_UINT8
,

14 
	mL_UINT16
,

15 
	mL_UINT32
,

16 
	mL_UINT64
,

17 
	mL_INT8
,

18 
	mL_INT16
,

19 
	mL_INT32
,

20 
	mL_INT64
,

24 
	m√t
::
Packë
* 
∑ckë
;

25 }
	tlua_∑ckë
,*
	tlua_∑ckë_t
;

27 
	#LUARPACKET_METATABLE
 "lu¨∑ckë_më©abÀ"

	)

28 
	#LUAWPACKET_METATABLE
 "luaw∑ckë_më©abÀ"

	)

29 
	#LUAHTTPPACKET_METATABLE
 "luahâµackë_më©abÀ"

	)

30 
	#LUARAWPACKET_METATABLE
 "lu¨aw∑ckë_më©abÀ"

	)

32 
	#VAILD_KEY_TYPE
(
TYPE
Ë(TYPE =
LUA_TSTRING
 || TYPE =
LUA_TNUMBER
)

	)

33 
	#VAILD_VAILD_TYPE
(
TYPE
Ë(TYPE =
LUA_TSTRING
 || TYPE =
LUA_TNUMBER
 || TYPE =
LUA_TTABLE
 || TYPE =
LUA_TBOOLEAN
)

	)

35 
ölöe
 
luabö_∑ck_°rög
(
√t
::
SåómWPackë
* 
wpk
,
lua_Sèã
 *
L
,
ödex
){

36 
	gwpk
->
WrôeUöt8
(
L_STRING
);

37 
size_t
 
	gÀn
;

38 c⁄° *
	gd©a
 = 
lua_tﬁ°rög
(
L
,
ödex
,&
Àn
);

39 
	gwpk
->
WrôeBö
((*)
d©a
, 
Àn
);

42 
ölöe
 
luabö_∑ck_numbî
(
√t
::
SåómWPackë
* 
wpk
,
lua_Sèã
 *
L
,
ödex
){

43 
lua_Numbî
 
	gv
 = 
lua_t⁄umbî
(
L
,
ödex
);

44 if(
	gv
 !(
lua_I¡egî
)
v
){

45 
wpk
->
WrôeUöt8
(
L_FLOAT
);

46 
	gwpk
->
WrôeDoubÀ
(
v
);

48 if(()
	gv
 > 0){

49 
	g_v
 = ()
v
;

50 if(
	g_v
 <= 0xFF){

51 
wpk
->
WrôeUöt8
(
L_UINT8
);

52 
	gwpk
->
WrôeUöt8
(()
_v
);

53 }if(
	g_v
 <= 0xFFFF){

54 
wpk
->
WrôeUöt8
(
L_UINT16
);

55 
	gwpk
->
WrôeUöt16
(()
_v
);

56 }if(
	g_v
 <= 0xFFFFFFFF){

57 
wpk
->
WrôeUöt8
(
L_UINT32
);

58 
	gwpk
->
WrôeUöt32
(()
_v
);

60 
	gwpk
->
WrôeUöt8
(
L_UINT64
);

61 
	gwpk
->
WrôeUöt64
(()
_v
);

64 
	g_v
 = ()
v
;

65 if(
	g_v
 >= 0x80){

66 
wpk
->
WrôeUöt8
(
L_INT8
);

67 
	gwpk
->
WrôeUöt8
(()
_v
);

68 }if(
	g_v
 >= 0x8000){

69 
wpk
->
WrôeUöt8
(
L_INT16
);

70 
	gwpk
->
WrôeUöt16
(()
_v
);

71 }if(
	g_v
 < 0x80000000){

72 
	gwpk
->
WrôeUöt8
(
L_INT32
);

73 
	gwpk
->
WrôeUöt32
(()
_v
);

75 
	gwpk
->
WrôeUöt8
(
L_INT64
);

76 
	gwpk
->
WrôeUöt64
(()
_v
);

82 
ölöe
 
luabö_∑ck_boﬁón
(
√t
::
SåómWPackë
* 
wpk
,
lua_Sèã
 *
L
,
ödex
){

83 
	gwpk
->
WrôeUöt8
(
L_BOOL
);

84 
	gvÆue
 = 
lua_toboﬁón
(
L
,
ödex
);

85 
	gwpk
->
WrôeUöt8
(
vÆue
);

89 
luabö_∑ck_èbÀ
(
√t
::
SåómWPackë
* 
wpk
,
lua_Sèã
 *
L
,
ödex
){

90 if(0 !
lua_gëmë©abÀ
(
L
,
ödex
)){

91 
lua_p›
(
L
,1);

94 
	gwpk
->
WrôeUöt8
(
L_TABLE
);

95 
	g√t
::
wrôe_pos
 
wpos
 = 
wpk
->
GëWrôePos
();

96 
	gwpk
->
WrôeUöt32
(0);

97 
	gªt
 = 0;

98 
	gc
 = 0;

99 
	gt›
 = 
lua_gët›
(
L
);

100 
lua_pushnû
(
L
);

102 if(!
lua_√xt
(
L
,
ödex
 - 1)){

105 
	gkey_ty≥
 = 
lua_ty≥
(
L
, -2);

106 
	gvÆ_ty≥
 = 
lua_ty≥
(
L
, -1);

107 if(!
VAILD_KEY_TYPE
(
key_ty≥
)){

108 
lua_p›
(
L
,1);

111 if(!
VAILD_VAILD_TYPE
(
vÆ_ty≥
)){

112 
lua_p›
(
L
,1);

115 if(
	gkey_ty≥
 =
LUA_TSTRING
)

116 
luabö_∑ck_°rög
(
wpk
,
L
,-2);

118 
luabö_∑ck_numbî
(
wpk
,
L
,-2);

120 if(
	gvÆ_ty≥
 =
LUA_TSTRING
)

121 
luabö_∑ck_°rög
(
wpk
,
L
,-1);

122 if(
	gvÆ_ty≥
 =
LUA_TNUMBER
)

123 
luabö_∑ck_numbî
(
wpk
,
L
,-1);

124 if(
	gvÆ_ty≥
 =
LUA_TBOOLEAN
)

125 
luabö_∑ck_boﬁón
(
wpk
,
L
,-1);

126 if(
	gvÆ_ty≥
 =
LUA_TTABLE
){

127 if(0 !(
ªt
 = 
luabö_∑ck_èbÀ
(
wpk
,
L
,-1)))

130 
	gªt
 = -1;

133 
lua_p›
(
L
,1);

134 ++
	gc
;

136 
lua_£â›
(
L
,
t›
);

137 if(0 =
ªt
){

138 
wpk
->
RewrôeUöt32
(
wpos
, 
c
);

140  
	gªt
;

143 
ölöe
 
un_∑ck_boﬁón
(
√t
::
SåómRPackë
 *
Ωk
,
lua_Sèã
 *
L
){

144 
	gn
 = 
Ωk
->
RódUöt8
();

145 
lua_pushboﬁón
(
L
,
n
);

148 
ölöe
 
un_∑ck_numbî
(
√t
::
SåómRPackë
 *
Ωk
,
lua_Sèã
 *
L
,
ty≥
){

149 
	gn
;

150 
	gty≥
){

151 
	gL_FLOAT
:{

152 
n
 = 
Ωk
->
RódDoubÀ
();

155 
	gL_UINT8
:{

156 
n
 = ()
Ωk
->
RódUöt8
();

159 
	gL_UINT16
:{

160 
n
 = ()
Ωk
->
RódUöt16
();

163 
	gL_UINT32
:{

164 
n
 = ()
Ωk
->
RódUöt32
();

167 
	gL_UINT64
:{

168 
n
 = ()
Ωk
->
RódUöt64
();

171 
	gL_INT8
:{

172 
n
 = ()(()
Ωk
->
RódUöt8
());

175 
	gL_INT16
:{

176 
n
 = ()(()
Ωk
->
RódUöt16
());

179 
	gL_INT32
:{

180 
n
 = ()(()
Ωk
->
RódUöt32
());

183 
	gL_INT64
:{

184 
n
 = ()(()
Ωk
->
RódUöt64
());

188 
as£π
(0);

192 
lua_pushnumbî
(
L
,
n
);

195 
ölöe
 
un_∑ck_°rög
(
√t
::
SåómRPackë
 *
Ωk
,
lua_Sèã
 *
L
){

196 
size_t
 
	gÀn
;

197 c⁄° *
	gd©a
 = (c⁄° *)
Ωk
->
RódBö
(
Àn
);

198 
lua_pushl°rög
(
L
,
d©a
,(
size_t
)
Àn
);

202 
un_∑ck_èbÀ
(
√t
::
SåómRPackë
 *
Ωk
,
lua_Sèã
 *
L
){

203 
	gsize
 = 
Ωk
->
RódUöt32
();

204 
	gi
 = 0;

205 
lua_√wèbÀ
(
L
);

206 ; 
	gi
 < 
	gsize
; ++i){

207 
	gkey_ty≥
,
	gvÆue_ty≥
;

208 
	gkey_ty≥
 = 
Ωk
->
RódUöt8
();

209 if(
	gkey_ty≥
 =
L_STRING
){

210 
un_∑ck_°rög
(
Ωk
,
L
);

211 }if(
	gkey_ty≥
 >
L_FLOAT
 && 
key_ty≥
 <
L_INT64
){

212 
un_∑ck_numbî
(
Ωk
,
L
,
key_ty≥
);

215 
	gvÆue_ty≥
 = 
Ωk
->
RódUöt8
();

216 if(
	gvÆue_ty≥
 =
L_STRING
){

217 
un_∑ck_°rög
(
Ωk
,
L
);

218 }if(
	gvÆue_ty≥
 >
L_FLOAT
 && 
vÆue_ty≥
 <
L_INT64
){

219 
un_∑ck_numbî
(
Ωk
,
L
,
vÆue_ty≥
);

220 }if(
	gvÆue_ty≥
 =
L_BOOL
){

221 
un_∑ck_boﬁón
(
Ωk
,
L
);

222 }if(
	gvÆue_ty≥
 =
L_TABLE
){

223 if(0 !
un_∑ck_èbÀ
(
Ωk
,
L
)){

228 
lua_øw£t
(
L
,-3);

233 
ölöe
 
lua_∑ckë_t
 
	$lua_gëlu≠ackë
(
lua_Sèã
 *
L
, 
ödex
) {

234  (
lua_∑ckë_t
)
	`lua_tou£rd©a
(
L
,
ödex
);

235 
	}
}

238 
	$RódUöt8
(
lua_Sèã
 *
L
){

239 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

240 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

241 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

242 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

243 
	`lua_pushöãgî
(
L
,(
lua_I¡egî
)
Ωk
->
	`RódUöt8
());

245 
	}
}

247 
	$RódUöt16
(
lua_Sèã
 *
L
){

248 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

249 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

250 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

251 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

252 
	`lua_pushöãgî
(
L
,(
lua_I¡egî
)
Ωk
->
	`RódUöt16
());

254 
	}
}

256 
	$RódUöt32
(
lua_Sèã
 *
L
){

257 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

258 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

259 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

260 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

261 
	`lua_pushöãgî
(
L
,(
lua_I¡egî
)
Ωk
->
	`RódUöt32
());

263 
	}
}

265 
	$RódI¡8
(
lua_Sèã
 *
L
){

266 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

267 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

268 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

269 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

270 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
Ωk
->
	`RódI¡8
());

272 
	}
}

274 
	$RódI¡16
(
lua_Sèã
 *
L
){

275 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

276 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

277 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

278 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

279 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
Ωk
->
	`RódI¡16
());

281 
	}
}

283 
	$RódI¡32
(
lua_Sèã
 *
L
){

284 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

285 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

286 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

287 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

288 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
Ωk
->
	`RódI¡32
());

290 
	}
}

293 
	$RódDoubÀ
(
lua_Sèã
 *
L
){

294 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

295 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

296 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

297 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

298 
	`lua_pushnumbî
(
L
,(
lua_Numbî
)
Ωk
->
	`RódDoubÀ
());

300 
	}
}

302 
	$RódSåög
(
lua_Sèã
 *
L
){

303 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

304 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

305 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

306 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

307 
size_t
 
Àn
;

308 c⁄° * 
°r
 = (c⁄° *)
Ωk
->
	`RódBö
(
Àn
);

309 if(
°r
)

310 
	`lua_pushl°rög
(
L
,
°r
,
Àn
);

312 
	`lua_pushnû
(
L
);

314 
	}
}

316 
	$RódTabÀ
(
lua_Sèã
 *
L
) {

317 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

318 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

319 
√t
::
SåómRPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::SåómRPackë*>(
p
->
∑ckë
);

320 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

321 
ty≥
 = 
Ωk
->
	`RódUöt8
();

322 if(
ty≥
 !
L_TABLE
){

323 
	`lua_pushnû
(
L
);

326 
ﬁd_t›
 = 
	`lua_gët›
(
L
);

327 
ªt
 = 
	`un_∑ck_èbÀ
(
Ωk
,
L
);

328 if(0 !
ªt
){

329 
	`lua_£â›
(
L
,
ﬁd_t›
);

330 
	`lua_pushnû
(
L
);

333 
	}
}

335 
	$WrôeUöt8
(
lua_Sèã
 *
L
){

336 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

337 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

338 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

339 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

340 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

341  
	`luaL_îr‹
(
L
,"invaildárg2");

342 
vÆue
 = ()
	`lua_toöãgî
(
L
, 2);

343 
wpk
->
	`WrôeUöt8
(
vÆue
);

345 
	}
}

347 
	$WrôeUöt16
(
lua_Sèã
 *
L
){

348 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

349 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

350 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

351 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

352 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

353  
	`luaL_îr‹
(
L
,"invaildárg2");

354 
vÆue
 = ()
	`lua_toöãgî
(
L
, 2);

355 
wpk
->
	`WrôeUöt16
(
vÆue
);

357 
	}
}

359 
	$WrôeUöt32
(
lua_Sèã
 *
L
){

360 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

361 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

362 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

363 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

364 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

365  
	`luaL_îr‹
(
L
,"invaildárg2");

366 
vÆue
 = ()
	`lua_toöãgî
(
L
, 2);

367 
wpk
->
	`WrôeUöt32
(
vÆue
);

369 
	}
}

371 
	$WrôeDoubÀ
(
lua_Sèã
 *
L
){

372 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

373 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

374 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

375 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

376 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

377  
	`luaL_îr‹
(
L
,"invaildárg2");

378 
vÆue
 = ()
	`lua_t⁄umbî
(
L
, 2);

379 
wpk
->
	`WrôeDoubÀ
(
vÆue
);

381 
	}
}

383 
	$WrôeSåög
(
lua_Sèã
 *
L
){

384 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

385 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

386 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

387 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

388 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TSTRING
)

389  
	`luaL_îr‹
(
L
,"invaildárg2");

390 
size_t
 
Àn
;

391 c⁄° *
vÆ
 = 
	`lua_tﬁ°rög
(
L
, 2,&
Àn
);

392 
wpk
->
	`WrôeBö
((*)
vÆ
,
Àn
);

394 
	}
}

396 
	$WrôeTabÀ
(
lua_Sèã
 *
L
){

397 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

398 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

399 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

400 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

401 if(
LUA_TTABLE
 !
	`lua_ty≥
(
L
, 2))

402  
	`luaL_îr‹
(
L
,"argument should beÜuaÅable");

403 if(0 !
	`luabö_∑ck_èbÀ
(
wpk
,
L
,-1))

404  
	`luaL_îr‹
(
L
,"table shouldÇot hava metatable");

406 
	}
}

408 
	$RewrôeUöt8
(
lua_Sèã
 *
L
) {

409 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

410 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

411 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

412 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

413 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

414  
	`luaL_îr‹
(
L
,"invaildárg2");

415 if(
	`lua_ty≥
(
L
,3Ë!
LUA_TNUMBER
)

416  
	`luaL_îr‹
(
L
,"invaildárg3");

417 
√t
::
wrôe_pos
 
wpos
 = (√t::wrôe_pos)
	`lua_toöãgî
(
L
,2);

418 
vÆue
 = ()
	`lua_toöãgî
(
L
, 3);

419 
wpk
->
	`RewrôeUöt8
(
wpos
, 
vÆue
);

421 
	}
}

423 
	$RewrôeUöt16
(
lua_Sèã
 *
L
) {

424 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

425 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

426 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

427 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

428 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

429  
	`luaL_îr‹
(
L
,"invaildárg2");

430 if(
	`lua_ty≥
(
L
,3Ë!
LUA_TNUMBER
)

431  
	`luaL_îr‹
(
L
,"invaildárg3");

432 
√t
::
wrôe_pos
 
wpos
 = (√t::wrôe_pos)
	`lua_toöãgî
(
L
,2);

433 
vÆue
 = ()
	`lua_toöãgî
(
L
, 3);

434 
wpk
->
	`RewrôeUöt16
(
wpos
, 
vÆue
);

436 
	}
}

438 
	$RewrôeUöt32
(
lua_Sèã
 *
L
) {

439 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

440 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

441 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

442 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

443 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

444  
	`luaL_îr‹
(
L
,"invaildárg2");

445 if(
	`lua_ty≥
(
L
,3Ë!
LUA_TNUMBER
)

446  
	`luaL_îr‹
(
L
,"invaildárg3");

447 
√t
::
wrôe_pos
 
wpos
 = (√t::wrôe_pos)
	`lua_toöãgî
(
L
,2);

448 
vÆue
 = ()
	`lua_toöãgî
(
L
, 3);

449 
wpk
->
	`RewrôeUöt32
(
wpos
, 
vÆue
);

451 
	}
}

453 
	$RewrôeDoubÀ
(
lua_Sèã
 *
L
) {

454 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

455 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

456 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

457 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

458 if(
	`lua_ty≥
(
L
,2Ë!
LUA_TNUMBER
)

459  
	`luaL_îr‹
(
L
,"invaildárg2");

460 if(
	`lua_ty≥
(
L
,3Ë!
LUA_TNUMBER
)

461  
	`luaL_îr‹
(
L
,"invaildárg3");

462 
√t
::
wrôe_pos
 
wpos
 = (√t::wrôe_pos)
	`lua_toöãgî
(
L
,2);

463 
vÆue
 = ()
	`lua_t⁄umbî
(
L
, 3);

464 
wpk
->
	`RewrôeDoubÀ
(
wpos
, 
vÆue
);

466 
	}
}

468 
	$GëWrôePos
(
lua_Sèã
 *
L
) {

469 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

470 i‡(!
p
 || !p->
∑ckë
) 
	`luaL_îr‹
(
L
,"invaild opration");

471 
√t
::
SåómWPackë
 *
wpk
 = 
dy«mic_ˇ°
<√t::SåómWPackë*>(
p
->
∑ckë
);

472 if(!
wpk
) 
	`luaL_îr‹
(
L
,"invaild opration");

473 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
wpk
->
	`GëWrôePos
());

475 
	}
}

477 
	$NewWPackë
(
lua_Sèã
 *
L
){

478 
¨gty≥
 = 
	`lua_ty≥
(
L
,1);

479 if(
¨gty≥
 =
LUA_TNUMBER
 ||árgty≥ =
LUA_TNIL
 ||árgty≥ =
LUA_TNONE
){

480 
size_t
 
Àn
 = 0;

481 if(
¨gty≥
 =
LUA_TNUMBER
) {

482 
Àn
 = 
	`lua_toöãgî
(
L
,1);

484 if(
Àn
 < 64) {

485 
Àn
 = 64;

487 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

488 
	`luaL_gëmë©abÀ
(
L
, 
LUAWPACKET_METATABLE
);

489 
	`lua_£tmë©abÀ
(
L
, -2);

490 
p
->
∑ckë
 = 
√w
 
√t
::
	`WPackë
(
Àn
);

492 } if(
¨gty≥
 =
LUA_TUSERDATA
) {

493 
lua_∑ckë_t
 
o
 = 
	`lua_gëlu≠ackë
(
L
,1);

494 if(!
o
 || !o->
∑ckë
 || o->∑ckë->
	`Ty≥
(Ë!
RPACKET
) {

495  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

497 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

498 
	`luaL_gëmë©abÀ
(
L
, 
LUAWPACKET_METATABLE
);

499 
	`lua_£tmë©abÀ
(
L
, -2);

500 
p
->
∑ckë
 = 
√w
 
√t
::
	`WPackë
(*
dy«mic_ˇ°
<√t::
RPackë
*>(
o
->packet));

502 } if(
¨gty≥
 =
LUA_TTABLE
) {

503 
√t
::
WPackë
* 
wpk
 = 
√w
Çë::
	`WPackë
(512);

504 if(0 !
	`luabö_∑ck_èbÀ
(
wpk
,
L
,-1)){

505 
dñëe
 
wpk
;

506  
	`luaL_îr‹
(
L
,"table shouldÇot hava metatable");

508 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

509 
	`luaL_gëmë©abÀ
(
L
, 
LUAWPACKET_METATABLE
);

510 
	`lua_£tmë©abÀ
(
L
, -2);

511 
p
->
∑ckë
 = 
wpk
;

515  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

517 
	}
}

519 
	$NewRPackë
(
lua_Sèã
 *
L
){

520 i‡(
	`lua_ty≥
(
L
,1Ë=
LUA_TUSERDATA
) {

521 
lua_∑ckë_t
 
o
 = 
	`lua_gëlu≠ackë
(
L
,1);

522 if(!
o
 || !o->
∑ckë
 || o->∑ckë->
	`Ty≥
(Ë!
RPACKET
) {

523  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

525 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

526 
	`luaL_gëmë©abÀ
(
L
, 
LUARPACKET_METATABLE
);

527 
	`lua_£tmë©abÀ
(
L
, -2);

528 
p
->
∑ckë
 = 
√w
 
√t
::
	`RPackë
(*
dy«mic_ˇ°
<√t::
RPackë
*>(
o
->packet));

531  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

533 
	}
}

535 
	$NewRawPackë
(
lua_Sèã
 *
L
){

536 
¨gty≥
 = 
	`lua_ty≥
(
L
,1);

537 if(
¨gty≥
 =
LUA_TSTRING
){

538 c⁄° *
°r
;

539 
size_t
 
Àn
;

540 
°r
 = 
	`lua_tﬁ°rög
(
L
,1,&
Àn
);

541 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

542 
	`luaL_gëmë©abÀ
(
L
, 
LUARAWPACKET_METATABLE
);

543 
	`lua_£tmë©abÀ
(
L
, -2);

544 
p
->
∑ckë
 = 
√w
 
√t
::
	`RawBöPackë
(
°r
,
Àn
);

546 }if(
¨gty≥
 =
LUA_TUSERDATA
){

547 
lua_∑ckë_t
 
o
 = 
	`lua_gëlu≠ackë
(
L
,1);

548 if(!
o
 || !o->
∑ckë
 || o->∑ckë->
	`Ty≥
(Ë!
RAWBINARY
) {

549  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

551 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
	`lua_√wu£rd©a
(
L
, (*p));

552 
	`luaL_gëmë©abÀ
(
L
, 
LUARAWPACKET_METATABLE
);

553 
	`lua_£tmë©abÀ
(
L
, -2);

554 
p
->
∑ckë
 = 
o
->∑ckë->
	`Cl⁄e
();

557  
	`luaL_îr‹
(
L
,"invaild opration forárg1");

559 
	}
}

562 
	$RódBö¨y
(
lua_Sèã
 *
L
){

563 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

564 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

565 
√t
::
RawBöPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::RawBöPackë*>(
p
->
∑ckë
);

566 if(!
Ωk
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

567 
size_t
 
Àn
;

568 c⁄° * 
°r
 = (c⁄° *)
Ωk
->
	`RódBö
(
Àn
);

569 if(
°r
)

570 
	`lua_pushl°rög
(
L
,
°r
,
Àn
);

572 
	`lua_pushnû
(
L
);

574 
	}
}

576 
	$de°roy_lu≠ackë
(
lua_Sèã
 *
L
) {

577 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

578 if(
p
->
∑ckë
){

579 
dñëe
 
p
->
∑ckë
;

582 
	}
}

584 
push_luaPackë
(
lua_Sèã
 *
L
,
√t
::
Packë
 *
Ωk
){

585 
lua_∑ckë_t
 
p
 = (lua_∑ckë_t)
lua_√wu£rd©a
(
L
, (*p));

586 
	gΩk
->
Ty≥
()){

587 
	gWPACKET
:
luaL_gëmë©abÀ
(
L
, 
LUAWPACKET_METATABLE
);;

588 
	gRPACKET
:
luaL_gëmë©abÀ
(
L
, 
LUARPACKET_METATABLE
);;

589 
	gHTTPPACKET
:
luaL_gëmë©abÀ
(
L
, 
LUAHTTPPACKET_METATABLE
);;

590 
	gRAWBINARY
:
luaL_gëmë©abÀ
(
L
, 
LUARAWPACKET_METATABLE
);;

592 
as£π
(0);

593 
lua_pushnû
(
L
);

597 
lua_£tmë©abÀ
(
L
, -2);

598 
	gp
->
	g∑ckë
 = 
Ωk
->
Cl⁄e
();

601 
	g√t
::
Packë
 *
	$toLuaPackë
(
lua_Sèã
 *
L
,
ödex
){

602 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,
ödex
);

603 if(
p
ËÖ->
∑ckë
;

604  
NULL
;

605 
	}
}

609 
	$GëUæ
(
lua_Sèã
 *
L
){

610 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

611 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

612 
√t
::
HâpPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::HâpPackë*>(
p
->
∑ckë
);

613 c⁄° *
uæ
 = 
Ωk
->
	`GëUæ
();

614 if(
uæ
)

615 
	`lua_push°rög
(
L
,
uæ
);

617 
	`lua_pushnû
(
L
);

619 
	}
}

621 
	$GëSètus
(
lua_Sèã
 *
L
){

622 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

623 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

624 
√t
::
HâpPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::HâpPackë*>(
p
->
∑ckë
);

625 c⁄° *
°©us
 = 
Ωk
->
	`GëSètus
();

626 if(
°©us
)

627 
	`lua_push°rög
(
L
,
°©us
);

629 
	`lua_pushnû
(
L
);

631 
	}
}

633 
	$GëBody
(
lua_Sèã
 *
L
){

634 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

635 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

636 
√t
::
HâpPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::HâpPackë*>(
p
->
∑ckë
);

637 
size_t
 
Àn
;

638 c⁄° *
body
 = 
Ωk
->
	`GëBody
(
Àn
);

639 if(
body
 && 
Àn
 > 0)

640 
	`lua_pushl°rög
(
L
,
body
,
Àn
);

642 
	`lua_pushnû
(
L
);

644 
	}
}

646 
	~"hâp-∑r£r/hâp_∑r£r.h
"

648 c⁄° *
	ghâp_mëhod_«me
[] =

650 
	#XX
(
num
, 
«me
, 
°rög
Ë#°rög,

	)

651 
HTTP_METHOD_MAP
(
XX
)

652 #unde‡
XX


655 
	$GëHódîs
(
lua_Sèã
 *
L
){

656 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

657 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

658 
√t
::
HâpPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::HâpPackë*>(
p
->
∑ckë
);

659 
Ωk
->
	`PushHódîs
(
L
);

661 
	}
}

663 
	$GëMëhod
(
lua_Sèã
 *
L
){

664 
lua_∑ckë_t
 
p
 = 
	`lua_gëlu≠ackë
(
L
,1);

665 i‡(!
p
 || !p->
∑ckë
Ë 
	`luaL_îr‹
(
L
,"invaild opration");

666 
√t
::
HâpPackë
 *
Ωk
 = 
dy«mic_ˇ°
<√t::HâpPackë*>(
p
->
∑ckë
);

667 
mëhod
 = 
Ωk
->
	`GëMëhod
();

668 if(
mëhod
 < 0)

669 
	`lua_pushnû
(
L
);

671 
	`lua_push°rög
(
L
,
hâp_mëhod_«me
[
mëhod
]);

674 
	}
}

676 
	#SET_FUNCTION
(
L
,
NAME
,
FUNC
) do{\

677 
	`lua_push°rög
(
L
,
NAME
);\

678 
	`lua_pushcfun˘i⁄
(
L
,
FUNC
);\

679 
	`lua_£âabÀ
(
L
, -3);\

680 }0)

	)

682 
	$RegLuaPackë
(
lua_Sèã
 *
L
) {

684 
luaL_Reg
 
∑ckë_mt
[] = {

685 {"__gc", 
de°roy_lu≠ackë
},

686 {
NULL
, NULL}

689 
luaL_Reg
 
Ωackë_mëhods
[] = {

690 {"RódU8", 
RódUöt8
},

691 {"RódU16", 
RódUöt16
},

692 {"RódU32", 
RódUöt32
},

693 {"RódI8", 
RódI¡8
},

694 {"RódI16", 
RódI¡16
},

695 {"RódI32", 
RódI¡32
},

696 {"RódNum", 
RódDoubÀ
},

697 {"RódSå", 
RódSåög
},

698 {"RódTabÀ", 
RódTabÀ
},

699 {
NULL
, NULL}

702 
luaL_Reg
 
w∑ckë_mëhods
[] = {

703 {"WrôeU8", 
WrôeUöt8
},

704 {"WrôeU16",
WrôeUöt16
},

705 {"WrôeU32",
WrôeUöt32
},

706 {"WrôeNum",
WrôeDoubÀ
},

707 {"WrôeSå",
WrôeSåög
},

708 {"WrôeTabÀ",
WrôeTabÀ
},

709 {"RewrôeU8",
RewrôeUöt8
},

710 {"RewrôeU16",
RewrôeUöt16
},

711 {"RewrôeU32",
RewrôeUöt32
},

712 {"RewrôeNum",
RewrôeDoubÀ
},

713 {"GëWrôePos",
GëWrôePos
},

714 {
NULL
, NULL}

717 
luaL_Reg
 
øw∑ckë_mëhods
[] = {

718 {"RódBö¨y", 
RódBö¨y
},

719 {
NULL
, NULL}

722 
luaL_Reg
 
hâµackë_mëhods
[] = {

723 {"GëUæ", 
GëUæ
},

724 {"GëSètus",
GëSètus
},

725 {"GëBody",
GëBody
},

726 {"GëHódîs",
GëHódîs
},

727 {"GëMëhod",
GëMëhod
},

728 {
NULL
, NULL}

732 
	`luaL_√wmë©abÀ
(
L
, 
LUARPACKET_METATABLE
);

733 
	`luaL_£tfuncs
(
L
, 
∑ckë_mt
, 0);

735 
	`luaL_√wlib
(
L
, 
Ωackë_mëhods
);

736 
	`lua_£tfõld
(
L
, -2, "__index");

737 
	`lua_p›
(
L
, 1);

739 
	`luaL_√wmë©abÀ
(
L
, 
LUAWPACKET_METATABLE
);

740 
	`luaL_£tfuncs
(
L
, 
∑ckë_mt
, 0);

742 
	`luaL_√wlib
(
L
, 
w∑ckë_mëhods
);

743 
	`lua_£tfõld
(
L
, -2, "__index");

744 
	`lua_p›
(
L
, 1);

746 
	`luaL_√wmë©abÀ
(
L
, 
LUARAWPACKET_METATABLE
);

747 
	`luaL_£tfuncs
(
L
, 
∑ckë_mt
, 0);

749 
	`luaL_√wlib
(
L
, 
øw∑ckë_mëhods
);

750 
	`lua_£tfõld
(
L
, -2, "__index");

751 
	`lua_p›
(
L
, 1);

754 
	`luaL_√wmë©abÀ
(
L
, 
LUAHTTPPACKET_METATABLE
);

755 
	`luaL_£tfuncs
(
L
, 
∑ckë_mt
, 0);

757 
	`luaL_√wlib
(
L
, 
hâµackë_mëhods
);

758 
	`lua_£tfõld
(
L
, -2, "__index");

759 
	`lua_p›
(
L
, 1);

761 
	`SET_FUNCTION
(
L
,"NewWPackë",
NewWPackë
);

762 
	`SET_FUNCTION
(
L
,"NewRPackë",
NewRPackë
);

763 
	`SET_FUNCTION
(
L
,"NewRawPackë",
NewRawPackë
);

765 
	}
}

	@LuaPacket.h

1 #i‚de‡
_LUAPACKET_H


2 
	#_LUAPACKET_H


	)

5 
	~<lua.h
>

6 
	~<œuxlib.h
>

7 
	~<luÆib.h
>

10 
	~"Sockë.h
"

12 
RegLuaPackë
(
lua_Sèã
 *
L
);

13 
push_luaPackë
(
lua_Sèã
 *
L
,
√t
::
Packë
 *
Ωk
);

14 
	g√t
::
Packë
 *
toLuaPackë
(
lua_Sèã
 *
L
,
ödex
);

	@LuaUtil.h

2 #i‚de‡
_LUAUTIL_H


3 
	#_LUAUTIL_H


	)

6 
	~<lua.h
>

7 
	~<œuxlib.h
>

8 
	~<luÆib.h
>

10 
	~<°rög
>

12 ˛as†
	cluaRef
{

13 
public
:

14 
	$luaRef
(
lua_Sèã
 *
L
,
idx
):
	`L
(L),
	`rödex
(-1){

15 if(
L
){

16 
	`lua_pushvÆue
(
L
,
idx
);

17 
this
->
rödex
 = 
	`luaL_ªf
(
L
,
LUA_REGISTRYINDEX
);

18 if(
LUA_REFNIL
 =
this
->
rödex
)

19 
this
->
L
 = 
NULL
;

20 if(
L
Ë
cou¡î
 = 
√w
 (1);

24 
luaRef
 &
›î©‹
 = (c⁄°ÜuaRe‡& 
Ÿhî
)

26 if(
this
 !&
Ÿhî
 && othî.
L
)

28 if(
L
 && 
cou¡î
 && --(*counter) <= 0)

30 
	`luaL_uƒef
(
this
->
L
,
LUA_REGISTRYINDEX
,this->
rödex
);

31 
dñëe
 
cou¡î
;

33 
cou¡î
 = 
Ÿhî
.counter;

34 ++(*
cou¡î
);

35 
this
->
rödex
 = 
Ÿhî
.rindex;

36 
this
->
L
 = 
Ÿhî
.L;

38  *
this
;

39 
	}
}

41 
	$luaRef
(c⁄° 
luaRef
 &
Ÿhî
)

42 :
	`L
(
Ÿhî
.
L
),
	`rödex
(Ÿhî.
rödex
),
	$cou¡î
(
Ÿhî
.
cou¡î
)

44 if(
L
 && 
cou¡î
) ++(*counter);

45 
	}
}

47 ~
	$luaRef
(){

48 if(
L
 && 
cou¡î
){

49 if(!(--(*
cou¡î
)))

51 
	`luaL_uƒef
(
L
,
LUA_REGISTRYINDEX
,
rödex
);

52 
dñëe
 
cou¡î
;

55 
	}
}

57 
lua_Sèã
 *
	$GëLSèã
(){

58  
L
;

59 
	}
}

61 
	$GëIndex
(){

62  
rödex
;

63 
	}
}

65 
¥iv©e
:

66 
lua_Sèã
 *
L
;

67 
rödex
;

68 * 
cou¡î
;

	@NetLua.cpp

1 
	~"LuaUtû.h
"

2 
	~"LuaPackë.h
"

3 
	~"Sockë.h
"

4 
	~"Ró˘‹.h
"

5 
	~"RPackë.h
"

6 
	~"WPackë.h
"

7 
	~"SysTime.h
"

8 
	~"HâpDecodî.h
"

9 
	~<sig«l.h
>

11 
«me•a˚
 
	g√t
{

12 
ölöe
 
boﬁ
 
öô
(){

13 #ifde‡
_WIN


14 
WSADATA
 
	gwßD©a
;

15 if(
WSASèπup
(0x0202,&
wßD©a
) != 0)

17 
WSACÀ™up
();

18  
	gÁl£
;

21 
sig«l
(
SIGPIPE
,
SIG_IGN
);

23  
	gåue
;

26 
ölöe
 
˛ón
(){

27 #ifde‡
_WIN


28 
WSACÀ™up
();

34 
	g√t
::
Ró˘‹
 *
g_ªa˘‹
 = 
NULL
;

36 
boﬁ
 
	$Inô
(){

37 if(
g_ªa˘‹
Ë 
Ál£
;

38 if(!
√t
::
	`öô
()Ë 
Ál£
;

39 
g_ªa˘‹
 = 
√w
 
√t
::
Ró˘‹
;

40  
åue
;

41 
	}
}

44 
	$lua_Clo£
(
lua_Sèã
 *
L
){

45 
√t
::
Sockë
 *
s
 = (√t::Sockë*)
	`lua_tou£rd©a
(
L
,1);

46 
s
->
	`Clo£
();

48 
	}
}

50 
	$lua_Run
(
lua_Sèã
 *
L
){

51 
g_ªa˘‹
->
	`Lo›On˚
(
	`lua_toöãgî
(
L
,1));

53 
	}
}

55 
	$lua_C⁄√˘
(
lua_Sèã
 *
L
){

56 c⁄° *
ù
 = 
	`lua_to°rög
(
L
, 1);

57 
p‹t
 = 
	`lua_toöãgî
(
L
, 2);

58 
luaRef
 
	`cb
(
L
,3);

59 
√t
::
Sockë
 *
s
 = 
√w
Çë::
	`Sockë
(
AF_INET
, 
SOCK_STREAM
,
IPPROTO_TCP
);

60 
	`lua_pushboﬁón
(
L
,()
s
->
	`C⁄√˘
(
g_ªa˘‹
,
ù
,
p‹t
,
cb
));

62 
	}
}

64 
	$lua_Li°í
(
lua_Sèã
 *
L
){

65 c⁄° *
ù
 = 
	`lua_to°rög
(
L
, 1);

66 
p‹t
 = 
	`lua_toöãgî
(
L
, 2);

67 
luaRef
 
	`cb
(
L
,3);

68 
√t
::
Sockë
 *
s
 = 
√w
Çë::
	`Sockë
(
AF_INET
, 
SOCK_STREAM
,
IPPROTO_TCP
);

69 if(0 =
s
->
	`Li°í
(
g_ªa˘‹
,
ù
,
p‹t
,
cb
)){

70 
	`lua_pushlightu£rd©a
(
L
,
s
);

72 
	`lua_pushnû
(
L
);

74 
	}
}

76 
	$lua_SídWPackë
(
lua_Sèã
 *
L
){

77 
√t
::
Sockë
 *
s
 = (√t::Sockë*)
	`lua_tou£rd©a
(
L
,1);

78 
√t
::
Packë
 *
wpk
 = 
	`toLuaPackë
(
L
, 2);

79 
ªt
;

80 if(
	`lua_gët›
(
L
) == 3){

81 
luaRef
 
	`cb
(
L
,3);

82 
ªt
 = 
s
->
	`Síd
(
wpk
,&
cb
);

84 
ªt
 = 
s
->
	`Síd
(
wpk
,
NULL
);

86 
	`lua_pushboﬁón
(
L
,
ªt
 == 0 ? 1:0);

88 
	}
}

90 
	$lua_GëSysTick
(
lua_Sèã
 *
L
){

91 
	`lua_pushnumbî
(
L
,
	`GëSy°emMs64
());

93 
	}
}

95 
	$lua_Böd
(
lua_Sèã
 *
L
){

96 
√t
::
Sockë
 *
s
 = (√t::Sockë*)
	`lua_tou£rd©a
(
L
,1);

97 
√t
::
Decodî
 *
d
 = (√t::Decodî*)
	`lua_tou£rd©a
(
L
,2);

98 
luaRef
 
	`cb_∑ckë
(
L
,3);

99 
luaRef
 
	`cb_disc⁄√˘ed
(
L
,4);

100 
	`lua_pushboﬁón
(
L
,
s
->
	`Böd
(
g_ªa˘‹
,
d
,
cb_∑ckë
,
cb_disc⁄√˘ed
));

102 
	}
}

104 
	$lua_PackëDecodî
(
lua_Sèã
 *
L
){

105 
	`lua_pushlightu£rd©a
(
L
,
√w
 
√t
::
PackëDecodî
);

107 
	}
}

109 
	$lua_HâpDecodî
(
lua_Sèã
 *
L
){

110 
	`lua_pushlightu£rd©a
(
L
,
√w
 
√t
::
	`HâpDecodî
(
	`lua_toöãgî
(L,1)));

112 
	}
}

114 
	$lua_Sockë_Rëaö
(
lua_Sèã
 *
L
){

115 
√t
::
Sockë
 *
s
 = (√t::Sockë*)
	`lua_tou£rd©a
(
L
,1);

116 
s
->
	`IncRef
();

118 
	}
}

120 
	$lua_Sockë_Rñó£
(
lua_Sèã
 *
L
){

121 
√t
::
Sockë
 *
s
 = (√t::Sockë*)
	`lua_tou£rd©a
(
L
,1);

122 
s
->
	`DecRef
();

124 
	}
}

126 
	#REGISTER_CONST
(
L
,
N
) do{\

127 
	`lua_push°rög
(
L
, #N);\

128 
	`lua_pushöãgî
(
L
, 
N
);\

129 
	`lua_£âabÀ
(
L
, -3);\

130 }0)

	)

132 
	#REGISTER_FUNCTION
(
NAME
,
FUNC
) do{\

133 
	`lua_push°rög
(
L
,
NAME
);\

134 
	`lua_pushcfun˘i⁄
(
L
,
FUNC
);\

135 
	`lua_£âabÀ
(
L
, -3);\

136 }0)

	)

138 
boﬁ
 
	$Reg2Lua
(
lua_Sèã
 *
L
){

140 if(!
	`Inô
()Ë 
Ál£
;

142 
	`lua_√wèbÀ
(
L
);

143 
	`RegLuaPackë
(
L
);

144 
	`REGISTER_FUNCTION
("SockëRëaö", &
lua_Sockë_Rëaö
);

145 
	`REGISTER_FUNCTION
("SockëRñó£", &
lua_Sockë_Rñó£
);

146 
	`REGISTER_FUNCTION
("C⁄√˘", &
lua_C⁄√˘
);

147 
	`REGISTER_FUNCTION
("Li°í", &
lua_Li°í
);

148 
	`REGISTER_FUNCTION
("Clo£", &
lua_Clo£
);

149 
	`REGISTER_FUNCTION
("Run", &
lua_Run
);

150 
	`REGISTER_FUNCTION
("Böd", &
lua_Böd
);

151 
	`REGISTER_FUNCTION
("Síd", &
lua_SídWPackë
);

152 
	`REGISTER_FUNCTION
("GëSysTick", &
lua_GëSysTick
);

153 
	`REGISTER_FUNCTION
("PackëDecodî", &
lua_PackëDecodî
);

154 
	`REGISTER_FUNCTION
("HâpDecodî", &
lua_HâpDecodî
);

155 
	`lua_£tglobÆ
(
L
,"C");

156  
åue
;

157 
	}
}

	@Packet.h

1 #i‚de‡
_PACKET_H


2 
	#_PACKET_H


	)

4 
	~"ByãBuf„r.h
"

7 
	mWPACKET
 = 1,

8 
	mRPACKET
,

9 
	mHTTPPACKET
,

10 
	mRAWBINARY
,

13 
«me•a˚
 
	g√t
{

15 ˛as†
	cPackë
{

16 
	gpublic
:

17 
Packë
(
ty≥
,
ByãBuf„r
 *
buff
):
m_ty≥
—y≥),
m_buf„r
(
NULL
){

18 if(
	gbuff
){

19 
	gm_buf„r
 = 
buff
->
IncRef
();

23 
vútuÆ
 
Packë
 *
Cl⁄e
() = 0;

25 
vútuÆ
 
Packë
 *
MakeWrôePackë
() = 0;

27 
vútuÆ
 
Packë
 *
MakeRódPackë
() = 0;

29 
	gvútuÆ
 ~
Packë
(){

30 if(
	gm_buf„r
Ëm_buf„r->
DecRef
();

32 
Ty≥
(Ëc⁄°{ 
	gm_ty≥
;}

34 
vútuÆ
 
size_t
 
PkLí
() = 0;

36 
vútuÆ
 
size_t
 
PkTŸÆ
() = 0;

38 
ByãBuf„r
 *
Buf„r
(Ë{ 
	gm_buf„r
;}

40 
	g¥Ÿe˘ed
:

41 
m_ty≥
;

42 
ByãBuf„r
 *
	gm_buf„r
;

47 ˛as†
	cSåómRPackë
{

48 
	gpublic
:

49 
vútuÆ
 
RódUöt8
() = 0;

51 
vútuÆ
 
RódUöt16
() = 0;

53 
vútuÆ
 
RódUöt32
() = 0;

55 
vútuÆ
 
PìkUöt16
() = 0;

57 
vútuÆ
 
PìkUöt32
() = 0;

59 
vútuÆ
 
RódI¡8
() = 0;

61 
vútuÆ
 
RódI¡16
() = 0;

63 
vútuÆ
 
RódI¡32
() = 0;

65 
vútuÆ
 
RódUöt64
() = 0;

67 
vútuÆ
 
RódFlﬂt
() = 0;

69 
vútuÆ
 
RódDoubÀ
() = 0;

71 
vútuÆ
 *
RódBö
(
size_t
 &
Àn
) = 0;

73 
vútuÆ
 c⁄° *
RódSåög
() = 0;

76 
size_t
 
	twrôe_pos
;

78 ˛as†
	cSåómWPackë
{

79 
	gpublic
:

81 
vútuÆ
 
size_t
 
GëWrôePos
() = 0;

84 
vútuÆ
 
RewrôeUöt8
(
wrôe_pos
 
wp
,
v
) = 0;

86 
vútuÆ
 
RewrôeUöt16
(
wrôe_pos
 
wp
,
v
) = 0;

88 
vútuÆ
 
RewrôeUöt32
(
wrôe_pos
 
wp
,
v
) = 0;

90 
vútuÆ
 
RewrôeUöt64
(
wrôe_pos
 
wp
,
v
) = 0;

92 
vútuÆ
 
RewrôeDoubÀ
(
wrôe_pos
 
wp
,
v
) = 0;

94 
vútuÆ
 
WrôeUöt8
(
v
) = 0;

97 
vútuÆ
 
WrôeUöt16
(
v
) = 0;

99 
vútuÆ
 
WrôeUöt32
(
v
) = 0;

101 
vútuÆ
 
WrôeUöt64
(
v
) = 0;

103 
vútuÆ
 
WrôeFlﬂt
(
v
) = 0;

105 
vútuÆ
 
WrôeDoubÀ
(
v
) = 0;

107 
vútuÆ
 
WrôeBö
(*
v
,
size_t
 
Àn
) = 0;

109 
vútuÆ
 
WrôeSåög
(c⁄° *
v
) = 0;

	@RPacket.cpp

1 
	~"RPackë.h
"

2 
	~"WPackë.h
"

3 
«me•a˚
 
	g√t
{

4 
	gRPackë
::
RPackë
(c⁄° 
WPackë
 &
o
):
Packë
(
RPACKET
,o.
m_buf„r
){

5 
	gΩos
 = 4;

6 
	gpkÀn
 = 
m_buf„r
->
RódUöt32
(0);

7 
	gd©¨emaö
 = 
pkÀn
;

11 
Packë
 *
	gRPackë
::
MakeWrôePackë
(){

12  
√w
 
WPackë
(*
this
);

	@RPacket.h

1 #i‚de‡
_RPACKET_H


2 
	#_RPACKET_H


	)

4 
	~"Packë.h
"

6 
«me•a˚
 
	g√t
{

8 
˛ass
 
	gWPackë
;

9 
˛ass
 
	gRPackë
 : 
public
 
Packë
,publi¯
	gSåómRPackë
{

10 
‰õnd
 
˛ass
 
	gWPackë
;

11 
	gpublic
:

12 
RPackë
(
ByãBuf„r
 *
buf„r
):
Packë
(
RPACKET
,buf„r),
Ωos
(4){

13 
	gpkÀn
 = 
m_buf„r
->
RódUöt32
(0);

14 
	gd©¨emaö
 = 
pkÀn
;

17 
RPackë
(c⁄° RPackë &
o
):
Packë
(
RPACKET
,o.
m_buf„r
),
Ωos
(o.Ωos),
pkÀn
(o.pklen){

18 
	gd©¨emaö
 = 
pkÀn
;

21 
Packë
 *
Cl⁄e
(){

22  
√w
 
RPackë
(*
this
);

25 
Packë
 *
MakeWrôePackë
();

27 
Packë
 *
MakeRódPackë
(){

28  
Cl⁄e
();

31 
RPackë
(c⁄° 
WPackë
 &
o
);

33 ~
RPackë
(){}

35 
RódUöt8
(){

36 if(
	gd©¨emaö
 < ())  0;

37 
	gªt
 = 
m_buf„r
->
RódUöt8
(
Ωos
);

38 
	gΩos
 +(
ªt
);

39 
	gd©¨emaö
 -(
ªt
);

40  
	gªt
;

43 
RódUöt16
(){

44 if(
	gd©¨emaö
 < ())  0;

45 
	gªt
 = 
m_buf„r
->
RódUöt16
(
Ωos
);

46 
	gΩos
 +(
ªt
);

47 
	gd©¨emaö
 -(
ªt
);

48  
	gªt
;

51 
RódUöt32
(){

52 if(
	gd©¨emaö
 < ())  0;

53 
	gªt
 = 
m_buf„r
->
RódUöt32
(
Ωos
);

54 
	gΩos
 +(
ªt
);

55 
	gd©¨emaö
 -(
ªt
);

56  
	gªt
;

59 
PìkUöt16
(){

60 if(
	gd©¨emaö
 < ())  0;

61 
	gªt
 = 
m_buf„r
->
RódUöt16
(
Ωos
);

62  
	gªt
;

65 
PìkUöt32
(){

66 if(
	gd©¨emaö
 < ())  0;

67 
	gªt
 = 
m_buf„r
->
RódUöt32
(
Ωos
);

68  
	gªt
;

71 
RódI¡8
(){

72 i‡(
	gd©¨emaö
 < ())  0;

73 
	gªt
 = 
m_buf„r
->
RódI¡8
(
Ωos
);

74 
	gΩos
 +(
ªt
);

75 
	gd©¨emaö
 -(
ªt
);

76  
	gªt
;

79 
RódI¡16
(){

80 i‡(
	gd©¨emaö
 < ())  0;

81 
	gªt
 = 
m_buf„r
->
RódI¡16
(
Ωos
);

82 
	gΩos
 +(
ªt
);

83 
	gd©¨emaö
 -(
ªt
);

84  
	gªt
;

88 
RódI¡32
(){

89 i‡(
	gd©¨emaö
 < ())  0;

90 
	gªt
 = 
m_buf„r
->
RódI¡32
(
Ωos
);

91 
	gΩos
 +(
ªt
);

92 
	gd©¨emaö
 -(
ªt
);

93  
	gªt
;

97 
RódUöt64
(){

98 if(
	gd©¨emaö
 < ())  0;

99 
	gªt
 = 
m_buf„r
->
RódUöt64
(
Ωos
);

100 
	gΩos
 +(
ªt
);

101 
	gd©¨emaö
 -(
ªt
);

102  
	gªt
;

105 
RódFlﬂt
(){

106 if(
	gd©¨emaö
 < ())  0;

107 
	gªt
 = 
m_buf„r
->
RódFlﬂt
(
Ωos
);

108 
	gΩos
 +(
ªt
);

109 
	gd©¨emaö
 -(
ªt
);

110  
	gªt
;

113 
RódDoubÀ
(){

114 if(
	gd©¨emaö
 < ())  0;

115 
	gªt
 = 
m_buf„r
->
RódDoubÀ
(
Ωos
);

116 
	gΩos
 +(
ªt
);

117 
	gd©¨emaö
 -(
ªt
);

118  
	gªt
;

121 *
RódBö
(
size_t
 &
Àn
){

122 
	gÀn
 = 
RódUöt32
();

123 if(
	gÀn
 <0 || 
Àn
 > 
d©¨emaö
Ë 
NULL
;

124 *
	gªt
 = 
m_buf„r
->
RódBö
(
Ωos
);

125 
	gΩos
 +
Àn
;

126 
	gd©¨emaö
 -
Àn
;

127  
	gªt
;

130 c⁄° *
RódSåög
(){

131 
size_t
 
	gÀn
;

132 c⁄° *
	g°r
 = (c⁄° *)
RódBö
(
Àn
);

133 if(
	g°r
 && så[
Àn
-1] == '\0')

134  
°r
;

135  
	gNULL
;

138 
size_t
 
PkLí
(){

139  
	gpkÀn
;

142 
size_t
 
PkTŸÆ
(){

143  
PkLí
(Ë+ (
	guöt32_t
);

146 
	g¥iv©e
:

148 
RPackë
& 
›î©‹
 = (c⁄° RPackë &
o
){

149 if(
this
 !&
o
){

150 (
c⁄°_ˇ°
<
ByãBuf„r
*>(
m_buf„r
))->
DecRef
();

151 
	gm_buf„r
 = 
c⁄°_ˇ°
<
ByãBuf„r
*>(
o
.
m_buf„r
)->
IncRef
();

152 
	gΩos
 = 
o
.
Ωos
;

154  *
	gthis
;

156 
size_t
 
	gΩos
;

157 
size_t
 
	gpkÀn
;

158 
size_t
 
	gd©¨emaö
;

	@RawBinPacket.h

1 #i‚de‡
_RAWBINPACKET_H


2 
	#_RAWBINPACKET_H


	)

5 
	~"Packë.h
"

8 
«me•a˚
 
	g√t
{

10 ˛as†
	cRawBöPackë
 : 
public
 
Packë
{

12 
public
:

13 
RawBöPackë
(c⁄° *
d©a
,
size_t
 
Àn
):
Packë
(
RAWBINARY
,
√w
 
ByãBuf„r
÷í)),
m_size
(len)

15 
	gm_buf„r
->
WrôeBö
(0,(*)
d©a
,
Àn
);

18 
RawBöPackë
(c⁄° RawBöPackë &
o
):
Packë
(
RAWBINARY
,o.
m_buf„r
),
m_size
(o.m_size)

21 
	gRawBöPackë
& 
	g›î©‹
 = (c⁄° 
RawBöPackë
 &
o
){

22 if(
this
 !&
o
){

23 if(
m_buf„r
){

24 
m_buf„r
->
DecRef
();

25 
	gm_buf„r
 = 
NULL
;

26 
	gm_size
 = 0;

28 if(
	go
.
	gm_buf„r
){

29 
	gm_buf„r
 = 
o
.
m_buf„r
->
IncRef
();

30 
	gm_size
 = 
o
.
m_size
;

33  *
	gthis
;

36 c⁄° *
RódBö
(
size_t
 &
Àn
){

37 
	gÀn
 = 
m_size
;

38  (c⁄° *)(&
	gm_buf„r
->
Buf
()[0]);

41 
Packë
 *
Cl⁄e
(){

42  
√w
 
RawBöPackë
(*
this
);

45 
Packë
 *
MakeWrôePackë
(){

46  
	gNULL
;

49 
Packë
 *
MakeRódPackë
(){

50  
Cl⁄e
();

53 ~
RawBöPackë
(){}

55 
size_t
 
PkLí
(){

56  
	gm_size
;

59 
size_t
 
PkTŸÆ
(){

60  
PkLí
();

63 
	g¥iv©e
:

64 
size_t
 
m_size
;

	@Reactor.cpp

1 
	~"Ró˘‹.h
"

2 
	~"SysTime.h
"

3 
«me•a˚
 
	g√t
{

5 
boﬁ
 
	gRó˘‹
::
Add
(
Sockë
 *
s
,
evít
)

7 if(
	gs
->
	gªa˘‹
 && s->ªa˘‹ !
this
)

8  
Ál£
;

9 
	gs
->
	gevít
 |
evít
;

10 
	gs
->
	gªa˘‹
 = 
this
;

11 
	gsockës
.
Push
(
s
);

12  
	gåue
;

15 
boﬁ
 
	gRó˘‹
::
Remove
(
Sockë
 *
s
,
evít
)

17 if(!
	gs
->
	gªa˘‹
 || s->ªa˘‹ !
this
)

18  
Ál£
;

20 
	gs
->
	gevít
 &(~
evít
);

21 if(
	gs
->
	gevít
 == 0)

22 
sockës
.
Remove
(
s
);

23  
	gåue
;

26 
	gRó˘‹
::
Lo›On˚
(
ms
){

27 
fd_£t
 
r_£t
;

28 
fd_£t
 
	gw_£t
;

29 
fd_£t
 
	ge_£t
;

30 
	gmaxfd
 = 0;

31 
dnode
 *
	gnode
 = 
sockës
.
Begö
();

32 
dnode
 *
	gíd
 = 
sockës
.
End
();

33 
FD_ZERO
(&
r_£t
);

34 
FD_ZERO
(&
w_£t
);

35 
FD_ZERO
(&
e_£t
);

36 ; 
	gnode
 !
íd
;)

38 
Sockë
 *
	gs
 = (Sockë*)
node
;

39 if(
	gs
->
Evít
(Ë& 
	gEV_READ
)

40 
FD_SET
(
s
->
Fd
(),&
r_£t
);

41 if(
	gs
->
Evít
(Ë& 
	gEV_WRITE
)

42 
FD_SET
(
s
->
Fd
(),&
w_£t
);

43 
FD_SET
(
s
->
Fd
(),&
e_£t
);

44 if(()
	gs
->
Fd
(Ë> 
	gmaxfd
)

45 
	gmaxfd
 = 
s
->
Fd
();

46 
	gnode
 = 
node
->
√xt
;

48 
timevÆ
 
	gtimeout
;

49 
	gtimeout
.
	gtv_£c
 = 
ms
/1000;

50 
	gtimeout
.
	gtv_u£c
 = (
ms
%1000)*1000;

51 
	gn
;

52 #ifde‡
WIN32


53 if((
	gn

TEMP_FAILURE_RETRY
(::
£À˘
(0,&
r_£t
,&
w_£t
,&
e_£t
, &
timeout
))) > 0)

55 
	gfd_£tsize
 = (
maxfd
 + 1Ë< 
FD_SETSIZE
 ? (maxfd + 1) : FD_SETSIZE;

56 if((
	gn

TEMP_FAILURE_RETRY
(::
£À˘
(
fd_£tsize
,&
r_£t
,&
w_£t
,&
e_£t
, &
timeout
))) > 0)

59 
size_t
 
	gsize
 = 
sockës
.
Size
();

60 
	gsize
){

61 
Sockë
 *
	gs
 = (Sockë*)
sockës
.
P›
();

62 
	gs
->
IncRef
();

63 if(
FD_ISSET
(
s
->
Fd
(), &
e_£t
Ë|| ((
	gs
->
Evít
(Ë& 
	gEV_READ
Ë&& FD_ISSET(s->Fd(), &
r_£t
)))

64 
	gs
->
⁄RódA˘
();

65 if((
	gs
->
Evít
(Ë& 
	gEV_WRITE
Ë&& 
FD_ISSET
(
s
->
Fd
(), &
w_£t
))

66 
	gs
->
⁄WrôeA˘
();

67 if(
	gs
->
	g°©e
 !
˛o£ög
 && 
s
->
°©e
 != 0)

68 
sockës
.
Push
(
s
);

69 
	gs
->
DecRef
();

70 --
	gsize
;

	@Reactor.h

1 #i‚de‡
_REACTOR_H


2 
	#_REACTOR_H


	)

4 
	~<m≠
>

5 
	~"Sockë.h
"

6 
«me•a˚
 
	g√t
{

8 ˛as†
	cRó˘‹
{

10 
	gpublic
:

11 
Lo›On˚
(
ms
 = 0);

12 
boﬁ
 
Add
(
Sockë
*,
evít
);

13 
boﬁ
 
Remove
(
Sockë
*,
evít
);

14 
	g¥iv©e
:

15 
dli°
 
sockës
;

	@Socket.cpp

1 
	~"Sockë.h
"

2 
	~"Ró˘‹.h
"

3 
	~"SysTime.h
"

4 
	~"LuaPackë.h
"

5 
«me•a˚
 
	g√t
{

7 
	gSockë
::
Sockë
(
Ámûy
,
ty≥
,
¥Ÿocﬁ
):
ªa˘‹
(
NULL
),

8 
wrôóbÀ
(
åue
),
ªfCou¡
(1),
°©e
(0),
wpos
(0),
upos
(0),
evít
(0),
ud
(
NULL
),

9 
cb_c⁄√˘
(
NULL
,0),
cb_√w_˛õ¡
(NULL,0),

10 
cb_disc⁄√˘ed
(
NULL
,0),
cb_∑ckë
(NULL,0),
decodî
(NULL)

12 
	gfd
 = ::
sockë
(
Ámûy
,
ty≥
,
¥Ÿocﬁ
);

13 if(
	gfd
 < 0Ë
exô
(0);

16 
	gSockë
::
Sockë
(
SOCKET
 
fd
):fd(fd),
ªa˘‹
(
NULL
),

17 
wrôóbÀ
(
åue
),
ªfCou¡
(1),
°©e
(0),
wpos
(0),
upos
(0),
evít
(0),
ud
(
NULL
),

18 
cb_c⁄√˘
(
NULL
,0),
cb_√w_˛õ¡
(NULL,0),

19 
cb_disc⁄√˘ed
(
NULL
,0),
cb_∑ckë
(NULL,0),
decodî
(NULL)

22 
boﬁ
 
	gSockë
::
Li°í
(
Ró˘‹
 *
ªa˘‹
,c⁄° *
ù
,
p‹t
,
luaRef
 &
cb
)

24 if(!
	gªa˘‹
 || !
	gù
 || !
	gcb
.
GëLSèã
()Ë 
	gÁl£
;

25 
sockaddr_ö
 
	g£rvaddr
;

26 
mem£t
((*)&
£rvaddr
,0,(servaddr));

27 
	g£rvaddr
.
	gsö_Ámûy
 = 
AF_INET
;

28 
	g£rvaddr
.
	gsö_addr
.
	gs_addr
 = 
öë_addr
(
ù
);

29 
	g£rvaddr
.
	gsö_p‹t
 = 
ht⁄s
(
p‹t
);

30 if(::
böd
(
fd
,(c⁄° 
sockaddr
 *)&
£rvaddr
,(servaddr)) < 0)

31  
	gÁl£
;

33 if(::
li°í
(
fd
,256) < 0)

34  
	gÁl£
;

35 
SëN⁄Block
();

36 
	gcb_√w_˛õ¡
 = 
cb
;

37 
	gªa˘‹
->
Add
(
this
,
EV_READ
);

38 
	g°©e
 = 
li°íög
;

39  
	gåue
;

42 
boﬁ
 
	gSockë
::
C⁄√˘
(
Ró˘‹
 *
ªa˘‹
,c⁄° *
ho°
,
p‹t
,
luaRef
 &
cb
)

44 if(!
	gªa˘‹
 || !
	gho°
 || !
	gcb
.
GëLSèã
()Ë 
	gÁl£
;

46 
sockaddr_ö
 
	gªmŸe
;

47 
	gªmŸe
.
	gsö_Ámûy
 = 
AF_INET
;

48 
	gªmŸe
.
	gsö_p‹t
 = 
ht⁄s
(
p‹t
);

50 
ho°ít
 *
	gpho°ít
 = 
gëho°by«me
(
ho°
);

51 if(
	gpho°ít
)

52 
	gªmŸe
.
	gsö_addr
.
	gs_addr
 = *((*)
pho°ít
->
h_addr_li°
[0]);

54 
	gªmŸe
.
	gsö_addr
.
	gs_addr
 = 
öë_addr
(
ho°
);

55 if(!
SëN⁄Block
()){

56 
¥ötf
("Connect SetNonBlockÉrror\n");

57  
	gÁl£
;

59 
	gcb_c⁄√˘
 = 
cb
;

60 #ifde‡
_WIN


61 if(::
c⁄√˘
(
fd
,(c⁄° 
sockaddr
 *)&
ªmŸe
,‘emŸe)Ë!
SOCKET_ERROR
){

63 if(::
c⁄√˘
(
fd
,(c⁄° 
sockaddr
 *)&
ªmŸe
,(remote)) == 0){

65 
°©e
 = 
e°ablish
;

66 
do_cb_c⁄√˘
(
this
,1);

67  
	gåue
;

69 #ifde‡
_WIN


70 if(
WSAGëLa°Eº‹
(Ë!
WSAEWOULDBLOCK
){

72 if(
î∫o
 !
EINPROGRESS
){

74 
do_cb_c⁄√˘
(
this
,0);

78 
	gªa˘‹
->
Add
(
this
,
EV_WRITE
);

79 
	g°©e
 = 
c⁄√˘ög
;

80  
	gåue
;

84 
	gSockë
::
doAc˚±
(){

86 
SOCKET
 
	g˛õ¡fd
;

87 
sockaddr
 
	gß
;

88 #ifde‡
_WIN


89 
	gaddæí
 = (
ß
);

91 
sockÀn_t
 
	gaddæí
 = (
ß
);

93 if((
	g˛õ¡fd
 = 
TEMP_FAILURE_RETRY
(::
ac˚±
(
fd
,&
ß
,&
addæí
))Ë=
INVAILD_FD
){

96 
Sockë
 *
	g˛õ¡
 = 
√w
 Sockë(
˛õ¡fd
);

97 
	g˛õ¡
->
	g°©e
 = 
e°ablish
;

98 
do_cb_√w˛õ¡
(
this
,
˛õ¡
);

102 
	gSockë
::
u≈ack
(){

104 
size_t
 
pos
 = 0;

105 
size_t
 
	gsize
 = (size_t)
upos
 - 
pos
;

106 
size_t
 
	gpkÀn
;

107 
Packë
 *
	g∑ckë
;

108 
	gîr
;

110 
	g∑ckë
 = 
this
->
decodî
->
u≈ack
(
u≈ackbuf
,
pos
,
size
,
max∑ckë_size
,
pkÀn
,
îr
);

111 if(
	gîr
){

112 
Clo£
();

116 if(
	gpkÀn
 > 0){

117 
	gpos
 +
pkÀn
;

118 
	gsize
 = 
upos
 - 
pos
;

120 if(
	g∑ckë
){

121 
do_cb_∑ckë
(
this
,
∑ckë
);

122 
dñëe
 
	g∑ckë
;

125 }
	gsize
 && 
	g°©e
 =
e°ablish
);

126 if(
	gsize
)

127 
memmove
(
u≈ackbuf
,&u≈ackbuf[
pos
],
size
);

128 
	gupos
 = 
size
;

131 
	gSockë
::
⁄RódA˘
()

133 if(
°©e
 =
li°íög
)

134 
doAc˚±
();

135 if(
	g°©e
 =
c⁄√˘ög
)

136 
doC⁄√˘
();

137 if(
	g°©e
 =
e°ablish
){

138 
n
 = 
TEMP_FAILURE_RETRY
(::
ªcv
(
fd
,
ªcvbuf
,
ªcvbuf_size
,0));

139 if(
	gn
 == 0){

140 
Clo£
();

141 #ifde‡
_WIN


142 }if(
	gn
 =
SOCKET_ERROR
){

143 if(
WSAGëLa°Eº‹
(Ë!
WSAEWOULDBLOCK
)

145 }if(
	gn
 < 0){

146 if(
	gî∫o
 !
EWOULDBLOCK
 || 
î∫o
 !
EAGAIN
)

148 
Clo£
();

150 
mem˝y
(&
u≈ackbuf
[
upos
],
ªcvbuf
,
n
);

151 
	gupos
 +
n
;

152 
u≈ack
();

157 
	gSockë
::
doC⁄√˘
()

159 
îr
 = 0;

160 
sockÀn_t
 
	gÀn
 = (
îr
);

161 i‡(
gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ERROR
, (*)&
îr
, &
Àn
) == -1)

162 
°©e
 = 0;

163 if(
	gîr
)

164 
	g°©e
 = 0;

165 if(
	g°©e
 != 0)

166 
°©e
 = 
e°ablish
;

167 
	gªa˘‹
->
Remove
(
this
,
EV_WRITE
);

168 
do_cb_c⁄√˘
(
this
,
°©e
 =
e°ablish
?1:0);

172 
	gSockë
::
øwSíd
(){

173 
wrôóbÀ
 && !
£ndli°
.
em±y
()){

174 
Packë
 *
wpk
 = 
£ndli°
.
‰⁄t
();

175 *
	gbuf
 = (*)
wpk
->
Buf„r
()->
RódBö
(
wpos
);

176 
	gÀn
 = 
wpk
->
PkTŸÆ
()-
wpos
;

177 
	gn
 = 
TEMP_FAILURE_RETRY
(::
£nd
(
fd
,&
buf
[
wpos
],
Àn
,0));

178 if(
	gn
 == 0){

179 
wrôóbÀ
 = 
Ál£
;

181 #ifde‡
_WIN


182 }if(
	gn
 =
SOCKET_ERROR
){

183 if(
WSAGëLa°Eº‹
(Ë!
WSAEWOULDBLOCK
){

185 }if(
	gn
 < 0){

186 if(
	gî∫o
 !
EWOULDBLOCK
 || 
î∫o
 !
EAGAIN
){

188 
wrôóbÀ
 = 
Ál£
;

192 
	gwrôóbÀ
 = 
Ál£
;

193 if(!(
	gevít
 & 
	gEV_WRITE
))

194 
	gªa˘‹
->
Add
(
this
,
EV_WRITE
);

198 if(
	gn
 =
Àn
){

199 
£ndli°
.
p›_‰⁄t
();

200 
dñëe
 
	gwpk
;

201 
	gwpos
 = 0;

203 if(!
	gföishcb_li°
.
em±y
()){

204 
°SídFöish
 
	g°Cb
 = 
föishcb_li°
.
‰⁄t
();

205 if(
	g°Cb
.
	g∑ckë
 =
wpk
){

206 
föishcb_li°
.
p›_‰⁄t
();

207 
lua_Sèã
 *
	gL
 = 
°Cb
.
cb
.
GëLSèã
();

208 
	gﬁdt›
 = 
lua_gët›
(
L
);

209 
lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
°Cb
.
cb
.
GëIndex
());

210 if(0 !
lua_pˇŒ
(
L
, 0, 0, 0))

211 
¥ötf
("%s\n",
lua_to°rög
(
L
,-1));

212 
lua_£â›
(
L
, 
ﬁdt›
);

214 if(
	g°©e
 =
˛o£ög
)

221 
	gwpos
 +
Àn
;

228 
	gSockë
::
⁄WrôeA˘
()

230 if(
°©e
 =
c⁄√˘ög
){

231 
doC⁄√˘
();

232 }if(
	g°©e
 =
e°ablish
){

233 
wrôóbÀ
 = 
åue
;

234 if(-1 =
øwSíd
()){

235 
Clo£
();

240 
	gSockë
::
Clo£
()

242 if(
°©e
 !
˛o£ög
){

243 
°©e
 = 
˛o£ög
;

244 #i‡
_WIN


245 ::
˛o£sockë
(
fd
);

247 ::
˛o£
(
fd
);

249 !
	g£ndli°
.
em±y
()){

250 
dñëe
 
	g£ndli°
.
‰⁄t
();

251 
	g£ndli°
.
p›_‰⁄t
();

254 if(
	gªa˘‹
)

255 
	gªa˘‹
->
Remove
(
this
,
EV_WRITE
|
EV_READ
);

256 if(
	gcb_disc⁄√˘ed
.
GëLSèã
())

257 
do_cb_disc⁄√˘ed
(
this
);

258 
DecRef
();

262 
	gSockë
::
Síd
(
Packë
 *
wpk
,
luaRef
 *
cb
){

263 if(
	g°©e
 !
e°ablish
)  -1;

264 
	gwpk
 = 
wpk
->
Cl⁄e
();

265 
	g£ndli°
.
push_back
(
wpk
);

266 if(
	gcb
){

267 
°SídFöish
 
°Cb
(
wpk
,*
cb
);

268 
	gföishcb_li°
.
push_back
(
°Cb
);

270  
øwSíd
();

273 
boﬁ
 
	gSockë
::
Böd
(
Ró˘‹
 *
ªa˘‹
,
Decodî
 *
decodî
,
luaRef
 &
cb1
,luaRe‡&
cb2
){

274 if(
	g°©e
 =
e°ablish
){

275 
this
->
ªa˘‹
 =Ñeactor;

276 
	gthis
->
	gªa˘‹
->
Add
(
this
,
EV_READ
);

277 
	gcb_∑ckë
 = 
cb1
;

278 
	gcb_disc⁄√˘ed
 = 
cb2
;

279 
	gthis
->
	gdecodî
 = 
decodî
 ? decodî: 
√w
 
RawBö¨yDecodî
();

280  
	gåue
;

282  
	gÁl£
;

285 
boﬁ
 
	gSockë
::
SëN⁄Block
(){

286 
ªt
;

287 #ifde‡
_WIN


288 
	gio˘lv¨
;

290 
	gio˘lv¨
 = 1;

291 
	gªt
 = 
io˘lsockë
(
fd
, 
FIONBIO
, (*)&
io˘lv¨
);

293 
	gªt
 = 
f˙é
(
fd
, 
F_SETFL
, 
O_NONBLOCK
 | 
O_RDWR
);

295 i‡(
	gªt
 != 0) {

296 #ifde‡
_WIN


297 
î∫o
 = 
WSAGëLa°Eº‹
();

299  
	gÁl£
;

301  
	gåue
;

304 
do_cb_√w˛õ¡
(
Sockë
 *
s
,Sockë *
˛õ¡
){

305 if(
	g˛õ¡
){

306 
lua_Sèã
 *
	gL
 = 
s
->
cb_√w_˛õ¡
.
GëLSèã
();

307 
	gﬁdt›
 = 
lua_gët›
(
L
);

308 
lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
s
->
cb_√w_˛õ¡
.
GëIndex
());

309 
lua_pushlightu£rd©a
(
L
,
˛õ¡
);

310 if(0 !
lua_pˇŒ
(
L
, 1, 0, 0))

311 
¥ötf
("%s\n",
lua_to°rög
(
L
,-1));

312 
lua_£â›
(
L
, 
ﬁdt›
);

316 
do_cb_c⁄√˘
(
Sockë
 *
s
,
suc˚ss
){

317 
lua_Sèã
 *
	gL
 = 
s
->
cb_c⁄√˘
.
GëLSèã
();

318 
	gﬁdt›
 = 
lua_gët›
(
L
);

319 
lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
s
->
cb_c⁄√˘
.
GëIndex
());

320 if(
	gsuc˚ss
)

321 
lua_pushlightu£rd©a
(
L
,
s
);

323 
lua_pushnû
(
L
);

324 
lua_pushboﬁón
(
L
,
suc˚ss
);

325 if(0 !
lua_pˇŒ
(
L
, 2, 0, 0))

326 
¥ötf
("%s\n",
lua_to°rög
(
L
,-1));

327 
lua_£â›
(
L
, 
ﬁdt›
);

328 if(!
	gsuc˚ss
)

329 
	gs
->
Clo£
();

332 
do_cb_∑ckë
(
Sockë
 *
s
,
Packë
 *
Ωk
){

333 
lua_Sèã
 *
	gL
 = 
s
->
cb_∑ckë
.
GëLSèã
();

334 
	gﬁdt›
 = 
lua_gët›
(
L
);

335 
lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
s
->
cb_∑ckë
.
GëIndex
());

336 
lua_pushlightu£rd©a
(
L
,
s
);

337 
push_luaPackë
(
L
,
Ωk
);

338 if(0 !
lua_pˇŒ
(
L
, 2, 0, 0))

339 
¥ötf
("%s\n",
lua_to°rög
(
L
,-1));

340 
lua_£â›
(
L
, 
ﬁdt›
);

344 
do_cb_disc⁄√˘ed
(
Sockë
 *
s
){

345 
lua_Sèã
 *
	gL
 = 
s
->
cb_disc⁄√˘ed
.
GëLSèã
();

346 
	gﬁdt›
 = 
lua_gët›
(
L
);

347 
lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
s
->
cb_disc⁄√˘ed
.
GëIndex
());

348 
lua_pushlightu£rd©a
(
L
,
s
);

349 if(0 !
lua_pˇŒ
(
L
, 1, 0, 0))

350 
¥ötf
("%s\n",
lua_to°rög
(
L
,-1));

351 
lua_£â›
(
L
, 
ﬁdt›
);

	@Socket.h

1 #i‚de‡
_SOCKET_H


2 
	#_SOCKET_H


	)

4 #ifde‡
_WIN


6 
	~<wösock2.h
>

7 
	~<WöBa£.h
>

8 
	~<Wöîr‹.h
>

9 
	~<°dio.h
>

10 
	~<WS2t˝ù.h
>

12 
	#INVAILD_FD
 
INVALID_SOCKET


	)

14 #i‚de‡
TEMP_FAILURE_RETRY


15 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
Ë
	)
expression

20 
	~<uni°d.h
>

21 
	~<sys/£À˘.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/sockë.h
>

24 
	~<sys/time.h
>

25 
	~<time.h
>

26 
	~<√töë/ö.h
>

27 
	~<¨∑/öë.h
>

28 
	~<î∫o.h
>

29 
	~<f˙é.h
>

30 
	~<√tdb.h
>

31 
	~<sig«l.h
>

32 
	~<°dio.h
>

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

35 
	~<sys/°©.h
>

36 
	~<sys/uio.h
>

37 
	~<uni°d.h
>

38 
	~<sys/waô.h
>

39 
	~<sys/un.h
>

40 
	~<√t/if.h
>

41 
	~<sys/io˘l.h
>

42 
	~<√töë/t˝.h
>

43 
	~<f˙é.h
>

44 
	~<°döt.h
>

46 #ifde‡
TEMP_FAILURE_RETRY


47 #unde‡
TEMP_FAILURE_RETRY


49 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
)\

50 ({ 
__ªsu…
;\

51 dÿ
__ªsu…
 = ()(
ex¥essi⁄
);\

52 
__ªsu…
 =-1L&& 
î∫o
 =
EINTR
);\

53 
__ªsu…
;})

	)

56 
	tSOCKET
;

57 
	#INVAILD_FD
 -1

	)

60 
	~"LuaUtû.h
"

61 
	~"Packë.h
"

62 
	~"RPackë.h
"

63 
	~"WPackë.h
"

64 
	~"dli°.h
"

65 
	~"Decodî.h
"

66 
	~<li°
>

69 
	#EV_READ
 0x1

	)

70 
	#EV_WRITE
 (0x1 << 1)

	)

72 
«me•a˚
 
	g√t
{

75 
	gli°íög
 = 1,

76 
	gc⁄√˘ög
,

77 
	ge°ablish
,

78 
	gtimeout
,

79 
	g˛o£ög
,

82 
˛ass
 
	gWPackë
;

83 
˛ass
 
	gRó˘‹
;

84 
˛ass
 
	gRPackë
;

85 
˛ass
 
	gSockë
;

87 ˛as†
	cSockë
:
public
 
dnode
{

88 
‰õnd
 
˛ass
 
Ró˘‹
;

89 
‰õnd
 
do_cb_√w˛õ¡
(
Sockë
 *
s
,Sockë *
˛õ¡
);

90 
‰õnd
 
do_cb_c⁄√˘
(
Sockë
 *
s
,
suc˚ss
);

91 
‰õnd
 
do_cb_∑ckë
(
Sockë
 *
s
,
Packë
*);

92 
‰õnd
 
do_cb_disc⁄√˘ed
(
Sockë
 *
s
);

93 
	gpublic
:

94 
Sockë
(
Ámûy
,
ty≥
,
¥Ÿocﬁ
);

95 
Sockë
(
SOCKET
 
fd
);

96 
boﬁ
 
SëN⁄Block
();

97 
Síd
(
Packë
*,
luaRef
*);

98 
boﬁ
 
Böd
(
Ró˘‹
 *
ªa˘‹
,
Decodî
 *,
luaRef
&,luaRef&);

99 
Clo£
();

100 
Evít
(){ 
	gevít
;}

101 
Sèã
(){ 
	g°©e
;}

102 
boﬁ
 
Li°í
(
Ró˘‹
*,c⁄° *
ù
,
p‹t
,
luaRef
&);

103 
boﬁ
 
C⁄√˘
(
Ró˘‹
 *
ªa˘‹
,c⁄° *
ù
,
p‹t
,
luaRef
&);

104 
SOCKET
 
Fd
(){ 
	gfd
;}

105 
SëUd
(*
ud
){
	gthis
->
	gud
 = ud;}

106 *
GëUd
(){ 
	gud
;}

107 
IncRef
(){

108 #ifde‡
_WIN


109 
I¡îlockedIn¸emít
(&
ªfCou¡
);

111 
__sync_add_™d_„tch
(&
ªfCou¡
,1);

115 
DecRef
(){

116 #ifde‡
_WIN


117 if(
I¡îlockedDe¸emít
(&
ªfCou¡
) <= 0)

119 if(
__sync_sub_™d_„tch
(&
ªfCou¡
,1) <=0)

121 
dñëe
 
this
;

124 
	g¥iv©e
:

125 
Sockë
(const Socket&);

126 
	gSockë
& 
	g›î©‹
 = (c⁄° 
Sockë
 &
o
);

127 ~
Sockë
(){ if(
	gdecodî
Ë
dñëe
 decoder;}

128 
øwSíd
();

129 
⁄RódA˘
();

130 
⁄WrôeA˘
();

131 
doAc˚±
();

132 
doC⁄√˘
();

133 
u≈ack
();

135 
	g¥iv©e
:

137 
	s°SídFöish
{

138 
luaRef
 
cb
;

139 
Packë
 *
	g∑ckë
;

140 
°SídFöish
(
Packë
 *
p
,
luaRef
 &
r
):
cb
‘),
∑ckë
(p)

144 
SOCKET
 
	gfd
;

145 c⁄° 
	gªcvbuf_size
 = 65535;

146 c⁄° 
	gmax∑ckë_size
 = 65535;

147 
	gªcvbuf
[
ªcvbuf_size
];

148 
Ró˘‹
 *
	gªa˘‹
;

149 
boﬁ
 
	gwrôóbÀ
;

150 vﬁ©ûê
	gªfCou¡
;

151 
	g°©e
;

152 
size_t
 
	gwpos
;

153 
size_t
 
	gupos
;

154 
	gu≈ackbuf
[
max∑ckë_size
];

155 
	gevít
;

156 *
	gud
;

157 
	g°d
::
li°
<
Packë
*> 
£ndli°
;

158 
	g°d
::
li°
<
°SídFöish
> 
föishcb_li°
;

159 
luaRef
 
	gcb_c⁄√˘
;

160 
luaRef
 
	gcb_√w_˛õ¡
;

161 
luaRef
 
	gcb_disc⁄√˘ed
;

162 
luaRef
 
	gcb_∑ckë
;

163 
Decodî
 *
	gdecodî
;

	@SysTime.cpp

1 
	~"SysTime.h
"

3 #ifde‡
_WIN


4 
__thªad
 
_ègGlobÆTickCou¡_t
 *
	gGlobÆTickCou¡
 = 
NULL
;

6 
±hªad_key_t
 
	gg_sy°ime_key
;

7 
±hªad_⁄˚_t
 
	gg_sy°ime_key_⁄˚
 = 
PTHREAD_ONCE_INIT
;

	@SysTime.h

17 #i‚de‡
_SYSTIME_H


18 
	#_SYSTIME_H


	)

20 #ifde‡
_WIN


21 
	~<time.h
>

22 
	~<Wödows.h
>

25 
	s_ègGlobÆTickCou¡_t


28 
ULONGLONG
 (
	tWINAPI
 *
	tGETTICKCOUNT64
)();

29 
GETTICKCOUNT64
 
	mpGëTickCou¡64
;

32 
BOOL
 
	mbMMTimeVÆid
;

33 
LARGE_INTEGER
 
	mm_Sèπ
, 
	mm_Fªq
;

35 
_ègGlobÆTickCou¡_t
()

37 
	mpGëTickCou¡64
 = 
NULL
;

38 
	mbMMTimeVÆid
 = 
FALSE
;

39 
mem£t
(&
m_Sèπ
, 0, (m_Start));

40 
mem£t
(&
m_Fªq
, 0, (m_Freq));

42 if((
	mpGëTickCou¡64
 = (
GETTICKCOUNT64
)
GëProcAddªss
(

43 
GëModuÀH™dÀ
("Kernel32.dll"), "GetTickCount64")))

45 
OuçutDebugSåögA
( "GetTickCount64 API Valid\r\n" );

47 if–
QuîyPîf‹m™˚Cou¡î
(&
m_Sèπ
)

48 && 
QuîyPîf‹m™˚Fªquícy
(&
m_Fªq
) )

50 
	mbMMTimeVÆid
 = 
TRUE
;

51 
OuçutDebugSåögA
( "high-resolution count valid\r\n" );

55 
OuçutDebugSåögA
( "just GetTickCount() support only\r\n" );

59 
ULONGLONG
 
GëTickCou¡64
()

61 if(
	mpGëTickCou¡64
)

63  
pGëTickCou¡64
();

65 if(
	mbMMTimeVÆid
)

67 
LARGE_INTEGER
 
	mm_End
 = {{0}};

68 
QuîyPîf‹m™˚Cou¡î
(&
m_End
);

69  (
	mULONGLONG
)((
	mm_End
.
	mQuadP¨t
 - 
	mm_Sèπ
.QuadP¨tË/ (
	mm_Fªq
.QuadPart / 1000));

73  
GëTickCou¡
();

78 
__thªad
 
_ègGlobÆTickCou¡_t
 *
GlobÆTickCou¡
;

80 
ölöe
 
	$GëSy°emMs64
()

82 if(!
GlobÆTickCou¡
)

83 
GlobÆTickCou¡
 = 
√w
 
_ègGlobÆTickCou¡_t
;

84  
GlobÆTickCou¡
->
	`GëTickCou¡64
();

85 
	}
}

87 
ölöe
 
	$GëSy°emMs
()

89  ::
	`GëTickCou¡
();

90 
	}
}

92 
ölöe
 
time_t
 
	$GëSy°emSec
()

94  ::
	`time
(
NULL
);

95 
	}
}

97 
ölöe
 
	$¶ìpms
(
ms
)

99 ::
	`SÀï
(
ms
*1000);

100 
	}
}

104 
	~<°döt.h
>

105 
	~<time.h
>

106 
	~<sys/time.h
>

107 
	~<uni°d.h
>

108 
	~<sig«l.h
>

109 
	~<±hªad.h
>

110 
	~<°dlib.h
>

112 
±hªad_key_t
 
g_sy°ime_key
;

113 
±hªad_⁄˚_t
 
g_sy°ime_key_⁄˚
;

115 
	s_˛ock


117 
uöt64_t
 
	mœ°_tsc
;

118 
uöt64_t
 
	mœ°_time
;

121 
	#NN_CLOCK_PRECISION
 1000000

	)

123 
ölöe
 
uöt64_t
 
	$_˛ock_rdtsc
 ()

125 #i‡(
deföed
 
_MSC_VER
 && (deföed 
_M_IX86
 || deföed 
_M_X64
))

126  
	`__rdtsc
 ();

127 #ñi‡(
deföed
 
__GNUC__
 && (deföed 
__i386__
 || deföed 
__x86_64__
))

128 
uöt32_t
 
low
;

129 
uöt32_t
 
high
;

130 
__asm__
 vﬁ©ûê("rdtsc" : "˜" (
low
), "=d" (
high
));

131  (
uöt64_t
Ë
high
 << 32 | 
low
;

132 #ñi‡(
deföed
 
__SUNPRO_CC
 && (__SUNPRO_CC >0x5100Ë&& (deföed 
__i386
 || \

133 
deföed
 
__amd64
 || deföed 
__x86_64
))

135 
uöt64_t
 
u64vÆ
;

136 
uöt32_t
 
u32vÆ
 [2];

137 } 
tsc
;

138 
	`asm
("rdtsc" : "˜" (
tsc
.
u32vÆ
 [0]), "=d" (tsc.u32val [1]));

139  
tsc
.
u64vÆ
;

144 
	}
}

146 
ölöe
 
uöt64_t
 
	$_˛ock_time
 ()

148 
time•ec
 
tv
;

149 
	`˛ock_gëtime
 (
CLOCK_REALTIME
, &
tv
);

150  
tv
.
tv_£c
 * (
uöt64_t
Ë1000 +Åv.
tv_n£c
 / 1000000;

151 
	}
}

153 
ölöe
 
	$_˛ock_öô
 (
_˛ock
 *
c
)

155 
c
->
œ°_tsc
 = 
	`_˛ock_rdtsc
 ();

156 
c
->
œ°_time
 = 
	`_˛ock_time
 ();

157 
	}
}

159 
ölöe
 
_˛ock
* 
	$gë_thªad_˛ock
()

161 
_˛ock
* 
c
 = (_˛ock*)
	`±hªad_gë•ecific
(
g_sy°ime_key
);

162 if(!
c
){

163 
c
 = (
_˛ock
*)
	`ˇŒoc
(1,(*c));

164 
	`_˛ock_öô
(
c
);

165 
	`±hªad_£t•ecific
(
g_sy°ime_key
,
c
);

167  
c
;

168 
	}
}

171 
	$sy°ick_⁄˚_routöe
(){

172 
	`±hªad_key_¸óã
(&
g_sy°ime_key
,
NULL
);

173 
	}
}

175 
ölöe
 
uöt64_t
 
	$GëSy°emMs64
()

177 
	`±hªad_⁄˚
(&
g_sy°ime_key_⁄˚
,
sy°ick_⁄˚_routöe
);

178 
uöt64_t
 
tsc
 = 
	`_˛ock_rdtsc
 ();

179 i‡(!
tsc
)

180  
	`_˛ock_time
 ();

182 
_˛ock
 *
c
 = 
	`gë_thªad_˛ock
();

186 i‡(
tsc
 - 
c
->
œ°_tsc
 <(
NN_CLOCK_PRECISION
 / 2) &&Åsc >= c->last_tsc)

187  
c
->
œ°_time
;

191 
c
->
œ°_tsc
 = 
tsc
;

192 
c
->
œ°_time
 = 
	`_˛ock_time
 ();

193  
c
->
œ°_time
;

194 
	}
}

196 
ölöe
 
uöt32_t
 
	$GëSy°emMs
()

198  (
uöt32_t
)
	`GëSy°emMs64
();

199 
	}
}

201 
ölöe
 
time_t
 
	$GëSy°emSec
()

203  
	`time
(
NULL
);

204 
	}
}

206 
ölöe
 
	$¶ìpms
(
uöt32_t
 
ms
)

208 
uöt64_t
 
ídtick
 = 
	`GëSy°emMs64
()+
ms
;

210 
uöt64_t
 
_ms
 = 
ídtick
 - 
	`GëSy°emMs64
();

211 
	`u¶ìp
(
_ms
*1000);

212 }
	`GëSy°emMs64
(Ë< 
ídtick
);

213 
	}
}

	@WPacket.h

1 #i‚de‡
_WPACKET_H


2 
	#_WPACKET_H


	)

4 
	~"RPackë.h
"

5 
	~<as£π.h
>

7 
«me•a˚
 
	g√t
{

9 
˛ass
 
	gWPackë
 : 
public
 
Packë
,publi¯
	gSåómWPackë
{

11 
	gpublic
:

12 
‰õnd
 
˛ass
 
RPackë
;

14 
WPackë
(
size
 = 64):
Packë
(
WPACKET
,
√w
 
ByãBuf„r
(size)),
wpos
(0)

16 
	gwpos
 += 4;

19 
WPackë
(c⁄° WPackë &
o
):
Packë
(
WPACKET
,o.
m_buf„r
){

20 
	gwpos
 = 0;

23 
WPackë
(c⁄° 
RPackë
 &
o
):
Packë
(
WPACKET
,o.
m_buf„r
){

24 
	gwpos
 = 0;

27 
	gWPackë
& 
	g›î©‹
 = (c⁄° 
WPackë
 &
o
){

28 if(&
o
 !
this
){

29 if(
m_buf„r
){

30 
m_buf„r
->
DecRef
();

31 
	gm_buf„r
 = 
o
.
m_buf„r
->
IncRef
();

33 
	gwpos
 = 0;

35  *
	gthis
;

38 
Packë
 *
Cl⁄e
(){

39  
√w
 
WPackë
(*
this
);

42 
Packë
 *
MakeWrôePackë
(){

43  
Cl⁄e
();

46 
Packë
 *
MakeRódPackë
(){

47  
√w
 
RPackë
(*
this
);

50 ~
WPackë
(){}

52 
wrôe_pos
 
GëWrôePos
() {

53  
	gwpos
;

57 
RewrôeUöt8
(
wrôe_pos
 
wp
,
v
) {

58 
C›yOnWrôe
();

59 
	gm_buf„r
->
WrôeUöt8
(
wp
,
v
);

62 
RewrôeUöt16
(
wrôe_pos
 
wp
,
v
) {

63 
C›yOnWrôe
();

64 
	gm_buf„r
->
WrôeUöt16
(
wp
,
v
);

67 
RewrôeUöt32
(
wrôe_pos
 
wp
,
v
) {

68 
C›yOnWrôe
();

69 
	gm_buf„r
->
WrôeUöt32
(
wp
,
v
);

72 
RewrôeUöt64
(
wrôe_pos
 
wp
,
v
) {

73 
C›yOnWrôe
();

74 
	gm_buf„r
->
WrôeUöt64
(
wp
,
v
);

77 
RewrôeDoubÀ
(
wrôe_pos
 
wp
,
v
) {

78 
C›yOnWrôe
();

79 
	gm_buf„r
->
WrôeDoubÀ
(
wp
,
v
);

82 
WrôeUöt8
(
v
){

83 
C›yOnWrôe
();

84 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

85 
	gm_buf„r
->
WrôeUöt8
(
wpos
,
v
);

86 
	gwpos
 +(
v
);

87 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

91 
WrôeUöt16
(
v
){

92 
C›yOnWrôe
();

93 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

94 
	gm_buf„r
->
WrôeUöt16
(
wpos
,
v
);

95 
	gwpos
 +(
v
);

96 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

99 
WrôeUöt32
(
v
){

100 
C›yOnWrôe
();

101 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

102 
	gm_buf„r
->
WrôeUöt32
(
wpos
,
v
);

103 
	gwpos
 +(
v
);

104 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

107 
WrôeUöt64
(
v
){

108 
C›yOnWrôe
();

109 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

110 
	gm_buf„r
->
WrôeUöt64
(
wpos
,
v
);

111 
	gwpos
 +(
v
);

112 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

115 
WrôeFlﬂt
(
v
){

116 
C›yOnWrôe
();

117 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

118 
	gm_buf„r
->
WrôeFlﬂt
(
wpos
,
v
);

119 
	gwpos
 +(
v
);

120 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

123 
WrôeDoubÀ
(
v
){

124 
C›yOnWrôe
();

125 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

126 
	gm_buf„r
->
WrôeDoubÀ
(
wpos
,
v
);

127 
	gwpos
 +(
v
);

128 
	gm_buf„r
->
WrôeUöt32
(0,
size
+(
v
));

131 
WrôeBö
(*
v
,
size_t
 
Àn
){

132 
C›yOnWrôe
();

133 
	gsize
 = 
m_buf„r
->
RódUöt32
(0);

134 
	gm_buf„r
->
WrôeUöt32
(
wpos
,
Àn
);

135 
	gm_buf„r
->
WrôeBö
(
wpos
+(
uöt32_t
),
v
,
Àn
);

136 
	gwpos
 +
Àn
 + (
uöt32_t
);

137 
	gm_buf„r
->
WrôeUöt32
(0,
size
+4+
Àn
);

140 
WrôeSåög
(c⁄° *
v
){

141 
C›yOnWrôe
();

142 
WrôeBö
((*)
v
,
°æí
(v)+1);

145 
size_t
 
PkLí
(){

146  
	gm_buf„r
->
RódUöt32
(0);

149 
size_t
 
PkTŸÆ
(){

150  
PkLí
(Ë+ (
	guöt32_t
);

153 
	g¥iv©e
:

154 
C›yOnWrôe
(){

155 if(
wpos
 == 0){

156 
ByãBuf„r
 *
tmp
 = 
√w
 ByãBuf„r(*
m_buf„r
);

157 
	gm_buf„r
->
DecRef
();

158 
	gm_buf„r
 = 
tmp
;

159 
	gwpos
 = 
m_buf„r
->
RódUöt32
(0);

162 
size_t
 
	gwpos
;

	@deps/http-parser/contrib/parsertrace.c

27 
	~"hâp_∑r£r.h
"

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

32 
	$⁄_mesßge_begö
(
hâp_∑r£r
* 
_
) {

33 ()
_
;

34 
	`¥ötf
("\n***MESSAGE BEGIN***\n\n");

36 
	}
}

38 
	$⁄_hódîs_com∂ëe
(
hâp_∑r£r
* 
_
) {

39 ()
_
;

40 
	`¥ötf
("\n***HEADERS COMPLETE***\n\n");

42 
	}
}

44 
	$⁄_mesßge_com∂ëe
(
hâp_∑r£r
* 
_
) {

45 ()
_
;

46 
	`¥ötf
("\n***MESSAGE COMPLETE***\n\n");

48 
	}
}

50 
	$⁄_uæ
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

51 ()
_
;

52 
	`¥ötf
("Uæ: %.*s\n", ()
Àngth
, 
©
);

54 
	}
}

56 
	$⁄_hódî_fõld
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

57 ()
_
;

58 
	`¥ötf
("Hódî fõld: %.*s\n", ()
Àngth
, 
©
);

60 
	}
}

62 
	$⁄_hódî_vÆue
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

63 ()
_
;

64 
	`¥ötf
("Hódî vÆue: %.*s\n", ()
Àngth
, 
©
);

66 
	}
}

68 
	$⁄_body
(
hâp_∑r£r
* 
_
, c⁄° * 
©
, 
size_t
 
Àngth
) {

69 ()
_
;

70 
	`¥ötf
("Body: %.*s\n", ()
Àngth
, 
©
);

72 
	}
}

74 
	$ußge
(c⁄° * 
«me
) {

75 
	`Ârötf
(
°dîr
,

79 
«me
);

80 
	`exô
(
EXIT_FAILURE
);

81 
	}
}

83 
	$maö
(
¨gc
, * 
¨gv
[]) {

84 
hâp_∑r£r_ty≥
 
fûe_ty≥
;

86 i‡(
¨gc
 != 3) {

87 
	`ußge
(
¨gv
[0]);

90 * 
ty≥
 = 
¨gv
[1];

91 i‡(
ty≥
[0] != '-') {

92 
	`ußge
(
¨gv
[0]);

95 
ty≥
[1]) {

98 
fûe_ty≥
 = 
HTTP_RESPONSE
;

101 
fûe_ty≥
 = 
HTTP_REQUEST
;

104 
fûe_ty≥
 = 
HTTP_BOTH
;

107 
	`ußge
(
¨gv
[0]);

110 * 
fûíame
 = 
¨gv
[2];

111 
FILE
* 
fûe
 = 
	`f›í
(
fûíame
, "r");

112 i‡(
fûe
 =
NULL
) {

113 
	`≥º‹
("fopen");

114 
Áû
;

117 
	`f£ek
(
fûe
, 0, 
SEEK_END
);

118 
fûe_Àngth
 = 
	`·ñl
(
fûe
);

119 i‡(
fûe_Àngth
 == -1) {

120 
	`≥º‹
("ftell");

121 
Áû
;

123 
	`f£ek
(
fûe
, 0, 
SEEK_SET
);

125 * 
d©a
 = 
	`mÆloc
(
fûe_Àngth
);

126 i‡(
	`‰ód
(
d©a
, 1, 
fûe_Àngth
, 
fûe
Ë!(
size_t
)file_length) {

127 
	`Ârötf
(
°dîr
, "couldn'tÑeadÉntire file\n");

128 
	`‰ì
(
d©a
);

129 
Áû
;

132 
hâp_∑r£r_£âögs
 
£âögs
;

133 
	`mem£t
(&
£âögs
, 0, (settings));

134 
£âögs
.
⁄_mesßge_begö
 = on_message_begin;

135 
£âögs
.
⁄_uæ
 = on_url;

136 
£âögs
.
⁄_hódî_fõld
 = on_header_field;

137 
£âögs
.
⁄_hódî_vÆue
 = on_header_value;

138 
£âögs
.
⁄_hódîs_com∂ëe
 = on_headers_complete;

139 
£âögs
.
⁄_body
 = on_body;

140 
£âögs
.
⁄_mesßge_com∂ëe
 = on_message_complete;

142 
hâp_∑r£r
 
∑r£r
;

143 
	`hâp_∑r£r_öô
(&
∑r£r
, 
fûe_ty≥
);

144 
size_t
 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs
, 
d©a
, 
fûe_Àngth
);

145 
	`‰ì
(
d©a
);

147 i‡(
≈¨£d
 !(
size_t
)
fûe_Àngth
) {

148 
	`Ârötf
(
°dîr
,

150 
	`hâp_î∫o_des¸ùti⁄
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
)),

151 
	`hâp_î∫o_«me
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
)));

152 
Áû
;

155  
EXIT_SUCCESS
;

157 
Áû
:

158 
	`f˛o£
(
fûe
);

159  
EXIT_FAILURE
;

160 
	}
}

	@deps/http-parser/contrib/url_parser.c

1 
	~"hâp_∑r£r.h
"

2 
	~<°dio.h
>

3 
	~<°rög.h
>

6 
	$dump_uæ
 (c⁄° *
uæ
, c⁄° 
hâp_∑r£r_uæ
 *
u
)

8 
i
;

10 
	`¥ötf
("\tfõld_£t: 0x%x,Ö‹t: %u\n", 
u
->
fõld_£t
, u->
p‹t
);

11 
i
 = 0; i < 
UF_MAX
; i++) {

12 i‡((
u
->
fõld_£t
 & (1 << 
i
)) == 0) {

13 
	`¥ötf
("\tfõld_d©a[%u]: un£t\n", 
i
);

17 
	`¥ötf
("\tfield_data[%u]: off: %uÜen: %uÖart: \"%.*s\n",

18 
i
,

19 
u
->
fõld_d©a
[
i
].
off
,

20 
u
->
fõld_d©a
[
i
].
Àn
,

21 
u
->
fõld_d©a
[
i
].
Àn
,

22 
uæ
 + 
u
->
fõld_d©a
[
i
].
off
);

24 
	}
}

26 
	$maö
(
¨gc
, ** 
¨gv
) {

27 i‡(
¨gc
 != 3) {

28 
	`¥ötf
("Sy¡ax : %†c⁄√˘|gë uæ\n", 
¨gv
[0]);

31 
hâp_∑r£r_uæ
 
u
;

32 
Àn
 = 
	`°æí
(
¨gv
[2]);

33 
c⁄√˘
 = 
	`°rcmp
("c⁄√˘", 
¨gv
[1]) == 0 ? 1 : 0;

34 
	`¥ötf
("P¨sög %s, c⁄√˘ %d\n", 
¨gv
[2], 
c⁄√˘
);

36 
ªsu…
 = 
	`hâp_∑r£r_∑r£_uæ
(
¨gv
[2], 
Àn
, 
c⁄√˘
, &
u
);

37 i‡(
ªsu…
 != 0) {

38 
	`¥ötf
("P¨£Éº‹ : %d\n", 
ªsu…
);

39  
ªsu…
;

41 
	`¥ötf
("Parse ok,Ñesult : \n");

42 
	`dump_uæ
(
¨gv
[2], &
u
);

44 
	}
}

	@deps/http-parser/http_parser.c

24 
	~"hâp_∑r£r.h
"

25 
	~<as£π.h
>

26 
	~<°ddef.h
>

27 
	~<˘y≥.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<limôs.h
>

32 #i‚de‡
ULLONG_MAX


33 
	#ULLONG_MAX
 ((
uöt64_t
Ë-1Ë

	)

36 #i‚de‡
MIN


37 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

40 #i‚de‡
ARRAY_SIZE


41 
	#ARRAY_SIZE
(
a
Ë(◊Ë/ (◊)[0]))

	)

44 #i‚de‡
BIT_AT


45 
	#BIT_AT
(
a
, 
i
) \

46 (!!((Ë(
a
)[(Ë(
i
) >> 3] & \

47 (1 << ((Ë(
i
Ë& 7))))

	)

50 #i‚de‡
ELEM_AT


51 
	#ELEM_AT
(
a
, 
i
, 
v
Ë((Ë(iË< 
	`ARRAY_SIZE
◊Ë? (a)[(i)] : (v))

	)

54 
	#SET_ERRNO
(
e
) \

56 
∑r£r
->
hâp_î∫o
 = (
e
); \

57 } 0)

	)

61 
	#CALLBACK_NOTIFY_
(
FOR
, 
ER
) \

63 
	`as£π
(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
); \

65 i‡(
£âögs
->
⁄_
##
FOR
) { \

66 i‡(0 !
£âögs
->
⁄_
##
	`FOR
(
∑r£r
)) { \

67 
	`SET_ERRNO
(
HPE_CB_
##
FOR
); \

71 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) { \

72  (
ER
); \

75 } 0)

	)

78 
	#CALLBACK_NOTIFY
(
FOR
Ë
	`CALLBACK_NOTIFY_
(FOR, 
p
 - 
d©a
 + 1)

	)

81 
	#CALLBACK_NOTIFY_NOADVANCE
(
FOR
Ë
	`CALLBACK_NOTIFY_
(FOR, 
p
 - 
d©a
)

	)

84 
	#CALLBACK_DATA_
(
FOR
, 
LEN
, 
ER
) \

86 
	`as£π
(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
); \

88 i‡(
FOR
##
_m¨k
) { \

89 i‡(
£âögs
->
⁄_
##
FOR
) { \

90 i‡(0 !
£âögs
->
⁄_
##
	`FOR
(
∑r£r
, 
FOR
##
_m¨k
, (
LEN
))) { \

91 
	`SET_ERRNO
(
HPE_CB_
##
FOR
); \

95 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) { \

96  (
ER
); \

99 
FOR
##
_m¨k
 = 
NULL
; \

101 } 0)

	)

104 
	#CALLBACK_DATA
(
FOR
) \

105 
	`CALLBACK_DATA_
(
FOR
, 
p
 - FOR##
_m¨k
,Ö - 
d©a
 + 1)

	)

108 
	#CALLBACK_DATA_NOADVANCE
(
FOR
) \

109 
	`CALLBACK_DATA_
(
FOR
, 
p
 - FOR##
_m¨k
,Ö - 
d©a
)

	)

112 
	#MARK
(
FOR
) \

114 i‡(!
FOR
##
_m¨k
) { \

115 
FOR
##
_m¨k
 = 
p
; \

117 } 0)

	)

120 
	#PROXY_CONNECTION
 "¥oxy-c⁄√˘i⁄"

	)

121 
	#CONNECTION
 "c⁄√˘i⁄"

	)

122 
	#CONTENT_LENGTH
 "c⁄ã¡-Àngth"

	)

123 
	#TRANSFER_ENCODING
 "å™s„r-ícodög"

	)

124 
	#UPGRADE
 "upgøde"

	)

125 
	#CHUNKED
 "chunked"

	)

126 
	#KEEP_ALIVE
 "kìp-Æive"

	)

127 
	#CLOSE
 "˛o£"

	)

130 c⁄° *
	gmëhod_°rögs
[] =

132 
	#XX
(
num
, 
«me
, 
°rög
Ë#°rög,

	)

133 
HTTP_METHOD_MAP
(
XX
)

134 #unde‡
XX


145 c⁄° 
	gtokís
[256] = {

180 c⁄° 
öt8_t
 
	gunhex
[256] =

192 #i‡
HTTP_PARSER_STRICT


193 
	#T
(
v
Ë0

	)

195 
	#T
(
v
Ë
	)
v

199 c⁄° 
uöt8_t
 
	gn‹mÆ_uæ_ch¨
[32] = {

203 0 | 
T
(2) | 0 | 0 | T(16) | 0 | 0 | 0,

233 #unde‡
T


235 
	e°©e


236 { 
	ms_dód
 = 1

238 , 
	ms_°¨t_ªq_‹_ªs


239 , 
	ms_ªs_‹_ª•_H


240 , 
	ms_°¨t_ªs


241 , 
	ms_ªs_H


242 , 
	ms_ªs_HT


243 , 
	ms_ªs_HTT


244 , 
	ms_ªs_HTTP


245 , 
	ms_ªs_fú°_hâp_maj‹


246 , 
	ms_ªs_hâp_maj‹


247 , 
	ms_ªs_fú°_hâp_mö‹


248 , 
	ms_ªs_hâp_mö‹


249 , 
	ms_ªs_fú°_°©us_code


250 , 
	ms_ªs_°©us_code


251 , 
	ms_ªs_°©us_°¨t


252 , 
	ms_ªs_°©us


253 , 
	ms_ªs_löe_Æmo°_d⁄e


255 , 
	ms_°¨t_ªq


257 , 
	ms_ªq_mëhod


258 , 
	ms_ªq_•a˚s_bef‹e_uæ


259 , 
	ms_ªq_schema


260 , 
	ms_ªq_schema_¶ash


261 , 
	ms_ªq_schema_¶ash_¶ash


262 , 
	ms_ªq_£rvî_°¨t


263 , 
	ms_ªq_£rvî


264 , 
	ms_ªq_£rvî_wôh_©


265 , 
	ms_ªq_∑th


266 , 
	ms_ªq_quîy_°rög_°¨t


267 , 
	ms_ªq_quîy_°rög


268 , 
	ms_ªq_‰agmít_°¨t


269 , 
	ms_ªq_‰agmít


270 , 
	ms_ªq_hâp_°¨t


271 , 
	ms_ªq_hâp_H


272 , 
	ms_ªq_hâp_HT


273 , 
	ms_ªq_hâp_HTT


274 , 
	ms_ªq_hâp_HTTP


275 , 
	ms_ªq_fú°_hâp_maj‹


276 , 
	ms_ªq_hâp_maj‹


277 , 
	ms_ªq_fú°_hâp_mö‹


278 , 
	ms_ªq_hâp_mö‹


279 , 
	ms_ªq_löe_Æmo°_d⁄e


281 , 
	ms_hódî_fõld_°¨t


282 , 
	ms_hódî_fõld


283 , 
	ms_hódî_vÆue_disˇrd_ws


284 , 
	ms_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e


285 , 
	ms_hódî_vÆue_disˇrd_lws


286 , 
	ms_hódî_vÆue_°¨t


287 , 
	ms_hódî_vÆue


288 , 
	ms_hódî_vÆue_lws


290 , 
	ms_hódî_Æmo°_d⁄e


292 , 
	ms_chunk_size_°¨t


293 , 
	ms_chunk_size


294 , 
	ms_chunk_∑ømëîs


295 , 
	ms_chunk_size_Æmo°_d⁄e


297 , 
	ms_hódîs_Æmo°_d⁄e


298 , 
	ms_hódîs_d⁄e


305 , 
	ms_chunk_d©a


306 , 
	ms_chunk_d©a_Æmo°_d⁄e


307 , 
	ms_chunk_d©a_d⁄e


309 , 
	ms_body_idítôy


310 , 
	ms_body_idítôy_eof


312 , 
	ms_mesßge_d⁄e


316 
	#PARSING_HEADER
(
°©e
Ë(°©ê<
s_hódîs_d⁄e
)

	)

319 
	ehódî_°©es


320 { 
	mh_gíîÆ
 = 0

321 , 
	mh_C


322 , 
	mh_CO


323 , 
	mh_CON


325 , 
	mh_m©chög_c⁄√˘i⁄


326 , 
	mh_m©chög_¥oxy_c⁄√˘i⁄


327 , 
	mh_m©chög_c⁄ã¡_Àngth


328 , 
	mh_m©chög_å™s„r_ícodög


329 , 
	mh_m©chög_upgøde


331 , 
	mh_c⁄√˘i⁄


332 , 
	mh_c⁄ã¡_Àngth


333 , 
	mh_å™s„r_ícodög


334 , 
	mh_upgøde


336 , 
	mh_m©chög_å™s„r_ícodög_chunked


337 , 
	mh_m©chög_c⁄√˘i⁄_kìp_Æive


338 , 
	mh_m©chög_c⁄√˘i⁄_˛o£


340 , 
	mh_å™s„r_ícodög_chunked


341 , 
	mh_c⁄√˘i⁄_kìp_Æive


342 , 
	mh_c⁄√˘i⁄_˛o£


345 
	ehâp_ho°_°©e


347 
	ms_hâp_ho°_dód
 = 1

348 , 
	ms_hâp_u£röfo_°¨t


349 , 
	ms_hâp_u£röfo


350 , 
	ms_hâp_ho°_°¨t


351 , 
	ms_hâp_ho°_v6_°¨t


352 , 
	ms_hâp_ho°


353 , 
	ms_hâp_ho°_v6


354 , 
	ms_hâp_ho°_v6_íd


355 , 
	ms_hâp_ho°_p‹t_°¨t


356 , 
	ms_hâp_ho°_p‹t


360 
	#CR
 '\r'

	)

361 
	#LF
 '\n'

	)

362 
	#LOWER
(
c
Ë()(¯| 0x20)

	)

363 
	#IS_ALPHA
(
c
Ë(
	`LOWER
(cË>'a' && LOWER(cË<'z')

	)

364 
	#IS_NUM
(
c
Ë((cË>'0' && (cË<'9')

	)

365 
	#IS_ALPHANUM
(
c
Ë(
	`IS_ALPHA
(cË|| 
	`IS_NUM
(c))

	)

366 
	#IS_HEX
(
c
Ë(
	`IS_NUM
(cË|| (
	`LOWER
(cË>'a' && LOWER(cË<'f'))

	)

367 
	#IS_MARK
(
c
) ((c) == '-' || (c) == '_' || (c) == '.' || \

368 (
c
) == '!' || (c) == '~' || (c) == '*' || (c) == '\'' || (c) == '(' || \

369 (
c
Ë=')')

	)

370 
	#IS_USERINFO_CHAR
(
c
Ë(
	`IS_ALPHANUM
(cË|| 
	`IS_MARK
(c) || (c) == '%' || \

371 (
c
) == ';' || (c) == ':' || (c) == '&' || (c) == '=' || (c) == '+' || \

372 (
c
Ë='$' || (cË=',')

	)

374 #i‡
HTTP_PARSER_STRICT


375 
	#TOKEN
(
c
Ë(
tokís
[()c])

	)

376 
	#IS_URL_CHAR
(
c
Ë(
	`BIT_AT
(
n‹mÆ_uæ_ch¨
, ()c))

	)

377 
	#IS_HOST_CHAR
(
c
Ë(
	`IS_ALPHANUM
(cË|| (cË='.' || (cË='-')

	)

379 
	#TOKEN
(
c
Ë((¯=' 'Ë? ' ' : 
tokís
[()c])

	)

380 
	#IS_URL_CHAR
(
c
) \

381 (
	`BIT_AT
(
n‹mÆ_uæ_ch¨
, ()
c
Ë|| ((cË& 0x80))

	)

382 
	#IS_HOST_CHAR
(
c
) \

383 (
	`IS_ALPHANUM
(
c
Ë|| (cË='.' || (cË='-' || (cË='_')

	)

387 
	#°¨t_°©e
 (
∑r£r
->
ty≥
 =
HTTP_REQUEST
 ? 
s_°¨t_ªq
 : 
s_°¨t_ªs
)

	)

390 #i‡
HTTP_PARSER_STRICT


391 
	#STRICT_CHECK
(
c⁄d
) \

393 i‡(
c⁄d
) { \

394 
	`SET_ERRNO
(
HPE_STRICT
); \

395 
îr‹
; \

397 } 0)

	)

398 
	#NEW_MESSAGE
(Ë(
	`hâp_should_kìp_Æive
(
∑r£r
Ë? 
°¨t_°©e
 : 
s_dód
)

	)

400 
	#STRICT_CHECK
(
c⁄d
)

	)

401 
	#NEW_MESSAGE
(Ë
°¨t_°©e


	)

406 
	#HTTP_STRERROR_GEN
(
n
, 
s
Ë{ "HPE_" #n, s },

	)

408 c⁄° *
	m«me
;

409 c⁄° *
	mdes¸ùti⁄
;

410 } 
	ghâp_°ªº‹_èb
[] = {

411 
HTTP_ERRNO_MAP
(
HTTP_STRERROR_GEN
)

413 #unde‡
HTTP_STRERROR_GEN


415 
hâp_mesßge_√eds_eof
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

428 
°©e


429 
	$∑r£_uæ_ch¨
(
°©e
 
s
, c⁄° 
ch
)

431 i‡(
ch
 == ' ' || ch == '\r' || ch == '\n') {

432  
s_dód
;

435 #i‡
HTTP_PARSER_STRICT


436 i‡(
ch
 == '\t' || ch == '\f') {

437  
s_dód
;

441 
s
) {

442 
s_ªq_•a˚s_bef‹e_uæ
:

447 i‡(
ch
 == '/' || ch == '*') {

448  
s_ªq_∑th
;

451 i‡(
	`IS_ALPHA
(
ch
)) {

452  
s_ªq_schema
;

457 
s_ªq_schema
:

458 i‡(
	`IS_ALPHA
(
ch
)) {

459  
s
;

462 i‡(
ch
 == ':') {

463  
s_ªq_schema_¶ash
;

468 
s_ªq_schema_¶ash
:

469 i‡(
ch
 == '/') {

470  
s_ªq_schema_¶ash_¶ash
;

475 
s_ªq_schema_¶ash_¶ash
:

476 i‡(
ch
 == '/') {

477  
s_ªq_£rvî_°¨t
;

482 
s_ªq_£rvî_wôh_©
:

483 i‡(
ch
 == '@') {

484  
s_dód
;

488 
s_ªq_£rvî_°¨t
:

489 
s_ªq_£rvî
:

490 i‡(
ch
 == '/') {

491  
s_ªq_∑th
;

494 i‡(
ch
 == '?') {

495  
s_ªq_quîy_°rög_°¨t
;

498 i‡(
ch
 == '@') {

499  
s_ªq_£rvî_wôh_©
;

502 i‡(
	`IS_USERINFO_CHAR
(
ch
) || ch == '[' || ch == ']') {

503  
s_ªq_£rvî
;

508 
s_ªq_∑th
:

509 i‡(
	`IS_URL_CHAR
(
ch
)) {

510  
s
;

513 
ch
) {

515  
s_ªq_quîy_°rög_°¨t
;

518  
s_ªq_‰agmít_°¨t
;

523 
s_ªq_quîy_°rög_°¨t
:

524 
s_ªq_quîy_°rög
:

525 i‡(
	`IS_URL_CHAR
(
ch
)) {

526  
s_ªq_quîy_°rög
;

529 
ch
) {

532  
s_ªq_quîy_°rög
;

535  
s_ªq_‰agmít_°¨t
;

540 
s_ªq_‰agmít_°¨t
:

541 i‡(
	`IS_URL_CHAR
(
ch
)) {

542  
s_ªq_‰agmít
;

545 
ch
) {

547  
s_ªq_‰agmít
;

550  
s
;

555 
s_ªq_‰agmít
:

556 i‡(
	`IS_URL_CHAR
(
ch
)) {

557  
s
;

560 
ch
) {

563  
s
;

573  
s_dód
;

574 
	}
}

576 
size_t
 
	$hâp_∑r£r_execuã
 (
hâp_∑r£r
 *
∑r£r
,

577 c⁄° 
hâp_∑r£r_£âögs
 *
£âögs
,

578 c⁄° *
d©a
,

579 
size_t
 
Àn
)

581 
c
, 
ch
;

582 
öt8_t
 
unhex_vÆ
;

583 c⁄° *
p
 = 
d©a
;

584 c⁄° *
hódî_fõld_m¨k
 = 0;

585 c⁄° *
hódî_vÆue_m¨k
 = 0;

586 c⁄° *
uæ_m¨k
 = 0;

587 c⁄° *
body_m¨k
 = 0;

588 c⁄° *
°©us_m¨k
 = 0;

591 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) {

595 i‡(
Àn
 == 0) {

596 
∑r£r
->
°©e
) {

597 
s_body_idítôy_eof
:

601 
	`CALLBACK_NOTIFY_NOADVANCE
(
mesßge_com∂ëe
);

604 
s_dód
:

605 
s_°¨t_ªq_‹_ªs
:

606 
s_°¨t_ªs
:

607 
s_°¨t_ªq
:

611 
	`SET_ERRNO
(
HPE_INVALID_EOF_STATE
);

617 i‡(
∑r£r
->
°©e
 =
s_hódî_fõld
)

618 
hódî_fõld_m¨k
 = 
d©a
;

619 i‡(
∑r£r
->
°©e
 =
s_hódî_vÆue
)

620 
hódî_vÆue_m¨k
 = 
d©a
;

621 
∑r£r
->
°©e
) {

622 
s_ªq_∑th
:

623 
s_ªq_schema
:

624 
s_ªq_schema_¶ash
:

625 
s_ªq_schema_¶ash_¶ash
:

626 
s_ªq_£rvî_°¨t
:

627 
s_ªq_£rvî
:

628 
s_ªq_£rvî_wôh_©
:

629 
s_ªq_quîy_°rög_°¨t
:

630 
s_ªq_quîy_°rög
:

631 
s_ªq_‰agmít_°¨t
:

632 
s_ªq_‰agmít
:

633 
uæ_m¨k
 = 
d©a
;

635 
s_ªs_°©us
:

636 
°©us_m¨k
 = 
d©a
;

640 
p
=
d©a
;Ö !d©®+ 
Àn
;Ö++) {

641 
ch
 = *
p
;

643 i‡(
	`PARSING_HEADER
(
∑r£r
->
°©e
)) {

644 ++
∑r£r
->
ƒód
;

656 i‡(
∑r£r
->
ƒód
 > (
HTTP_MAX_HEADER_SIZE
)) {

657 
	`SET_ERRNO
(
HPE_HEADER_OVERFLOW
);

658 
îr‹
;

662 
ªexecuã_byã
:

663 
∑r£r
->
°©e
) {

665 
s_dód
:

669 i‡(
ch
 =
CR
 || ch =
LF
)

672 
	`SET_ERRNO
(
HPE_CLOSED_CONNECTION
);

673 
îr‹
;

675 
s_°¨t_ªq_‹_ªs
:

677 i‡(
ch
 =
CR
 || ch =
LF
)

679 
∑r£r
->
Êags
 = 0;

680 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

682 i‡(
ch
 == 'H') {

683 
∑r£r
->
°©e
 = 
s_ªs_‹_ª•_H
;

685 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

687 
∑r£r
->
ty≥
 = 
HTTP_REQUEST
;

688 
∑r£r
->
°©e
 = 
s_°¨t_ªq
;

689 
ªexecuã_byã
;

695 
s_ªs_‹_ª•_H
:

696 i‡(
ch
 == 'T') {

697 
∑r£r
->
ty≥
 = 
HTTP_RESPONSE
;

698 
∑r£r
->
°©e
 = 
s_ªs_HT
;

700 i‡(
ch
 != 'E') {

701 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

702 
îr‹
;

705 
∑r£r
->
ty≥
 = 
HTTP_REQUEST
;

706 
∑r£r
->
mëhod
 = 
HTTP_HEAD
;

707 
∑r£r
->
ödex
 = 2;

708 
∑r£r
->
°©e
 = 
s_ªq_mëhod
;

712 
s_°¨t_ªs
:

714 
∑r£r
->
Êags
 = 0;

715 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

717 
ch
) {

719 
∑r£r
->
°©e
 = 
s_ªs_H
;

722 
CR
:

723 
LF
:

727 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

728 
îr‹
;

731 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

735 
s_ªs_H
:

736 
	`STRICT_CHECK
(
ch
 != 'T');

737 
∑r£r
->
°©e
 = 
s_ªs_HT
;

740 
s_ªs_HT
:

741 
	`STRICT_CHECK
(
ch
 != 'T');

742 
∑r£r
->
°©e
 = 
s_ªs_HTT
;

745 
s_ªs_HTT
:

746 
	`STRICT_CHECK
(
ch
 != 'P');

747 
∑r£r
->
°©e
 = 
s_ªs_HTTP
;

750 
s_ªs_HTTP
:

751 
	`STRICT_CHECK
(
ch
 != '/');

752 
∑r£r
->
°©e
 = 
s_ªs_fú°_hâp_maj‹
;

755 
s_ªs_fú°_hâp_maj‹
:

756 i‡(
ch
 < '0' || ch > '9') {

757 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

758 
îr‹
;

761 
∑r£r
->
hâp_maj‹
 = 
ch
 - '0';

762 
∑r£r
->
°©e
 = 
s_ªs_hâp_maj‹
;

766 
s_ªs_hâp_maj‹
:

768 i‡(
ch
 == '.') {

769 
∑r£r
->
°©e
 = 
s_ªs_fú°_hâp_mö‹
;

773 i‡(!
	`IS_NUM
(
ch
)) {

774 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

775 
îr‹
;

778 
∑r£r
->
hâp_maj‹
 *= 10;

779 
∑r£r
->
hâp_maj‹
 +
ch
 - '0';

781 i‡(
∑r£r
->
hâp_maj‹
 > 999) {

782 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

783 
îr‹
;

790 
s_ªs_fú°_hâp_mö‹
:

791 i‡(!
	`IS_NUM
(
ch
)) {

792 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

793 
îr‹
;

796 
∑r£r
->
hâp_mö‹
 = 
ch
 - '0';

797 
∑r£r
->
°©e
 = 
s_ªs_hâp_mö‹
;

801 
s_ªs_hâp_mö‹
:

803 i‡(
ch
 == ' ') {

804 
∑r£r
->
°©e
 = 
s_ªs_fú°_°©us_code
;

808 i‡(!
	`IS_NUM
(
ch
)) {

809 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

810 
îr‹
;

813 
∑r£r
->
hâp_mö‹
 *= 10;

814 
∑r£r
->
hâp_mö‹
 +
ch
 - '0';

816 i‡(
∑r£r
->
hâp_mö‹
 > 999) {

817 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

818 
îr‹
;

824 
s_ªs_fú°_°©us_code
:

826 i‡(!
	`IS_NUM
(
ch
)) {

827 i‡(
ch
 == ' ') {

831 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

832 
îr‹
;

834 
∑r£r
->
°©us_code
 = 
ch
 - '0';

835 
∑r£r
->
°©e
 = 
s_ªs_°©us_code
;

839 
s_ªs_°©us_code
:

841 i‡(!
	`IS_NUM
(
ch
)) {

842 
ch
) {

844 
∑r£r
->
°©e
 = 
s_ªs_°©us_°¨t
;

846 
CR
:

847 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

849 
LF
:

850 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

853 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

854 
îr‹
;

859 
∑r£r
->
°©us_code
 *= 10;

860 
∑r£r
->
°©us_code
 +
ch
 - '0';

862 i‡(
∑r£r
->
°©us_code
 > 999) {

863 
	`SET_ERRNO
(
HPE_INVALID_STATUS
);

864 
îr‹
;

870 
s_ªs_°©us_°¨t
:

872 i‡(
ch
 =
CR
) {

873 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

877 i‡(
ch
 =
LF
) {

878 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

882 
	`MARK
(
°©us
);

883 
∑r£r
->
°©e
 = 
s_ªs_°©us
;

884 
∑r£r
->
ödex
 = 0;

888 
s_ªs_°©us
:

889 i‡(
ch
 =
CR
) {

890 
∑r£r
->
°©e
 = 
s_ªs_löe_Æmo°_d⁄e
;

891 
	`CALLBACK_DATA
(
°©us
);

895 i‡(
ch
 =
LF
) {

896 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

897 
	`CALLBACK_DATA
(
°©us
);

903 
s_ªs_löe_Æmo°_d⁄e
:

904 
	`STRICT_CHECK
(
ch
 !
LF
);

905 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

908 
s_°¨t_ªq
:

910 i‡(
ch
 =
CR
 || ch =
LF
)

912 
∑r£r
->
Êags
 = 0;

913 
∑r£r
->
c⁄ã¡_Àngth
 = 
ULLONG_MAX
;

915 i‡(!
	`IS_ALPHA
(
ch
)) {

916 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

917 
îr‹
;

920 
∑r£r
->
mëhod
 = (
hâp_mëhod
) 0;

921 
∑r£r
->
ödex
 = 1;

922 
ch
) {

923 'C': 
∑r£r
->
mëhod
 = 
HTTP_CONNECT
; ;

924 'D': 
∑r£r
->
mëhod
 = 
HTTP_DELETE
; ;

925 'G': 
∑r£r
->
mëhod
 = 
HTTP_GET
; ;

926 'H': 
∑r£r
->
mëhod
 = 
HTTP_HEAD
; ;

927 'L': 
∑r£r
->
mëhod
 = 
HTTP_LOCK
; ;

928 'M': 
∑r£r
->
mëhod
 = 
HTTP_MKCOL
; ;

929 'N': 
∑r£r
->
mëhod
 = 
HTTP_NOTIFY
; ;

930 'O': 
∑r£r
->
mëhod
 = 
HTTP_OPTIONS
; ;

931 'P': 
∑r£r
->
mëhod
 = 
HTTP_POST
;

934 'R': 
∑r£r
->
mëhod
 = 
HTTP_REPORT
; ;

935 'S': 
∑r£r
->
mëhod
 = 
HTTP_SUBSCRIBE
; ;

936 'T': 
∑r£r
->
mëhod
 = 
HTTP_TRACE
; ;

937 'U': 
∑r£r
->
mëhod
 = 
HTTP_UNLOCK
; ;

939 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

940 
îr‹
;

942 
∑r£r
->
°©e
 = 
s_ªq_mëhod
;

944 
	`CALLBACK_NOTIFY
(
mesßge_begö
);

949 
s_ªq_mëhod
:

951 c⁄° *
m©chî
;

952 i‡(
ch
 == '\0') {

953 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

954 
îr‹
;

957 
m©chî
 = 
mëhod_°rögs
[
∑r£r
->
mëhod
];

958 i‡(
ch
 =' ' && 
m©chî
[
∑r£r
->
ödex
] == '\0') {

959 
∑r£r
->
°©e
 = 
s_ªq_•a˚s_bef‹e_uæ
;

960 } i‡(
ch
 =
m©chî
[
∑r£r
->
ödex
]) {

962 } i‡(
∑r£r
->
mëhod
 =
HTTP_CONNECT
) {

963 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'H') {

964 
∑r£r
->
mëhod
 = 
HTTP_CHECKOUT
;

965 } i‡(
∑r£r
->
ödex
 =2 && 
ch
 == 'P') {

966 
∑r£r
->
mëhod
 = 
HTTP_COPY
;

968 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

969 
îr‹
;

971 } i‡(
∑r£r
->
mëhod
 =
HTTP_MKCOL
) {

972 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'O') {

973 
∑r£r
->
mëhod
 = 
HTTP_MOVE
;

974 } i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'E') {

975 
∑r£r
->
mëhod
 = 
HTTP_MERGE
;

976 } i‡(
∑r£r
->
ödex
 =1 && 
ch
 == '-') {

977 
∑r£r
->
mëhod
 = 
HTTP_MSEARCH
;

978 } i‡(
∑r£r
->
ödex
 =2 && 
ch
 == 'A') {

979 
∑r£r
->
mëhod
 = 
HTTP_MKACTIVITY
;

980 } i‡(
∑r£r
->
ödex
 =3 && 
ch
 == 'A') {

981 
∑r£r
->
mëhod
 = 
HTTP_MKCALENDAR
;

983 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

984 
îr‹
;

986 } i‡(
∑r£r
->
mëhod
 =
HTTP_SUBSCRIBE
) {

987 i‡(
∑r£r
->
ödex
 =1 && 
ch
 == 'E') {

988 
∑r£r
->
mëhod
 = 
HTTP_SEARCH
;

990 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

991 
îr‹
;

993 } i‡(
∑r£r
->
ödex
 =1 &&Ö¨£r->
mëhod
 =
HTTP_POST
) {

994 i‡(
ch
 == 'R') {

995 
∑r£r
->
mëhod
 = 
HTTP_PROPFIND
;

996 } i‡(
ch
 == 'U') {

997 
∑r£r
->
mëhod
 = 
HTTP_PUT
;

998 } i‡(
ch
 == 'A') {

999 
∑r£r
->
mëhod
 = 
HTTP_PATCH
;

1001 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1002 
îr‹
;

1004 } i‡(
∑r£r
->
ödex
 == 2) {

1005 i‡(
∑r£r
->
mëhod
 =
HTTP_PUT
) {

1006 i‡(
ch
 == 'R') {

1007 
∑r£r
->
mëhod
 = 
HTTP_PURGE
;

1009 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1010 
îr‹
;

1012 } i‡(
∑r£r
->
mëhod
 =
HTTP_UNLOCK
) {

1013 i‡(
ch
 == 'S') {

1014 
∑r£r
->
mëhod
 = 
HTTP_UNSUBSCRIBE
;

1016 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1017 
îr‹
;

1020 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1021 
îr‹
;

1023 } i‡(
∑r£r
->
ödex
 =4 &&Ö¨£r->
mëhod
 =
HTTP_PROPFIND
 && 
ch
 == 'P') {

1024 
∑r£r
->
mëhod
 = 
HTTP_PROPPATCH
;

1026 
	`SET_ERRNO
(
HPE_INVALID_METHOD
);

1027 
îr‹
;

1030 ++
∑r£r
->
ödex
;

1034 
s_ªq_•a˚s_bef‹e_uæ
:

1036 i‡(
ch
 == ' ') ;

1038 
	`MARK
(
uæ
);

1039 i‡(
∑r£r
->
mëhod
 =
HTTP_CONNECT
) {

1040 
∑r£r
->
°©e
 = 
s_ªq_£rvî_°¨t
;

1043 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1044 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1045 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1046 
îr‹
;

1052 
s_ªq_schema
:

1053 
s_ªq_schema_¶ash
:

1054 
s_ªq_schema_¶ash_¶ash
:

1055 
s_ªq_£rvî_°¨t
:

1057 
ch
) {

1060 
CR
:

1061 
LF
:

1062 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1063 
îr‹
;

1065 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1066 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1067 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1068 
îr‹
;

1075 
s_ªq_£rvî
:

1076 
s_ªq_£rvî_wôh_©
:

1077 
s_ªq_∑th
:

1078 
s_ªq_quîy_°rög_°¨t
:

1079 
s_ªq_quîy_°rög
:

1080 
s_ªq_‰agmít_°¨t
:

1081 
s_ªq_‰agmít
:

1083 
ch
) {

1085 
∑r£r
->
°©e
 = 
s_ªq_hâp_°¨t
;

1086 
	`CALLBACK_DATA
(
uæ
);

1088 
CR
:

1089 
LF
:

1090 
∑r£r
->
hâp_maj‹
 = 0;

1091 
∑r£r
->
hâp_mö‹
 = 9;

1092 
∑r£r
->
°©e
 = (
ch
 =
CR
) ?

1093 
s_ªq_löe_Æmo°_d⁄e
 :

1094 
s_hódî_fõld_°¨t
;

1095 
	`CALLBACK_DATA
(
uæ
);

1098 
∑r£r
->
°©e
 = 
	`∑r£_uæ_ch¨
((°©eÌ¨£r->°©e, 
ch
);

1099 i‡(
∑r£r
->
°©e
 =
s_dód
) {

1100 
	`SET_ERRNO
(
HPE_INVALID_URL
);

1101 
îr‹
;

1107 
s_ªq_hâp_°¨t
:

1108 
ch
) {

1110 
∑r£r
->
°©e
 = 
s_ªq_hâp_H
;

1115 
	`SET_ERRNO
(
HPE_INVALID_CONSTANT
);

1116 
îr‹
;

1120 
s_ªq_hâp_H
:

1121 
	`STRICT_CHECK
(
ch
 != 'T');

1122 
∑r£r
->
°©e
 = 
s_ªq_hâp_HT
;

1125 
s_ªq_hâp_HT
:

1126 
	`STRICT_CHECK
(
ch
 != 'T');

1127 
∑r£r
->
°©e
 = 
s_ªq_hâp_HTT
;

1130 
s_ªq_hâp_HTT
:

1131 
	`STRICT_CHECK
(
ch
 != 'P');

1132 
∑r£r
->
°©e
 = 
s_ªq_hâp_HTTP
;

1135 
s_ªq_hâp_HTTP
:

1136 
	`STRICT_CHECK
(
ch
 != '/');

1137 
∑r£r
->
°©e
 = 
s_ªq_fú°_hâp_maj‹
;

1141 
s_ªq_fú°_hâp_maj‹
:

1142 i‡(
ch
 < '1' || ch > '9') {

1143 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1144 
îr‹
;

1147 
∑r£r
->
hâp_maj‹
 = 
ch
 - '0';

1148 
∑r£r
->
°©e
 = 
s_ªq_hâp_maj‹
;

1152 
s_ªq_hâp_maj‹
:

1154 i‡(
ch
 == '.') {

1155 
∑r£r
->
°©e
 = 
s_ªq_fú°_hâp_mö‹
;

1159 i‡(!
	`IS_NUM
(
ch
)) {

1160 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1161 
îr‹
;

1164 
∑r£r
->
hâp_maj‹
 *= 10;

1165 
∑r£r
->
hâp_maj‹
 +
ch
 - '0';

1167 i‡(
∑r£r
->
hâp_maj‹
 > 999) {

1168 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1169 
îr‹
;

1176 
s_ªq_fú°_hâp_mö‹
:

1177 i‡(!
	`IS_NUM
(
ch
)) {

1178 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1179 
îr‹
;

1182 
∑r£r
->
hâp_mö‹
 = 
ch
 - '0';

1183 
∑r£r
->
°©e
 = 
s_ªq_hâp_mö‹
;

1187 
s_ªq_hâp_mö‹
:

1189 i‡(
ch
 =
CR
) {

1190 
∑r£r
->
°©e
 = 
s_ªq_löe_Æmo°_d⁄e
;

1194 i‡(
ch
 =
LF
) {

1195 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1201 i‡(!
	`IS_NUM
(
ch
)) {

1202 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1203 
îr‹
;

1206 
∑r£r
->
hâp_mö‹
 *= 10;

1207 
∑r£r
->
hâp_mö‹
 +
ch
 - '0';

1209 i‡(
∑r£r
->
hâp_mö‹
 > 999) {

1210 
	`SET_ERRNO
(
HPE_INVALID_VERSION
);

1211 
îr‹
;

1218 
s_ªq_löe_Æmo°_d⁄e
:

1220 i‡(
ch
 !
LF
) {

1221 
	`SET_ERRNO
(
HPE_LF_EXPECTED
);

1222 
îr‹
;

1225 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1229 
s_hódî_fõld_°¨t
:

1231 i‡(
ch
 =
CR
) {

1232 
∑r£r
->
°©e
 = 
s_hódîs_Æmo°_d⁄e
;

1236 i‡(
ch
 =
LF
) {

1239 
∑r£r
->
°©e
 = 
s_hódîs_Æmo°_d⁄e
;

1240 
ªexecuã_byã
;

1243 
c
 = 
	`TOKEN
(
ch
);

1245 i‡(!
c
) {

1246 
	`SET_ERRNO
(
HPE_INVALID_HEADER_TOKEN
);

1247 
îr‹
;

1250 
	`MARK
(
hódî_fõld
);

1252 
∑r£r
->
ödex
 = 0;

1253 
∑r£r
->
°©e
 = 
s_hódî_fõld
;

1255 
c
) {

1257 
∑r£r
->
hódî_°©e
 = 
h_C
;

1261 
∑r£r
->
hódî_°©e
 = 
h_m©chög_¥oxy_c⁄√˘i⁄
;

1265 
∑r£r
->
hódî_°©e
 = 
h_m©chög_å™s„r_ícodög
;

1269 
∑r£r
->
hódî_°©e
 = 
h_m©chög_upgøde
;

1273 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1279 
s_hódî_fõld
:

1281 
c
 = 
	`TOKEN
(
ch
);

1283 i‡(
c
) {

1284 
∑r£r
->
hódî_°©e
) {

1285 
h_gíîÆ
:

1288 
h_C
:

1289 
∑r£r
->
ödex
++;

1290 
∑r£r
->
hódî_°©e
 = (
c
 ='o' ? 
h_CO
 : 
h_gíîÆ
);

1293 
h_CO
:

1294 
∑r£r
->
ödex
++;

1295 
∑r£r
->
hódî_°©e
 = (
c
 ='n' ? 
h_CON
 : 
h_gíîÆ
);

1298 
h_CON
:

1299 
∑r£r
->
ödex
++;

1300 
c
) {

1302 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄
;

1305 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄ã¡_Àngth
;

1308 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1315 
h_m©chög_c⁄√˘i⁄
:

1316 
∑r£r
->
ödex
++;

1317 i‡(
∑r£r
->
ödex
 > (
CONNECTION
)-1

1318 || 
c
 !
CONNECTION
[
∑r£r
->
ödex
]) {

1319 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1320 } i‡(
∑r£r
->
ödex
 =(
CONNECTION
)-2) {

1321 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄
;

1327 
h_m©chög_¥oxy_c⁄√˘i⁄
:

1328 
∑r£r
->
ödex
++;

1329 i‡(
∑r£r
->
ödex
 > (
PROXY_CONNECTION
)-1

1330 || 
c
 !
PROXY_CONNECTION
[
∑r£r
->
ödex
]) {

1331 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1332 } i‡(
∑r£r
->
ödex
 =(
PROXY_CONNECTION
)-2) {

1333 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄
;

1339 
h_m©chög_c⁄ã¡_Àngth
:

1340 
∑r£r
->
ödex
++;

1341 i‡(
∑r£r
->
ödex
 > (
CONTENT_LENGTH
)-1

1342 || 
c
 !
CONTENT_LENGTH
[
∑r£r
->
ödex
]) {

1343 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1344 } i‡(
∑r£r
->
ödex
 =(
CONTENT_LENGTH
)-2) {

1345 
∑r£r
->
hódî_°©e
 = 
h_c⁄ã¡_Àngth
;

1351 
h_m©chög_å™s„r_ícodög
:

1352 
∑r£r
->
ödex
++;

1353 i‡(
∑r£r
->
ödex
 > (
TRANSFER_ENCODING
)-1

1354 || 
c
 !
TRANSFER_ENCODING
[
∑r£r
->
ödex
]) {

1355 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1356 } i‡(
∑r£r
->
ödex
 =(
TRANSFER_ENCODING
)-2) {

1357 
∑r£r
->
hódî_°©e
 = 
h_å™s„r_ícodög
;

1363 
h_m©chög_upgøde
:

1364 
∑r£r
->
ödex
++;

1365 i‡(
∑r£r
->
ödex
 > (
UPGRADE
)-1

1366 || 
c
 !
UPGRADE
[
∑r£r
->
ödex
]) {

1367 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1368 } i‡(
∑r£r
->
ödex
 =(
UPGRADE
)-2) {

1369 
∑r£r
->
hódî_°©e
 = 
h_upgøde
;

1373 
h_c⁄√˘i⁄
:

1374 
h_c⁄ã¡_Àngth
:

1375 
h_å™s„r_ícodög
:

1376 
h_upgøde
:

1377 i‡(
ch
 !' 'Ë
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1381 
	`as£π
(0 && "Unknown header_state");

1387 i‡(
ch
 == ':') {

1388 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws
;

1389 
	`CALLBACK_DATA
(
hódî_fõld
);

1393 i‡(
ch
 =
CR
) {

1394 
∑r£r
->
°©e
 = 
s_hódî_Æmo°_d⁄e
;

1395 
	`CALLBACK_DATA
(
hódî_fõld
);

1399 i‡(
ch
 =
LF
) {

1400 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1401 
	`CALLBACK_DATA
(
hódî_fõld
);

1405 
	`SET_ERRNO
(
HPE_INVALID_HEADER_TOKEN
);

1406 
îr‹
;

1409 
s_hódî_vÆue_disˇrd_ws
:

1410 i‡(
ch
 == ' ' || ch == '\t') ;

1412 i‡(
ch
 =
CR
) {

1413 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e
;

1417 i‡(
ch
 =
LF
) {

1418 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_lws
;

1424 
s_hódî_vÆue_°¨t
:

1426 
	`MARK
(
hódî_vÆue
);

1428 
∑r£r
->
°©e
 = 
s_hódî_vÆue
;

1429 
∑r£r
->
ödex
 = 0;

1431 
c
 = 
	`LOWER
(
ch
);

1433 
∑r£r
->
hódî_°©e
) {

1434 
h_upgøde
:

1435 
∑r£r
->
Êags
 |
F_UPGRADE
;

1436 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1439 
h_å™s„r_ícodög
:

1441 i‡('c' =
c
) {

1442 
∑r£r
->
hódî_°©e
 = 
h_m©chög_å™s„r_ícodög_chunked
;

1444 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1448 
h_c⁄ã¡_Àngth
:

1449 i‡(!
	`IS_NUM
(
ch
)) {

1450 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1451 
îr‹
;

1454 
∑r£r
->
c⁄ã¡_Àngth
 = 
ch
 - '0';

1457 
h_c⁄√˘i⁄
:

1459 i‡(
c
 == 'k') {

1460 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄_kìp_Æive
;

1462 } i‡(
c
 == 'c') {

1463 
∑r£r
->
hódî_°©e
 = 
h_m©chög_c⁄√˘i⁄_˛o£
;

1465 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1470 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1476 
s_hódî_vÆue
:

1479 i‡(
ch
 =
CR
) {

1480 
∑r£r
->
°©e
 = 
s_hódî_Æmo°_d⁄e
;

1481 
	`CALLBACK_DATA
(
hódî_vÆue
);

1485 i‡(
ch
 =
LF
) {

1486 
∑r£r
->
°©e
 = 
s_hódî_Æmo°_d⁄e
;

1487 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1488 
ªexecuã_byã
;

1491 
c
 = 
	`LOWER
(
ch
);

1493 
∑r£r
->
hódî_°©e
) {

1494 
h_gíîÆ
:

1497 
h_c⁄√˘i⁄
:

1498 
h_å™s„r_ícodög
:

1499 
	`as£π
(0 && "Shouldn't get here.");

1502 
h_c⁄ã¡_Àngth
:

1504 
uöt64_t
 
t
;

1506 i‡(
ch
 == ' ') ;

1508 i‡(!
	`IS_NUM
(
ch
)) {

1509 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1510 
îr‹
;

1513 
t
 = 
∑r£r
->
c⁄ã¡_Àngth
;

1514 
t
 *= 10;

1515 
t
 +
ch
 - '0';

1518 i‡((
ULLONG_MAX
 - 10Ë/ 10 < 
∑r£r
->
c⁄ã¡_Àngth
) {

1519 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1520 
îr‹
;

1523 
∑r£r
->
c⁄ã¡_Àngth
 = 
t
;

1528 
h_m©chög_å™s„r_ícodög_chunked
:

1529 
∑r£r
->
ödex
++;

1530 i‡(
∑r£r
->
ödex
 > (
CHUNKED
)-1

1531 || 
c
 !
CHUNKED
[
∑r£r
->
ödex
]) {

1532 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1533 } i‡(
∑r£r
->
ödex
 =(
CHUNKED
)-2) {

1534 
∑r£r
->
hódî_°©e
 = 
h_å™s„r_ícodög_chunked
;

1539 
h_m©chög_c⁄√˘i⁄_kìp_Æive
:

1540 
∑r£r
->
ödex
++;

1541 i‡(
∑r£r
->
ödex
 > (
KEEP_ALIVE
)-1

1542 || 
c
 !
KEEP_ALIVE
[
∑r£r
->
ödex
]) {

1543 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1544 } i‡(
∑r£r
->
ödex
 =(
KEEP_ALIVE
)-2) {

1545 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄_kìp_Æive
;

1550 
h_m©chög_c⁄√˘i⁄_˛o£
:

1551 
∑r£r
->
ödex
++;

1552 i‡(
∑r£r
->
ödex
 > (
CLOSE
)-1 || 
c
 != CLOSE[parser->index]) {

1553 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1554 } i‡(
∑r£r
->
ödex
 =(
CLOSE
)-2) {

1555 
∑r£r
->
hódî_°©e
 = 
h_c⁄√˘i⁄_˛o£
;

1559 
h_å™s„r_ícodög_chunked
:

1560 
h_c⁄√˘i⁄_kìp_Æive
:

1561 
h_c⁄√˘i⁄_˛o£
:

1562 i‡(
ch
 !' 'Ë
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1566 
∑r£r
->
°©e
 = 
s_hódî_vÆue
;

1567 
∑r£r
->
hódî_°©e
 = 
h_gíîÆ
;

1573 
s_hódî_Æmo°_d⁄e
:

1575 
	`STRICT_CHECK
(
ch
 !
LF
);

1577 
∑r£r
->
°©e
 = 
s_hódî_vÆue_lws
;

1581 
s_hódî_vÆue_lws
:

1583 i‡(
ch
 == ' ' || ch == '\t') {

1584 
∑r£r
->
°©e
 = 
s_hódî_vÆue_°¨t
;

1585 
ªexecuã_byã
;

1589 
∑r£r
->
hódî_°©e
) {

1590 
h_c⁄√˘i⁄_kìp_Æive
:

1591 
∑r£r
->
Êags
 |
F_CONNECTION_KEEP_ALIVE
;

1593 
h_c⁄√˘i⁄_˛o£
:

1594 
∑r£r
->
Êags
 |
F_CONNECTION_CLOSE
;

1596 
h_å™s„r_ícodög_chunked
:

1597 
∑r£r
->
Êags
 |
F_CHUNKED
;

1603 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1604 
ªexecuã_byã
;

1607 
s_hódî_vÆue_disˇrd_ws_Æmo°_d⁄e
:

1609 
	`STRICT_CHECK
(
ch
 !
LF
);

1610 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_lws
;

1614 
s_hódî_vÆue_disˇrd_lws
:

1616 i‡(
ch
 == ' ' || ch == '\t') {

1617 
∑r£r
->
°©e
 = 
s_hódî_vÆue_disˇrd_ws
;

1621 
	`MARK
(
hódî_vÆue
);

1622 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1623 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1624 
ªexecuã_byã
;

1628 
s_hódîs_Æmo°_d⁄e
:

1630 
	`STRICT_CHECK
(
ch
 !
LF
);

1632 i‡(
∑r£r
->
Êags
 & 
F_TRAILING
) {

1634 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1635 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1639 
∑r£r
->
°©e
 = 
s_hódîs_d⁄e
;

1642 
∑r£r
->
upgøde
 =

1643 (
∑r£r
->
Êags
 & 
F_UPGRADE
 ||Ö¨£r->
mëhod
 =
HTTP_CONNECT
);

1654 i‡(
£âögs
->
⁄_hódîs_com∂ëe
) {

1655 
£âögs
->
	`⁄_hódîs_com∂ëe
(
∑r£r
)) {

1660 
∑r£r
->
Êags
 |
F_SKIPBODY
;

1664 
	`SET_ERRNO
(
HPE_CB_hódîs_com∂ëe
);

1665  
p
 - 
d©a
;

1669 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë!
HPE_OK
) {

1670  
p
 - 
d©a
;

1673 
ªexecuã_byã
;

1676 
s_hódîs_d⁄e
:

1678 
	`STRICT_CHECK
(
ch
 !
LF
);

1680 
∑r£r
->
ƒód
 = 0;

1683 i‡(
∑r£r
->
upgøde
) {

1684 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1685 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1686  (
p
 - 
d©a
) + 1;

1689 i‡(
∑r£r
->
Êags
 & 
F_SKIPBODY
) {

1690 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1691 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1692 } i‡(
∑r£r
->
Êags
 & 
F_CHUNKED
) {

1694 
∑r£r
->
°©e
 = 
s_chunk_size_°¨t
;

1696 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1698 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1699 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1700 } i‡(
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
) {

1702 
∑r£r
->
°©e
 = 
s_body_idítôy
;

1704 i‡(
∑r£r
->
ty≥
 =
HTTP_REQUEST
 ||

1705 !
	`hâp_mesßge_√eds_eof
(
∑r£r
)) {

1707 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1708 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1711 
∑r£r
->
°©e
 = 
s_body_idítôy_eof
;

1719 
s_body_idítôy
:

1721 
uöt64_t
 
to_ªad
 = 
	`MIN
(
∑r£r
->
c⁄ã¡_Àngth
,

1722 (
uöt64_t
Ë((
d©a
 + 
Àn
Ë- 
p
));

1724 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 != 0

1725 && 
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
);

1732 
	`MARK
(
body
);

1733 
∑r£r
->
c⁄ã¡_Àngth
 -
to_ªad
;

1734 
p
 +
to_ªad
 - 1;

1736 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1737 
∑r£r
->
°©e
 = 
s_mesßge_d⁄e
;

1748 
	`CALLBACK_DATA_
(
body
, 
p
 - 
body_m¨k
 + 1,Ö - 
d©a
);

1749 
ªexecuã_byã
;

1756 
s_body_idítôy_eof
:

1757 
	`MARK
(
body
);

1758 
p
 = 
d©a
 + 
Àn
 - 1;

1762 
s_mesßge_d⁄e
:

1763 
∑r£r
->
°©e
 = 
	`NEW_MESSAGE
();

1764 
	`CALLBACK_NOTIFY
(
mesßge_com∂ëe
);

1767 
s_chunk_size_°¨t
:

1769 
	`as£π
(
∑r£r
->
ƒód
 == 1);

1770 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1772 
unhex_vÆ
 = 
unhex
[()
ch
];

1773 i‡(
unhex_vÆ
 == -1) {

1774 
	`SET_ERRNO
(
HPE_INVALID_CHUNK_SIZE
);

1775 
îr‹
;

1778 
∑r£r
->
c⁄ã¡_Àngth
 = 
unhex_vÆ
;

1779 
∑r£r
->
°©e
 = 
s_chunk_size
;

1783 
s_chunk_size
:

1785 
uöt64_t
 
t
;

1787 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1789 i‡(
ch
 =
CR
) {

1790 
∑r£r
->
°©e
 = 
s_chunk_size_Æmo°_d⁄e
;

1794 
unhex_vÆ
 = 
unhex
[()
ch
];

1796 i‡(
unhex_vÆ
 == -1) {

1797 i‡(
ch
 == ';' || ch == ' ') {

1798 
∑r£r
->
°©e
 = 
s_chunk_∑ømëîs
;

1802 
	`SET_ERRNO
(
HPE_INVALID_CHUNK_SIZE
);

1803 
îr‹
;

1806 
t
 = 
∑r£r
->
c⁄ã¡_Àngth
;

1807 
t
 *= 16;

1808 
t
 +
unhex_vÆ
;

1811 i‡((
ULLONG_MAX
 - 16Ë/ 16 < 
∑r£r
->
c⁄ã¡_Àngth
) {

1812 
	`SET_ERRNO
(
HPE_INVALID_CONTENT_LENGTH
);

1813 
îr‹
;

1816 
∑r£r
->
c⁄ã¡_Àngth
 = 
t
;

1820 
s_chunk_∑ømëîs
:

1822 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1824 i‡(
ch
 =
CR
) {

1825 
∑r£r
->
°©e
 = 
s_chunk_size_Æmo°_d⁄e
;

1831 
s_chunk_size_Æmo°_d⁄e
:

1833 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1834 
	`STRICT_CHECK
(
ch
 !
LF
);

1836 
∑r£r
->
ƒód
 = 0;

1838 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1839 
∑r£r
->
Êags
 |
F_TRAILING
;

1840 
∑r£r
->
°©e
 = 
s_hódî_fõld_°¨t
;

1842 
∑r£r
->
°©e
 = 
s_chunk_d©a
;

1847 
s_chunk_d©a
:

1849 
uöt64_t
 
to_ªad
 = 
	`MIN
(
∑r£r
->
c⁄ã¡_Àngth
,

1850 (
uöt64_t
Ë((
d©a
 + 
Àn
Ë- 
p
));

1852 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1853 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 != 0

1854 && 
∑r£r
->
c⁄ã¡_Àngth
 !
ULLONG_MAX
);

1859 
	`MARK
(
body
);

1860 
∑r£r
->
c⁄ã¡_Àngth
 -
to_ªad
;

1861 
p
 +
to_ªad
 - 1;

1863 i‡(
∑r£r
->
c⁄ã¡_Àngth
 == 0) {

1864 
∑r£r
->
°©e
 = 
s_chunk_d©a_Æmo°_d⁄e
;

1870 
s_chunk_d©a_Æmo°_d⁄e
:

1871 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1872 
	`as£π
(
∑r£r
->
c⁄ã¡_Àngth
 == 0);

1873 
	`STRICT_CHECK
(
ch
 !
CR
);

1874 
∑r£r
->
°©e
 = 
s_chunk_d©a_d⁄e
;

1875 
	`CALLBACK_DATA
(
body
);

1878 
s_chunk_d©a_d⁄e
:

1879 
	`as£π
(
∑r£r
->
Êags
 & 
F_CHUNKED
);

1880 
	`STRICT_CHECK
(
ch
 !
LF
);

1881 
∑r£r
->
ƒód
 = 0;

1882 
∑r£r
->
°©e
 = 
s_chunk_size_°¨t
;

1886 
	`as£π
(0 && "unhandled state");

1887 
	`SET_ERRNO
(
HPE_INVALID_INTERNAL_STATE
);

1888 
îr‹
;

1902 
	`as£π
(((
hódî_fõld_m¨k
 ? 1 : 0) +

1903 (
hódî_vÆue_m¨k
 ? 1 : 0) +

1904 (
uæ_m¨k
 ? 1 : 0) +

1905 (
body_m¨k
 ? 1 : 0) +

1906 (
°©us_m¨k
 ? 1 : 0)) <= 1);

1908 
	`CALLBACK_DATA_NOADVANCE
(
hódî_fõld
);

1909 
	`CALLBACK_DATA_NOADVANCE
(
hódî_vÆue
);

1910 
	`CALLBACK_DATA_NOADVANCE
(
uæ
);

1911 
	`CALLBACK_DATA_NOADVANCE
(
body
);

1912 
	`CALLBACK_DATA_NOADVANCE
(
°©us
);

1914  
Àn
;

1916 
îr‹
:

1917 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
) {

1918 
	`SET_ERRNO
(
HPE_UNKNOWN
);

1921  (
p
 - 
d©a
);

1922 
	}
}

1927 
	$hâp_mesßge_√eds_eof
 (c⁄° 
hâp_∑r£r
 *
∑r£r
)

1929 i‡(
∑r£r
->
ty≥
 =
HTTP_REQUEST
) {

1934 i‡(
∑r£r
->
°©us_code
 / 100 == 1 ||

1935 
∑r£r
->
°©us_code
 == 204 ||

1936 
∑r£r
->
°©us_code
 == 304 ||

1937 
∑r£r
->
Êags
 & 
F_SKIPBODY
) {

1941 i‡((
∑r£r
->
Êags
 & 
F_CHUNKED
Ë||Ö¨£r->
c⁄ã¡_Àngth
 !
ULLONG_MAX
) {

1946 
	}
}

1950 
	$hâp_should_kìp_Æive
 (c⁄° 
hâp_∑r£r
 *
∑r£r
)

1952 i‡(
∑r£r
->
hâp_maj‹
 > 0 &&Ö¨£r->
hâp_mö‹
 > 0) {

1954 i‡(
∑r£r
->
Êags
 & 
F_CONNECTION_CLOSE
) {

1959 i‡(!(
∑r£r
->
Êags
 & 
F_CONNECTION_KEEP_ALIVE
)) {

1964  !
	`hâp_mesßge_√eds_eof
(
∑r£r
);

1965 
	}
}

1969 
	$hâp_mëhod_°r
 (
hâp_mëhod
 
m
)

1971  
	`ELEM_AT
(
mëhod_°rögs
, 
m
, "<unknown>");

1972 
	}
}

1976 
	$hâp_∑r£r_öô
 (
hâp_∑r£r
 *
∑r£r
, 
hâp_∑r£r_ty≥
 
t
)

1978 *
d©a
 = 
∑r£r
->data;

1979 
	`mem£t
(
∑r£r
, 0, (*parser));

1980 
∑r£r
->
d©a
 = data;

1981 
∑r£r
->
ty≥
 = 
t
;

1982 
∑r£r
->
°©e
 = (
t
 =
HTTP_REQUEST
 ? 
s_°¨t_ªq
 : (à=
HTTP_RESPONSE
 ? 
s_°¨t_ªs
 : 
s_°¨t_ªq_‹_ªs
));

1983 
∑r£r
->
hâp_î∫o
 = 
HPE_OK
;

1984 
	}
}

1987 
	$hâp_î∫o_«me
(
hâp_î∫o
 
îr
) {

1988 
	`as£π
(
îr
 < ((
hâp_°ªº‹_èb
)/(http_strerror_tab[0])));

1989  
hâp_°ªº‹_èb
[
îr
].
«me
;

1990 
	}
}

1993 
	$hâp_î∫o_des¸ùti⁄
(
hâp_î∫o
 
îr
) {

1994 
	`as£π
(
îr
 < ((
hâp_°ªº‹_èb
)/(http_strerror_tab[0])));

1995  
hâp_°ªº‹_èb
[
îr
].
des¸ùti⁄
;

1996 
	}
}

1998 
hâp_ho°_°©e


1999 
	$hâp_∑r£_ho°_ch¨
(
hâp_ho°_°©e
 
s
, c⁄° 
ch
) {

2000 
s
) {

2001 
s_hâp_u£röfo
:

2002 
s_hâp_u£röfo_°¨t
:

2003 i‡(
ch
 == '@') {

2004  
s_hâp_ho°_°¨t
;

2007 i‡(
	`IS_USERINFO_CHAR
(
ch
)) {

2008  
s_hâp_u£röfo
;

2012 
s_hâp_ho°_°¨t
:

2013 i‡(
ch
 == '[') {

2014  
s_hâp_ho°_v6_°¨t
;

2017 i‡(
	`IS_HOST_CHAR
(
ch
)) {

2018  
s_hâp_ho°
;

2023 
s_hâp_ho°
:

2024 i‡(
	`IS_HOST_CHAR
(
ch
)) {

2025  
s_hâp_ho°
;

2029 
s_hâp_ho°_v6_íd
:

2030 i‡(
ch
 == ':') {

2031  
s_hâp_ho°_p‹t_°¨t
;

2036 
s_hâp_ho°_v6
:

2037 i‡(
ch
 == ']') {

2038  
s_hâp_ho°_v6_íd
;

2042 
s_hâp_ho°_v6_°¨t
:

2043 i‡(
	`IS_HEX
(
ch
) || ch == ':' || ch == '.') {

2044  
s_hâp_ho°_v6
;

2049 
s_hâp_ho°_p‹t
:

2050 
s_hâp_ho°_p‹t_°¨t
:

2051 i‡(
	`IS_NUM
(
ch
)) {

2052  
s_hâp_ho°_p‹t
;

2060  
s_hâp_ho°_dód
;

2061 
	}
}

2064 
	$hâp_∑r£_ho°
(c⁄° * 
buf
, 
hâp_∑r£r_uæ
 *
u
, 
found_©
) {

2065 
hâp_ho°_°©e
 
s
;

2067 c⁄° *
p
;

2068 
size_t
 
buÊí
 = 
u
->
fõld_d©a
[
UF_HOST
].
off
 + u->fõld_d©a[UF_HOST].
Àn
;

2070 
u
->
fõld_d©a
[
UF_HOST
].
Àn
 = 0;

2072 
s
 = 
found_©
 ? 
s_hâp_u£röfo_°¨t
 : 
s_hâp_ho°_°¨t
;

2074 
p
 = 
buf
 + 
u
->
fõld_d©a
[
UF_HOST
].
off
;Ö < bu‡+ 
buÊí
;Ö++) {

2075 
hâp_ho°_°©e
 
√w_s
 = 
	`hâp_∑r£_ho°_ch¨
(
s
, *
p
);

2077 i‡(
√w_s
 =
s_hâp_ho°_dód
) {

2081 
√w_s
) {

2082 
s_hâp_ho°
:

2083 i‡(
s
 !
s_hâp_ho°
) {

2084 
u
->
fõld_d©a
[
UF_HOST
].
off
 = 
p
 - 
buf
;

2086 
u
->
fõld_d©a
[
UF_HOST
].
Àn
++;

2089 
s_hâp_ho°_v6
:

2090 i‡(
s
 !
s_hâp_ho°_v6
) {

2091 
u
->
fõld_d©a
[
UF_HOST
].
off
 = 
p
 - 
buf
;

2093 
u
->
fõld_d©a
[
UF_HOST
].
Àn
++;

2096 
s_hâp_ho°_p‹t
:

2097 i‡(
s
 !
s_hâp_ho°_p‹t
) {

2098 
u
->
fõld_d©a
[
UF_PORT
].
off
 = 
p
 - 
buf
;

2099 
u
->
fõld_d©a
[
UF_PORT
].
Àn
 = 0;

2100 
u
->
fõld_£t
 |(1 << 
UF_PORT
);

2102 
u
->
fõld_d©a
[
UF_PORT
].
Àn
++;

2105 
s_hâp_u£röfo
:

2106 i‡(
s
 !
s_hâp_u£röfo
) {

2107 
u
->
fõld_d©a
[
UF_USERINFO
].
off
 = 
p
 - 
buf
 ;

2108 
u
->
fõld_d©a
[
UF_USERINFO
].
Àn
 = 0;

2109 
u
->
fõld_£t
 |(1 << 
UF_USERINFO
);

2111 
u
->
fõld_d©a
[
UF_USERINFO
].
Àn
++;

2117 
s
 = 
√w_s
;

2121 
s
) {

2122 
s_hâp_ho°_°¨t
:

2123 
s_hâp_ho°_v6_°¨t
:

2124 
s_hâp_ho°_v6
:

2125 
s_hâp_ho°_p‹t_°¨t
:

2126 
s_hâp_u£röfo
:

2127 
s_hâp_u£röfo_°¨t
:

2134 
	}
}

2137 
	$hâp_∑r£r_∑r£_uæ
(c⁄° *
buf
, 
size_t
 
buÊí
, 
is_c⁄√˘
,

2138 
hâp_∑r£r_uæ
 *
u
)

2140 
°©e
 
s
;

2141 c⁄° *
p
;

2142 
hâp_∑r£r_uæ_fõlds
 
uf
, 
ﬁd_uf
;

2143 
found_©
 = 0;

2145 
u
->
p‹t
 = u->
fõld_£t
 = 0;

2146 
s
 = 
is_c⁄√˘
 ? 
s_ªq_£rvî_°¨t
 : 
s_ªq_•a˚s_bef‹e_uæ
;

2147 
ﬁd_uf
 = 
UF_MAX
;

2149 
p
 = 
buf
;Ö < bu‡+ 
buÊí
;Ö++) {

2150 
s
 = 
	`∑r£_uæ_ch¨
(s, *
p
);

2153 
s
) {

2154 
s_dód
:

2158 
s_ªq_schema_¶ash
:

2159 
s_ªq_schema_¶ash_¶ash
:

2160 
s_ªq_£rvî_°¨t
:

2161 
s_ªq_quîy_°rög_°¨t
:

2162 
s_ªq_‰agmít_°¨t
:

2165 
s_ªq_schema
:

2166 
uf
 = 
UF_SCHEMA
;

2169 
s_ªq_£rvî_wôh_©
:

2170 
found_©
 = 1;

2173 
s_ªq_£rvî
:

2174 
uf
 = 
UF_HOST
;

2177 
s_ªq_∑th
:

2178 
uf
 = 
UF_PATH
;

2181 
s_ªq_quîy_°rög
:

2182 
uf
 = 
UF_QUERY
;

2185 
s_ªq_‰agmít
:

2186 
uf
 = 
UF_FRAGMENT
;

2190 
	`as£π
(!"Unexpected state");

2195 i‡(
uf
 =
ﬁd_uf
) {

2196 
u
->
fõld_d©a
[
uf
].
Àn
++;

2200 
u
->
fõld_d©a
[
uf
].
off
 = 
p
 - 
buf
;

2201 
u
->
fõld_d©a
[
uf
].
Àn
 = 1;

2203 
u
->
fõld_£t
 |(1 << 
uf
);

2204 
ﬁd_uf
 = 
uf
;

2209 i‡((
u
->
fõld_£t
 & ((1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
))) != 0) {

2210 i‡(
	`hâp_∑r£_ho°
(
buf
, 
u
, 
found_©
) != 0) {

2216 i‡(
is_c⁄√˘
 && 
u
->
fõld_£t
 !((1 << 
UF_HOST
)|(1 << 
UF_PORT
))) {

2220 i‡(
u
->
fõld_£t
 & (1 << 
UF_PORT
)) {

2222 
v
 = 
	`°πoul
(
buf
 + 
u
->
fõld_d©a
[
UF_PORT
].
off
, 
NULL
, 10);

2225 i‡(
v
 > 0xffff) {

2229 
u
->
p‹t
 = (
uöt16_t
Ë
v
;

2233 
	}
}

2236 
	$hâp_∑r£r_∑u£
(
hâp_∑r£r
 *
∑r£r
, 
∑u£d
) {

2241 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_OK
 ||

2242 
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_PAUSED
) {

2243 
	`SET_ERRNO
((
∑u£d
Ë? 
HPE_PAUSED
 : 
HPE_OK
);

2245 
	`as£π
(0 && "AttemptingÅoÖauseÖarser inÉrror state");

2247 
	}
}

2250 
	$hâp_body_is_föÆ
(c⁄° 
hâp_∑r£r
 *
∑r£r
) {

2251  
∑r£r
->
°©e
 =
s_mesßge_d⁄e
;

2252 
	}
}

2255 
	$hâp_∑r£r_vîsi⁄
() {

2256  
HTTP_PARSER_VERSION_MAJOR
 * 0x10000 |

2257 
HTTP_PARSER_VERSION_MINOR
 * 0x00100 |

2258 
HTTP_PARSER_VERSION_PATCH
 * 0x00001;

2259 
	}
}

	@deps/http-parser/http_parser.h

21 #i‚de‡
hâp_∑r£r_h


22 
	#hâp_∑r£r_h


	)

23 #ifde‡
__˝lu•lus


28 
	#HTTP_PARSER_VERSION_MAJOR
 2

	)

29 
	#HTTP_PARSER_VERSION_MINOR
 3

	)

30 
	#HTTP_PARSER_VERSION_PATCH
 0

	)

32 
	~<sys/ty≥s.h
>

33 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
Ë&& (!deföed(
_MSC_VER
) || _MSC_VER<1600)

34 
	~<Ba£Tsd.h
>

35 
	~<°ddef.h
>

36 
__öt8
 
	töt8_t
;

37 
	t__öt8
 
	tuöt8_t
;

38 
__öt16
 
	töt16_t
;

39 
	t__öt16
 
	tuöt16_t
;

40 
__öt32
 
	töt32_t
;

41 
	t__öt32
 
	tuöt32_t
;

42 
__öt64
 
	töt64_t
;

43 
	t__öt64
 
	tuöt64_t
;

45 
	~<°döt.h
>

51 #i‚de‡
HTTP_PARSER_STRICT


52 
	#HTTP_PARSER_STRICT
 1

	)

62 #i‚de‡
HTTP_MAX_HEADER_SIZE


63 
	#HTTP_MAX_HEADER_SIZE
 (80*1024)

	)

66 
hâp_∑r£r
 
	thâp_∑r£r
;

67 
hâp_∑r£r_£âögs
 
	thâp_∑r£r_£âögs
;

83 (*
hâp_d©a_cb
Ë(
	thâp_∑r£r
*, c⁄° *
	t©
, 
	tsize_t
 
	tÀngth
);

84 (*
hâp_cb
Ë(
	thâp_∑r£r
*);

88 
	#HTTP_METHOD_MAP
(
XX
) \

89 
	`XX
(0, 
DELETE
, DELETE) \

90 
	`XX
(1, 
GET
, GET) \

91 
	`XX
(2, 
HEAD
, HEAD) \

92 
	`XX
(3, 
POST
, POST) \

93 
	`XX
(4, 
PUT
, PUT) \

95 
	`XX
(5, 
CONNECT
, CONNECT) \

96 
	`XX
(6, 
OPTIONS
, OPTIONS) \

97 
	`XX
(7, 
TRACE
, TRACE) \

99 
	`XX
(8, 
COPY
, COPY) \

100 
	`XX
(9, 
LOCK
, LOCK) \

101 
	`XX
(10, 
MKCOL
, MKCOL) \

102 
	`XX
(11, 
MOVE
, MOVE) \

103 
	`XX
(12, 
PROPFIND
, PROPFIND) \

104 
	`XX
(13, 
PROPPATCH
, PROPPATCH) \

105 
	`XX
(14, 
SEARCH
, SEARCH) \

106 
	`XX
(15, 
UNLOCK
, UNLOCK) \

108 
	`XX
(16, 
REPORT
, REPORT) \

109 
	`XX
(17, 
MKACTIVITY
, MKACTIVITY) \

110 
	`XX
(18, 
CHECKOUT
, CHECKOUT) \

111 
	`XX
(19, 
MERGE
, MERGE) \

113 
	`XX
(20, 
MSEARCH
, 
M
-
SEARCH
) \

114 
	`XX
(21, 
NOTIFY
, NOTIFY) \

115 
	`XX
(22, 
SUBSCRIBE
, SUBSCRIBE) \

116 
	`XX
(23, 
UNSUBSCRIBE
, UNSUBSCRIBE) \

118 
	`XX
(24, 
PATCH
, PATCH) \

119 
	`XX
(25, 
PURGE
, PURGE) \

121 
	`XX
(26, 
MKCALENDAR
, MKCALENDAR) \

122 

	)

123 
	ehâp_mëhod


125 
	#XX
(
num
, 
«me
, 
°rög
Ë
HTTP_
##«mênum,

	)

126 
HTTP_METHOD_MAP
(
XX
)

127 #unde‡
XX


131 
	ehâp_∑r£r_ty≥
 { 
HTTP_REQUEST
, 
HTTP_RESPONSE
, 
HTTP_BOTH
 };

135 
	eÊags


136 { 
F_CHUNKED
 = 1 << 0

137 , 
F_CONNECTION_KEEP_ALIVE
 = 1 << 1

138 , 
F_CONNECTION_CLOSE
 = 1 << 2

139 , 
F_TRAILING
 = 1 << 3

140 , 
F_UPGRADE
 = 1 << 4

141 , 
F_SKIPBODY
 = 1 << 5

149 
	#HTTP_ERRNO_MAP
(
XX
) \

151 
	`XX
(
OK
, "success") \

154 
	`XX
(
CB_mesßge_begö
, "the on_message_begin callback failed") \

155 
	`XX
(
CB_uæ
, "the on_url callback failed") \

156 
	`XX
(
CB_hódî_fõld
, "the on_header_field callback failed") \

157 
	`XX
(
CB_hódî_vÆue
, "the on_header_value callback failed") \

158 
	`XX
(
CB_hódîs_com∂ëe
, "the on_headers_complete callback failed") \

159 
	`XX
(
CB_body
, "the on_body callback failed") \

160 
	`XX
(
CB_mesßge_com∂ëe
, "the on_message_complete callback failed") \

161 
	`XX
(
CB_°©us
, "the on_status callback failed") \

164 
	`XX
(
INVALID_EOF_STATE
, "streamÉndedátán unexpectedÅime") \

165 
	`XX
(
HEADER_OVERFLOW
, \

167 
	`XX
(
CLOSED_CONNECTION
, \

169 
	`XX
(
INVALID_VERSION
, "invalid HTTP version") \

170 
	`XX
(
INVALID_STATUS
, "invalid HTTP status code") \

171 
	`XX
(
INVALID_METHOD
, "invalid HTTP method") \

172 
	`XX
(
INVALID_URL
, "invalid URL") \

173 
	`XX
(
INVALID_HOST
, "invalid host") \

174 
	`XX
(
INVALID_PORT
, "invalidÖort") \

175 
	`XX
(
INVALID_PATH
, "invalidÖath") \

176 
	`XX
(
INVALID_QUERY_STRING
, "invalid query string") \

177 
	`XX
(
INVALID_FRAGMENT
, "invalid fragment") \

178 
	`XX
(
LF_EXPECTED
, "LF characterÉxpected") \

179 
	`XX
(
INVALID_HEADER_TOKEN
, "invalid character in header") \

180 
	`XX
(
INVALID_CONTENT_LENGTH
, \

182 
	`XX
(
INVALID_CHUNK_SIZE
, \

184 
	`XX
(
INVALID_CONSTANT
, "invalid constant string") \

185 
	`XX
(
INVALID_INTERNAL_STATE
, "encountered unexpected internal state")\

186 
	`XX
(
STRICT
, "strict modeássertion failed") \

187 
	`XX
(
PAUSED
, "parser isÖaused") \

188 
	`XX
(
UNKNOWN
, "™ unknow¿îr‹ occuºed")

	)

192 
	#HTTP_ERRNO_GEN
(
n
, 
s
Ë
HPE_
##n,

	)

193 
	ehâp_î∫o
 {

194 
HTTP_ERRNO_MAP
(
HTTP_ERRNO_GEN
)

196 #unde‡
HTTP_ERRNO_GEN


200 
	#HTTP_PARSER_ERRNO
(
p
Ë((
hâp_î∫o
Ë’)->hâp_î∫o)

	)

203 
	shâp_∑r£r
 {

205 
ty≥
 : 2;

206 
Êags
 : 6;

207 
°©e
 : 8;

208 
hódî_°©e
 : 8;

209 
ödex
 : 8;

211 
uöt32_t
 
ƒód
;

212 
uöt64_t
 
c⁄ã¡_Àngth
;

215 
hâp_maj‹
;

216 
hâp_mö‹
;

217 
°©us_code
 : 16;

218 
mëhod
 : 8;

219 
hâp_î∫o
 : 7;

226 
upgøde
 : 1;

229 *
d©a
;

233 
	shâp_∑r£r_£âögs
 {

234 
hâp_cb
 
⁄_mesßge_begö
;

235 
hâp_d©a_cb
 
⁄_uæ
;

236 
hâp_d©a_cb
 
⁄_°©us
;

237 
hâp_d©a_cb
 
⁄_hódî_fõld
;

238 
hâp_d©a_cb
 
⁄_hódî_vÆue
;

239 
hâp_cb
 
⁄_hódîs_com∂ëe
;

240 
hâp_d©a_cb
 
⁄_body
;

241 
hâp_cb
 
⁄_mesßge_com∂ëe
;

245 
	ehâp_∑r£r_uæ_fõlds


246 { 
UF_SCHEMA
 = 0

247 , 
UF_HOST
 = 1

248 , 
UF_PORT
 = 2

249 , 
UF_PATH
 = 3

250 , 
UF_QUERY
 = 4

251 , 
UF_FRAGMENT
 = 5

252 , 
UF_USERINFO
 = 6

253 , 
UF_MAX
 = 7

264 
	shâp_∑r£r_uæ
 {

265 
uöt16_t
 
fõld_£t
;

266 
uöt16_t
 
p‹t
;

269 
uöt16_t
 
off
;

270 
uöt16_t
 
Àn
;

271 } 
fõld_d©a
[
UF_MAX
];

285 
hâp_∑r£r_vîsi⁄
();

287 
hâp_∑r£r_öô
(
hâp_∑r£r
 *
∑r£r
, 
hâp_∑r£r_ty≥
 
ty≥
);

290 
size_t
 
hâp_∑r£r_execuã
(
hâp_∑r£r
 *
∑r£r
,

291 c⁄° 
hâp_∑r£r_£âögs
 *
£âögs
,

292 c⁄° *
d©a
,

293 
size_t
 
Àn
);

302 
hâp_should_kìp_Æive
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

305 c⁄° *
hâp_mëhod_°r
(
hâp_mëhod
 
m
);

308 c⁄° *
hâp_î∫o_«me
(
hâp_î∫o
 
îr
);

311 c⁄° *
hâp_î∫o_des¸ùti⁄
(
hâp_î∫o
 
îr
);

314 
hâp_∑r£r_∑r£_uæ
(c⁄° *
buf
, 
size_t
 
buÊí
,

315 
is_c⁄√˘
,

316 
hâp_∑r£r_uæ
 *
u
);

319 
hâp_∑r£r_∑u£
(
hâp_∑r£r
 *
∑r£r
, 
∑u£d
);

322 
hâp_body_is_föÆ
(c⁄° 
hâp_∑r£r
 *
∑r£r
);

324 #ifde‡
__˝lu•lus


	@deps/http-parser/test.c

21 
	~"hâp_∑r£r.h
"

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<°d¨g.h
>

29 #i‡
deföed
(
__APPLE__
)

30 #unde‡
°æˇt


31 #unde‡
°æn˝y


32 #unde‡
°æ˝y


35 #unde‡
TRUE


36 
	#TRUE
 1

	)

37 #unde‡
FALSE


38 
	#FALSE
 0

	)

40 
	#MAX_HEADERS
 13

	)

41 
	#MAX_ELEMENT_SIZE
 2048

	)

43 
	#MIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

45 
hâp_∑r£r
 *
	g∑r£r
;

47 
	smesßge
 {

48 c⁄° *
	m«me
;

49 c⁄° *
	møw
;

50 
hâp_∑r£r_ty≥
 
	mty≥
;

51 
hâp_mëhod
 
	mmëhod
;

52 
	m°©us_code
;

53 
	mª•⁄£_°©us
[
MAX_ELEMENT_SIZE
];

54 
	mªque°_∑th
[
MAX_ELEMENT_SIZE
];

55 
	mªque°_uæ
[
MAX_ELEMENT_SIZE
];

56 
	m‰agmít
[
MAX_ELEMENT_SIZE
];

57 
	mquîy_°rög
[
MAX_ELEMENT_SIZE
];

58 
	mbody
[
MAX_ELEMENT_SIZE
];

59 
size_t
 
	mbody_size
;

60 c⁄° *
	mho°
;

61 c⁄° *
	mu£röfo
;

62 
uöt16_t
 
	mp‹t
;

63 
	mnum_hódîs
;

64 íum { 
	mNONE
=0, 
	mFIELD
, 
	mVALUE
 } 
	mœ°_hódî_ñemít
;

65 
	mhódîs
 [
MAX_HEADERS
][2][
MAX_ELEMENT_SIZE
];

66 
	mshould_kìp_Æive
;

68 c⁄° *
	mupgøde
;

70 
	mhâp_maj‹
;

71 
	mhâp_mö‹
;

73 
	mmesßge_begö_cb_ˇŒed
;

74 
	mhódîs_com∂ëe_cb_ˇŒed
;

75 
	mmesßge_com∂ëe_cb_ˇŒed
;

76 
	mmesßge_com∂ëe_⁄_eof
;

77 
	mbody_is_föÆ
;

80 
	gcuºíéy_∑rsög_eof
;

82 
mesßge
 
	gmesßges
[5];

83 
	gnum_mesßges
;

84 
hâp_∑r£r_£âögs
 *
	gcuºít_∑u£_∑r£r
;

87 c⁄° 
mesßge
 
	gªque°s
[] =

88 
	#CURL_GET
 0

	)

89 { {.
«me
= "curl get"

90 ,.
	gty≥

HTTP_REQUEST


91 ,.
	gøw
= "GET /test HTTP/1.1\r\n"

96 ,.
	gshould_kìp_Æive

TRUE


97 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


98 ,.
	ghâp_maj‹
= 1

99 ,.
	ghâp_mö‹
= 1

100 ,.
	gmëhod

HTTP_GET


101 ,.
	gquîy_°rög
= ""

102 ,.
	g‰agmít
= ""

103 ,.
	gªque°_∑th
= "/test"

104 ,.
	gªque°_uæ
= "/test"

105 ,.
	gnum_hódîs
= 3

106 ,.
	ghódîs
=

111 ,.
	gbody
= ""

114 
	#FIREFOX_GET
 1

	)

115 , {.
	g«me
= "firefox get"

116 ,.
	gty≥

HTTP_REQUEST


117 ,.
	gøw
= "GET /favicon.ico HTTP/1.1\r\n"

127 ,.
	gshould_kìp_Æive

TRUE


128 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


129 ,.
	ghâp_maj‹
= 1

130 ,.
	ghâp_mö‹
= 1

131 ,.
	gmëhod

HTTP_GET


132 ,.
	gquîy_°rög
= ""

133 ,.
	g‰agmít
= ""

134 ,.
	gªque°_∑th
= "/favicon.ico"

135 ,.
	gªque°_uæ
= "/favicon.ico"

136 ,.
	gnum_hódîs
= 8

137 ,.
	ghódîs
=

147 ,.
	gbody
= ""

150 
	#DUMBFUCK
 2

	)

151 , {.
	g«me
= "dumbfuck"

152 ,.
	gty≥

HTTP_REQUEST


153 ,.
	gøw
= "GET /dumbfuck HTTP/1.1\r\n"

156 ,.
	gshould_kìp_Æive

TRUE


157 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


158 ,.
	ghâp_maj‹
= 1

159 ,.
	ghâp_mö‹
= 1

160 ,.
	gmëhod

HTTP_GET


161 ,.
	gquîy_°rög
= ""

162 ,.
	g‰agmít
= ""

163 ,.
	gªque°_∑th
= "/dumbfuck"

164 ,.
	gªque°_uæ
= "/dumbfuck"

165 ,.
	gnum_hódîs
= 1

166 ,.
	ghódîs
=

169 ,.
	gbody
= ""

172 
	#FRAGMENT_IN_URI
 3

	)

173 , {.
	g«me
= "fragment in url"

174 ,.
	gty≥

HTTP_REQUEST


175 ,.
	gøw
= "GET /forums/1/topics/2375?page=1#posts-17408 HTTP/1.1\r\n"

177 ,.
	gshould_kìp_Æive

TRUE


178 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


179 ,.
	ghâp_maj‹
= 1

180 ,.
	ghâp_mö‹
= 1

181 ,.
	gmëhod

HTTP_GET


182 ,.
	gquîy_°rög
= "page=1"

183 ,.
	g‰agmít
= "posts-17408"

184 ,.
	gªque°_∑th
= "/forums/1/topics/2375"

186 ,.
	gªque°_uæ
= "/forums/1/topics/2375?page=1#posts-17408"

187 ,.
	gnum_hódîs
= 0

188 ,.
	gbody
= ""

191 
	#GET_NO_HEADERS_NO_BODY
 4

	)

192 , {.
	g«me
= "getÇo headersÇo body"

193 ,.
	gty≥

HTTP_REQUEST


194 ,.
	gøw
= "GET /get_no_headers_no_body/world HTTP/1.1\r\n"

196 ,.
	gshould_kìp_Æive

TRUE


197 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


198 ,.
	ghâp_maj‹
= 1

199 ,.
	ghâp_mö‹
= 1

200 ,.
	gmëhod

HTTP_GET


201 ,.
	gquîy_°rög
= ""

202 ,.
	g‰agmít
= ""

203 ,.
	gªque°_∑th
= "/get_no_headers_no_body/world"

204 ,.
	gªque°_uæ
= "/get_no_headers_no_body/world"

205 ,.
	gnum_hódîs
= 0

206 ,.
	gbody
= ""

209 
	#GET_ONE_HEADER_NO_BODY
 5

	)

210 , {.
	g«me
= "get one headerÇo body"

211 ,.
	gty≥

HTTP_REQUEST


212 ,.
	gøw
= "GET /get_one_header_no_body HTTP/1.1\r\n"

215 ,.
	gshould_kìp_Æive

TRUE


216 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


217 ,.
	ghâp_maj‹
= 1

218 ,.
	ghâp_mö‹
= 1

219 ,.
	gmëhod

HTTP_GET


220 ,.
	gquîy_°rög
= ""

221 ,.
	g‰agmít
= ""

222 ,.
	gªque°_∑th
= "/get_one_header_no_body"

223 ,.
	gªque°_uæ
= "/get_one_header_no_body"

224 ,.
	gnum_hódîs
= 1

225 ,.
	ghódîs
=

228 ,.
	gbody
= ""

231 
	#GET_FUNKY_CONTENT_LENGTH
 6

	)

232 , {.
	g«me
= "get funky contentÜength body hello"

233 ,.
	gty≥

HTTP_REQUEST


234 ,.
	gøw
= "GET /get_funky_content_length_body_hello HTTP/1.0\r\n"

238 ,.
	gshould_kìp_Æive

FALSE


239 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


240 ,.
	ghâp_maj‹
= 1

241 ,.
	ghâp_mö‹
= 0

242 ,.
	gmëhod

HTTP_GET


243 ,.
	gquîy_°rög
= ""

244 ,.
	g‰agmít
= ""

245 ,.
	gªque°_∑th
= "/get_funky_content_length_body_hello"

246 ,.
	gªque°_uæ
= "/get_funky_content_length_body_hello"

247 ,.
	gnum_hódîs
= 1

248 ,.
	ghódîs
=

251 ,.
	gbody
= "HELLO"

254 
	#POST_IDENTITY_BODY_WORLD
 7

	)

255 , {.
	g«me
= "post identity body world"

256 ,.
	gty≥

HTTP_REQUEST


257 ,.
	gøw
= "POST /post_identity_body_world?q=search#hey HTTP/1.1\r\n"

263 ,.
	gshould_kìp_Æive

TRUE


264 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


265 ,.
	ghâp_maj‹
= 1

266 ,.
	ghâp_mö‹
= 1

267 ,.
	gmëhod

HTTP_POST


268 ,.
	gquîy_°rög
= "q=search"

269 ,.
	g‰agmít
= "hey"

270 ,.
	gªque°_∑th
= "/post_identity_body_world"

271 ,.
	gªque°_uæ
= "/post_identity_body_world?q=search#hey"

272 ,.
	gnum_hódîs
= 3

273 ,.
	ghódîs
=

278 ,.
	gbody
= "World"

281 
	#POST_CHUNKED_ALL_YOUR_BASE
 8

	)

282 , {.
	g«me
= "post - chunked body:áll your baseáre belongÅo us"

283 ,.
	gty≥

HTTP_REQUEST


284 ,.
	gøw
= "POST /post_chunked_all_your_base HTTP/1.1\r\n"

290 ,.
	gshould_kìp_Æive

TRUE


291 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


292 ,.
	ghâp_maj‹
= 1

293 ,.
	ghâp_mö‹
= 1

294 ,.
	gmëhod

HTTP_POST


295 ,.
	gquîy_°rög
= ""

296 ,.
	g‰agmít
= ""

297 ,.
	gªque°_∑th
= "/post_chunked_all_your_base"

298 ,.
	gªque°_uæ
= "/post_chunked_all_your_base"

299 ,.
	gnum_hódîs
= 1

300 ,.
	ghódîs
=

303 ,.
	gbody
= "all your baseáre belongÅo us"

306 
	#TWO_CHUNKS_MULT_ZERO_END
 9

	)

307 , {.
	g«me
= "two chunks ;Åriple zeroÉnding"

308 ,.
	gty≥

HTTP_REQUEST


309 ,.
	gøw
= "POST /two_chunks_mult_zero_end HTTP/1.1\r\n"

316 ,.
	gshould_kìp_Æive

TRUE


317 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


318 ,.
	ghâp_maj‹
= 1

319 ,.
	ghâp_mö‹
= 1

320 ,.
	gmëhod

HTTP_POST


321 ,.
	gquîy_°rög
= ""

322 ,.
	g‰agmít
= ""

323 ,.
	gªque°_∑th
= "/two_chunks_mult_zero_end"

324 ,.
	gªque°_uæ
= "/two_chunks_mult_zero_end"

325 ,.
	gnum_hódîs
= 1

326 ,.
	ghódîs
=

329 ,.
	gbody
= "hello world"

332 
	#CHUNKED_W_TRAILING_HEADERS
 10

	)

333 , {.
	g«me
= "chunked withÅrailing headers. blech."

334 ,.
	gty≥

HTTP_REQUEST


335 ,.
	gøw
= "POST /chunked_w_trailing_headers HTTP/1.1\r\n"

344 ,.
	gshould_kìp_Æive

TRUE


345 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


346 ,.
	ghâp_maj‹
= 1

347 ,.
	ghâp_mö‹
= 1

348 ,.
	gmëhod

HTTP_POST


349 ,.
	gquîy_°rög
= ""

350 ,.
	g‰agmít
= ""

351 ,.
	gªque°_∑th
= "/chunked_w_trailing_headers"

352 ,.
	gªque°_uæ
= "/chunked_w_trailing_headers"

353 ,.
	gnum_hódîs
= 3

354 ,.
	ghódîs
=

359 ,.
	gbody
= "hello world"

362 
	#CHUNKED_W_BULLSHIT_AFTER_LENGTH
 11

	)

363 , {.
	g«me
= "with bullshitáfterÅheÜength"

364 ,.
	gty≥

HTTP_REQUEST


365 ,.
	gøw
= "POST /chunked_w_bullshit_after_length HTTP/1.1\r\n"

372 ,.
	gshould_kìp_Æive

TRUE


373 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


374 ,.
	ghâp_maj‹
= 1

375 ,.
	ghâp_mö‹
= 1

376 ,.
	gmëhod

HTTP_POST


377 ,.
	gquîy_°rög
= ""

378 ,.
	g‰agmít
= ""

379 ,.
	gªque°_∑th
= "/chunked_w_bullshit_after_length"

380 ,.
	gªque°_uæ
= "/chunked_w_bullshit_after_length"

381 ,.
	gnum_hódîs
= 1

382 ,.
	ghódîs
=

385 ,.
	gbody
= "hello world"

388 
	#WITH_QUOTES
 12

	)

389 , {.
	g«me
= "with quotes"

390 ,.
	gty≥

HTTP_REQUEST


391 ,.
	gøw
= "GET /with_\"stupid\"_quotes?foo=\"bar\" HTTP/1.1\r\n\r\n"

392 ,.
	gshould_kìp_Æive

TRUE


393 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


394 ,.
	ghâp_maj‹
= 1

395 ,.
	ghâp_mö‹
= 1

396 ,.
	gmëhod

HTTP_GET


397 ,.
	gquîy_°rög
= "foo=\"bar\""

398 ,.
	g‰agmít
= ""

399 ,.
	gªque°_∑th
= "/with_\"stupid\"_quotes"

400 ,.
	gªque°_uæ
= "/with_\"stupid\"_quotes?foo=\"bar\""

401 ,.
	gnum_hódîs
= 0

402 ,.
	ghódîs
= { }

403 ,.
	gbody
= ""

406 
	#APACHEBENCH_GET
 13

	)

412 , {.
	g«me
 = "apachebench get"

413 ,.
	gty≥

HTTP_REQUEST


414 ,.
	gøw
= "GET /test HTTP/1.0\r\n"

418 ,.
	gshould_kìp_Æive

FALSE


419 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


420 ,.
	ghâp_maj‹
= 1

421 ,.
	ghâp_mö‹
= 0

422 ,.
	gmëhod

HTTP_GET


423 ,.
	gquîy_°rög
= ""

424 ,.
	g‰agmít
= ""

425 ,.
	gªque°_∑th
= "/test"

426 ,.
	gªque°_uæ
= "/test"

427 ,.
	gnum_hódîs
= 3

428 ,.
	ghódîs
= { { "Host", "0.0.0.0:5000" }

432 ,.
	gbody
= ""

435 
	#QUERY_URL_WITH_QUESTION_MARK_GET
 14

	)

438 , {.
	g«me
 = "query url with question mark"

439 ,.
	gty≥

HTTP_REQUEST


440 ,.
	gøw
= "GET /test.cgi?foo=bar?baz HTTP/1.1\r\n\r\n"

441 ,.
	gshould_kìp_Æive

TRUE


442 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


443 ,.
	ghâp_maj‹
= 1

444 ,.
	ghâp_mö‹
= 1

445 ,.
	gmëhod

HTTP_GET


446 ,.
	gquîy_°rög
= "foo=bar?baz"

447 ,.
	g‰agmít
= ""

448 ,.
	gªque°_∑th
= "/test.cgi"

449 ,.
	gªque°_uæ
= "/test.cgi?foo=bar?baz"

450 ,.
	gnum_hódîs
= 0

451 ,.
	ghódîs
= {}

452 ,.
	gbody
= ""

455 
	#PREFIX_NEWLINE_GET
 15

	)

459 , {.
	g«me
 = "newlineÖrefix get"

460 ,.
	gty≥

HTTP_REQUEST


461 ,.
	gøw
= "\r\nGET /test HTTP/1.1\r\n\r\n"

462 ,.
	gshould_kìp_Æive

TRUE


463 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


464 ,.
	ghâp_maj‹
= 1

465 ,.
	ghâp_mö‹
= 1

466 ,.
	gmëhod

HTTP_GET


467 ,.
	gquîy_°rög
= ""

468 ,.
	g‰agmít
= ""

469 ,.
	gªque°_∑th
= "/test"

470 ,.
	gªque°_uæ
= "/test"

471 ,.
	gnum_hódîs
= 0

472 ,.
	ghódîs
= { }

473 ,.
	gbody
= ""

476 
	#UPGRADE_REQUEST
 16

	)

477 , {.
	g«me
 = "upgradeÑequest"

478 ,.
	gty≥

HTTP_REQUEST


479 ,.
	gøw
= "GET /demo HTTP/1.1\r\n"

489 ,.
	gshould_kìp_Æive

TRUE


490 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


491 ,.
	ghâp_maj‹
= 1

492 ,.
	ghâp_mö‹
= 1

493 ,.
	gmëhod

HTTP_GET


494 ,.
	gquîy_°rög
= ""

495 ,.
	g‰agmít
= ""

496 ,.
	gªque°_∑th
= "/demo"

497 ,.
	gªque°_uæ
= "/demo"

498 ,.
	gnum_hódîs
= 7

499 ,.
	gupgøde
="Hot diggity dogg"

500 ,.
	ghódîs
= { { "Host", "example.com" }

508 ,.
	gbody
= ""

511 
	#CONNECT_REQUEST
 17

	)

512 , {.
	g«me
 = "connectÑequest"

513 ,.
	gty≥

HTTP_REQUEST


514 ,.
	gøw
= "CONNECT 0-home0.netscape.com:443 HTTP/1.0\r\n"

520 ,.
	gshould_kìp_Æive

FALSE


521 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


522 ,.
	ghâp_maj‹
= 1

523 ,.
	ghâp_mö‹
= 0

524 ,.
	gmëhod

HTTP_CONNECT


525 ,.
	gquîy_°rög
= ""

526 ,.
	g‰agmít
= ""

527 ,.
	gªque°_∑th
= ""

528 ,.
	gªque°_uæ
= "0-home0.netscape.com:443"

529 ,.
	gnum_hódîs
= 2

530 ,.
	gupgøde
="some data\r\nand yetÉven more data"

531 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

534 ,.
	gbody
= ""

537 
	#REPORT_REQ
 18

	)

538 , {.
	g«me
= "reportÑequest"

539 ,.
	gty≥

HTTP_REQUEST


540 ,.
	gøw
= "REPORT /test HTTP/1.1\r\n"

542 ,.
	gshould_kìp_Æive

TRUE


543 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


544 ,.
	ghâp_maj‹
= 1

545 ,.
	ghâp_mö‹
= 1

546 ,.
	gmëhod

HTTP_REPORT


547 ,.
	gquîy_°rög
= ""

548 ,.
	g‰agmít
= ""

549 ,.
	gªque°_∑th
= "/test"

550 ,.
	gªque°_uæ
= "/test"

551 ,.
	gnum_hódîs
= 0

552 ,.
	ghódîs
= {}

553 ,.
	gbody
= ""

556 
	#NO_HTTP_VERSION
 19

	)

557 , {.
	g«me
= "request withÇo http version"

558 ,.
	gty≥

HTTP_REQUEST


559 ,.
	gøw
= "GET /\r\n"

561 ,.
	gshould_kìp_Æive

FALSE


562 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


563 ,.
	ghâp_maj‹
= 0

564 ,.
	ghâp_mö‹
= 9

565 ,.
	gmëhod

HTTP_GET


566 ,.
	gquîy_°rög
= ""

567 ,.
	g‰agmít
= ""

568 ,.
	gªque°_∑th
= "/"

569 ,.
	gªque°_uæ
= "/"

570 ,.
	gnum_hódîs
= 0

571 ,.
	ghódîs
= {}

572 ,.
	gbody
= ""

575 
	#MSEARCH_REQ
 20

	)

576 , {.
	g«me
= "m-searchÑequest"

577 ,.
	gty≥

HTTP_REQUEST


578 ,.
	gøw
= "M-SEARCH * HTTP/1.1\r\n"

583 ,.
	gshould_kìp_Æive

TRUE


584 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


585 ,.
	ghâp_maj‹
= 1

586 ,.
	ghâp_mö‹
= 1

587 ,.
	gmëhod

HTTP_MSEARCH


588 ,.
	gquîy_°rög
= ""

589 ,.
	g‰agmít
= ""

590 ,.
	gªque°_∑th
= "*"

591 ,.
	gªque°_uæ
= "*"

592 ,.
	gnum_hódîs
= 3

593 ,.
	ghódîs
= { { "HOST", "239.255.255.250:1900" }

597 ,.
	gbody
= ""

600 
	#LINE_FOLDING_IN_HEADER
 21

	)

601 , {.
	g«me
= "line folding in header value"

602 ,.
	gty≥

HTTP_REQUEST


603 ,.
	gøw
= "GET / HTTP/1.1\r\n"

618 ,.
	gshould_kìp_Æive

FALSE


619 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


620 ,.
	ghâp_maj‹
= 1

621 ,.
	ghâp_mö‹
= 1

622 ,.
	gmëhod

HTTP_GET


623 ,.
	gquîy_°rög
= ""

624 ,.
	g‰agmít
= ""

625 ,.
	gªque°_∑th
= "/"

626 ,.
	gªque°_uæ
= "/"

627 ,.
	gnum_hódîs
= 5

628 ,.
	ghódîs
= { { "Line1", "abc\tdef ghi\t\tjkl mno \t \tqrs" }

634 ,.
	gbody
= ""

638 
	#QUERY_TERMINATED_HOST
 22

	)

639 , {.
	g«me
= "hostÅerminated byá query string"

640 ,.
	gty≥

HTTP_REQUEST


641 ,.
	gøw
= "GET http://hypnotoad.org?hail=all HTTP/1.1\r\n"

643 ,.
	gshould_kìp_Æive

TRUE


644 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


645 ,.
	ghâp_maj‹
= 1

646 ,.
	ghâp_mö‹
= 1

647 ,.
	gmëhod

HTTP_GET


648 ,.
	gquîy_°rög
= "hail=all"

649 ,.
	g‰agmít
= ""

650 ,.
	gªque°_∑th
= ""

651 ,.
	gªque°_uæ
= "http://hypnotoad.org?hail=all"

652 ,.
	gho°
= "hypnotoad.org"

653 ,.
	gnum_hódîs
= 0

654 ,.
	ghódîs
= { }

655 ,.
	gbody
= ""

658 
	#QUERY_TERMINATED_HOSTPORT
 23

	)

659 , {.
	g«me
= "host:portÅerminated byá query string"

660 ,.
	gty≥

HTTP_REQUEST


661 ,.
	gøw
= "GET http://hypnotoad.org:1234?hail=all HTTP/1.1\r\n"

663 ,.
	gshould_kìp_Æive

TRUE


664 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


665 ,.
	ghâp_maj‹
= 1

666 ,.
	ghâp_mö‹
= 1

667 ,.
	gmëhod

HTTP_GET


668 ,.
	gquîy_°rög
= "hail=all"

669 ,.
	g‰agmít
= ""

670 ,.
	gªque°_∑th
= ""

671 ,.
	gªque°_uæ
= "http://hypnotoad.org:1234?hail=all"

672 ,.
	gho°
= "hypnotoad.org"

673 ,.
	gp‹t
= 1234

674 ,.
	gnum_hódîs
= 0

675 ,.
	ghódîs
= { }

676 ,.
	gbody
= ""

679 
	#SPACE_TERMINATED_HOSTPORT
 24

	)

680 , {.
	g«me
= "host:portÅerminated byá space"

681 ,.
	gty≥

HTTP_REQUEST


682 ,.
	gøw
= "GET http://hypnotoad.org:1234 HTTP/1.1\r\n"

684 ,.
	gshould_kìp_Æive

TRUE


685 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


686 ,.
	ghâp_maj‹
= 1

687 ,.
	ghâp_mö‹
= 1

688 ,.
	gmëhod

HTTP_GET


689 ,.
	gquîy_°rög
= ""

690 ,.
	g‰agmít
= ""

691 ,.
	gªque°_∑th
= ""

692 ,.
	gªque°_uæ
= "http://hypnotoad.org:1234"

693 ,.
	gho°
= "hypnotoad.org"

694 ,.
	gp‹t
= 1234

695 ,.
	gnum_hódîs
= 0

696 ,.
	ghódîs
= { }

697 ,.
	gbody
= ""

700 
	#PATCH_REQ
 25

	)

701 , {.
	g«me
 = "PATCHÑequest"

702 ,.
	gty≥

HTTP_REQUEST


703 ,.
	gøw
= "PATCH /file.txt HTTP/1.1\r\n"

710 ,.
	gshould_kìp_Æive

TRUE


711 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


712 ,.
	ghâp_maj‹
= 1

713 ,.
	ghâp_mö‹
= 1

714 ,.
	gmëhod

HTTP_PATCH


715 ,.
	gquîy_°rög
= ""

716 ,.
	g‰agmít
= ""

717 ,.
	gªque°_∑th
= "/file.txt"

718 ,.
	gªque°_uæ
= "/file.txt"

719 ,.
	gnum_hódîs
= 4

720 ,.
	ghódîs
= { { "Host", "www.example.com" }

725 ,.
	gbody
= "cccccccccc"

728 
	#CONNECT_CAPS_REQUEST
 26

	)

729 , {.
	g«me
 = "connect capsÑequest"

730 ,.
	gty≥

HTTP_REQUEST


731 ,.
	gøw
= "CONNECT HOME0.NETSCAPE.COM:443 HTTP/1.0\r\n"

735 ,.
	gshould_kìp_Æive

FALSE


736 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


737 ,.
	ghâp_maj‹
= 1

738 ,.
	ghâp_mö‹
= 0

739 ,.
	gmëhod

HTTP_CONNECT


740 ,.
	gquîy_°rög
= ""

741 ,.
	g‰agmít
= ""

742 ,.
	gªque°_∑th
= ""

743 ,.
	gªque°_uæ
= "HOME0.NETSCAPE.COM:443"

744 ,.
	gnum_hódîs
= 2

745 ,.
	gupgøde
=""

746 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

749 ,.
	gbody
= ""

752 #i‡!
HTTP_PARSER_STRICT


753 
	#UTF8_PATH_REQ
 27

	)

754 , {.
	g«me
= "utf-8ÖathÑequest"

755 ,.
	gty≥

HTTP_REQUEST


756 ,.
	gøw
= "GET /Œ¥¬∂/Œ¥t/pope?q=1#narf HTTP/1.1\r\n"

759 ,.
	gshould_kìp_Æive

TRUE


760 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


761 ,.
	ghâp_maj‹
= 1

762 ,.
	ghâp_mö‹
= 1

763 ,.
	gmëhod

HTTP_GET


764 ,.
	gquîy_°rög
= "q=1"

765 ,.
	g‰agmít
= "narf"

766 ,.
	gªque°_∑th
= "/Œ¥¬∂/Œ¥t/pope"

767 ,.
	gªque°_uæ
= "/Œ¥¬∂/Œ¥t/pope?q=1#narf"

768 ,.
	gnum_hódîs
= 1

769 ,.
	ghódîs
= { {"Host", "github.com" }

771 ,.
	gbody
= ""

774 
	#HOSTNAME_UNDERSCORE
 28

	)

775 , {.
	g«me
 = "hostname underscore"

776 ,.
	gty≥

HTTP_REQUEST


777 ,.
	gøw
= "CONNECT home_0.netscape.com:443 HTTP/1.0\r\n"

781 ,.
	gshould_kìp_Æive

FALSE


782 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


783 ,.
	ghâp_maj‹
= 1

784 ,.
	ghâp_mö‹
= 0

785 ,.
	gmëhod

HTTP_CONNECT


786 ,.
	gquîy_°rög
= ""

787 ,.
	g‰agmít
= ""

788 ,.
	gªque°_∑th
= ""

789 ,.
	gªque°_uæ
= "home_0.netscape.com:443"

790 ,.
	gnum_hódîs
= 2

791 ,.
	gupgøde
=""

792 ,.
	ghódîs
= { { "User-agent", "Mozilla/1.1N" }

795 ,.
	gbody
= ""

800 
	#EAT_TRAILING_CRLF_NO_CONNECTION_CLOSE
 29

	)

801 , {.
	g«me
 = "eat CRLF betweenÑequests,Ço \"Connection: close\" header"

802 ,.
	gøw
= "POST / HTTP/1.1\r\n"

808 ,.
	gshould_kìp_Æive

TRUE


809 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


810 ,.
	ghâp_maj‹
= 1

811 ,.
	ghâp_mö‹
= 1

812 ,.
	gmëhod

HTTP_POST


813 ,.
	gquîy_°rög
= ""

814 ,.
	g‰agmít
= ""

815 ,.
	gªque°_∑th
= "/"

816 ,.
	gªque°_uæ
= "/"

817 ,.
	gnum_hódîs
= 3

818 ,.
	gupgøde
= 0

819 ,.
	ghódîs
= { { "Host", "www.example.com" }

823 ,.
	gbody
= "q=42"

827 
	#EAT_TRAILING_CRLF_WITH_CONNECTION_CLOSE
 30

	)

828 , {.
	g«me
 = "eat CRLF betweenÑequestsÉven if \"Connection: close\" is set"

829 ,.
	gøw
= "POST / HTTP/1.1\r\n"

836 ,.
	gshould_kìp_Æive

FALSE


837 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


838 ,.
	ghâp_maj‹
= 1

839 ,.
	ghâp_mö‹
= 1

840 ,.
	gmëhod

HTTP_POST


841 ,.
	gquîy_°rög
= ""

842 ,.
	g‰agmít
= ""

843 ,.
	gªque°_∑th
= "/"

844 ,.
	gªque°_uæ
= "/"

845 ,.
	gnum_hódîs
= 4

846 ,.
	gupgøde
= 0

847 ,.
	ghódîs
= { { "Host", "www.example.com" }

852 ,.
	gbody
= "q=42"

855 
	#PURGE_REQ
 31

	)

856 , {.
	g«me
 = "PURGEÑequest"

857 ,.
	gty≥

HTTP_REQUEST


858 ,.
	gøw
= "PURGE /file.txt HTTP/1.1\r\n"

861 ,.
	gshould_kìp_Æive

TRUE


862 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


863 ,.
	ghâp_maj‹
= 1

864 ,.
	ghâp_mö‹
= 1

865 ,.
	gmëhod

HTTP_PURGE


866 ,.
	gquîy_°rög
= ""

867 ,.
	g‰agmít
= ""

868 ,.
	gªque°_∑th
= "/file.txt"

869 ,.
	gªque°_uæ
= "/file.txt"

870 ,.
	gnum_hódîs
= 1

871 ,.
	ghódîs
= { { "Host", "www.example.com" } }

872 ,.
	gbody
= ""

875 
	#SEARCH_REQ
 32

	)

876 , {.
	g«me
 = "SEARCHÑequest"

877 ,.
	gty≥

HTTP_REQUEST


878 ,.
	gøw
= "SEARCH / HTTP/1.1\r\n"

881 ,.
	gshould_kìp_Æive

TRUE


882 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


883 ,.
	ghâp_maj‹
= 1

884 ,.
	ghâp_mö‹
= 1

885 ,.
	gmëhod

HTTP_SEARCH


886 ,.
	gquîy_°rög
= ""

887 ,.
	g‰agmít
= ""

888 ,.
	gªque°_∑th
= "/"

889 ,.
	gªque°_uæ
= "/"

890 ,.
	gnum_hódîs
= 1

891 ,.
	ghódîs
= { { "Host", "www.example.com" } }

892 ,.
	gbody
= ""

895 
	#PROXY_WITH_BASIC_AUTH
 33

	)

896 , {.
	g«me
= "host:portánd basic_auth"

897 ,.
	gty≥

HTTP_REQUEST


898 ,.
	gøw
= "GET http://a%12:b!&*$@hypnotoad.org:1234/toto HTTP/1.1\r\n"

900 ,.
	gshould_kìp_Æive

TRUE


901 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


902 ,.
	ghâp_maj‹
= 1

903 ,.
	ghâp_mö‹
= 1

904 ,.
	gmëhod

HTTP_GET


905 ,.
	g‰agmít
= ""

906 ,.
	gªque°_∑th
= "/toto"

907 ,.
	gªque°_uæ
= "http://a%12:b!&*$@hypnotoad.org:1234/toto"

908 ,.
	gho°
= "hypnotoad.org"

909 ,.
	gu£röfo
= "a%12:b!&*$"

910 ,.
	gp‹t
= 1234

911 ,.
	gnum_hódîs
= 0

912 ,.
	ghódîs
= { }

913 ,.
	gbody
= ""

916 
	#LINE_FOLDING_IN_HEADER_WITH_LF
 34

	)

917 , {.
	g«me
= "line folding in header value"

918 ,.
	gty≥

HTTP_REQUEST


919 ,.
	gøw
= "GET / HTTP/1.1\n"

934 ,.
	gshould_kìp_Æive

FALSE


935 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


936 ,.
	ghâp_maj‹
= 1

937 ,.
	ghâp_mö‹
= 1

938 ,.
	gmëhod

HTTP_GET


939 ,.
	gquîy_°rög
= ""

940 ,.
	g‰agmít
= ""

941 ,.
	gªque°_∑th
= "/"

942 ,.
	gªque°_uæ
= "/"

943 ,.
	gnum_hódîs
= 5

944 ,.
	ghódîs
= { { "Line1", "abc\tdef ghi\t\tjkl mno \t \tqrs" }

950 ,.
	gbody
= ""

954 , {.
	g«me

NULL
 }

958 c⁄° 
mesßge
 
	gª•⁄£s
[] =

959 
	#GOOGLE_301
 0

	)

960 { {.
«me
= "google 301"

961 ,.
	gty≥

HTTP_RESPONSE


962 ,.
	gøw
= "HTTP/1.1 301 Moved Permanently\r\n"

978 ,.
	gshould_kìp_Æive

TRUE


979 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


980 ,.
	ghâp_maj‹
= 1

981 ,.
	ghâp_mö‹
= 1

982 ,.
	g°©us_code
= 301

983 ,.
	gª•⁄£_°©us
= "Moved Permanently"

984 ,.
	gnum_hódîs
= 8

985 ,.
	ghódîs
=

995 ,.
	gbody
= "<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\n"

1003 
	#NO_CONTENT_LENGTH_RESPONSE
 1

	)

1009 , {.
	g«me
= "no content-lengthÑesponse"

1010 ,.
	gty≥

HTTP_RESPONSE


1011 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1027 ,.
	gshould_kìp_Æive

FALSE


1028 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1029 ,.
	ghâp_maj‹
= 1

1030 ,.
	ghâp_mö‹
= 1

1031 ,.
	g°©us_code
= 200

1032 ,.
	gª•⁄£_°©us
= "OK"

1033 ,.
	gnum_hódîs
= 5

1034 ,.
	ghódîs
=

1041 ,.
	gbody
= "<?xml version=\"1.0\"Éncoding=\"UTF-8\"?>\n"

1052 
	#NO_HEADERS_NO_BODY_404
 2

	)

1053 , {.
	g«me
= "404Ço headersÇo body"

1054 ,.
	gty≥

HTTP_RESPONSE


1055 ,.
	gøw
= "HTTP/1.1 404 Not Found\r\n\r\n"

1056 ,.
	gshould_kìp_Æive

FALSE


1057 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1058 ,.
	ghâp_maj‹
= 1

1059 ,.
	ghâp_mö‹
= 1

1060 ,.
	g°©us_code
= 404

1061 ,.
	gª•⁄£_°©us
= "Not Found"

1062 ,.
	gnum_hódîs
= 0

1063 ,.
	ghódîs
= {}

1064 ,.
	gbody_size
= 0

1065 ,.
	gbody
= ""

1068 
	#NO_REASON_PHRASE
 3

	)

1069 , {.
	g«me
= "301ÇoÑesponseÖhrase"

1070 ,.
	gty≥

HTTP_RESPONSE


1071 ,.
	gøw
= "HTTP/1.1 301\r\n\r\n"

1072 ,.
	gshould_kìp_Æive
 = 
FALSE


1073 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1074 ,.
	ghâp_maj‹
= 1

1075 ,.
	ghâp_mö‹
= 1

1076 ,.
	g°©us_code
= 301

1077 ,.
	gª•⁄£_°©us
= ""

1078 ,.
	gnum_hódîs
= 0

1079 ,.
	ghódîs
= {}

1080 ,.
	gbody
= ""

1083 
	#TRAILING_SPACE_ON_CHUNKED_BODY
 4

	)

1084 , {.
	g«me
="200Årailing space on chunked body"

1085 ,.
	gty≥

HTTP_RESPONSE


1086 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1098 ,.
	gshould_kìp_Æive

TRUE


1099 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1100 ,.
	ghâp_maj‹
= 1

1101 ,.
	ghâp_mö‹
= 1

1102 ,.
	g°©us_code
= 200

1103 ,.
	gª•⁄£_°©us
= "OK"

1104 ,.
	gnum_hódîs
= 2

1105 ,.
	ghódîs
=

1109 ,.
	gbody_size
 = 37+28

1110 ,.
	gbody
 =

1116 
	#NO_CARRIAGE_RET
 5

	)

1117 , {.
	g«me
="no carriageÑet"

1118 ,.
	gty≥

HTTP_RESPONSE


1119 ,.
	gøw
= "HTTP/1.1 200 OK\n"

1124 ,.
	gshould_kìp_Æive

FALSE


1125 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1126 ,.
	ghâp_maj‹
= 1

1127 ,.
	ghâp_mö‹
= 1

1128 ,.
	g°©us_code
= 200

1129 ,.
	gª•⁄£_°©us
= "OK"

1130 ,.
	gnum_hódîs
= 2

1131 ,.
	ghódîs
=

1135 ,.
	gbody
= "these headersáre from http://news.ycombinator.com/"

1138 
	#PROXY_CONNECTION
 6

	)

1139 , {.
	g«me
="proxy connection"

1140 ,.
	gty≥

HTTP_RESPONSE


1141 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1148 ,.
	gshould_kìp_Æive

FALSE


1149 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1150 ,.
	ghâp_maj‹
= 1

1151 ,.
	ghâp_mö‹
= 1

1152 ,.
	g°©us_code
= 200

1153 ,.
	gª•⁄£_°©us
= "OK"

1154 ,.
	gnum_hódîs
= 4

1155 ,.
	ghódîs
=

1161 ,.
	gbody
= "hello world"

1164 
	#UNDERSTORE_HEADER_KEY
 7

	)

1167 , {.
	g«me
="underscore header key"

1168 ,.
	gty≥

HTTP_RESPONSE


1169 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1174 ,.
	gshould_kìp_Æive

TRUE


1175 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1176 ,.
	ghâp_maj‹
= 1

1177 ,.
	ghâp_mö‹
= 1

1178 ,.
	g°©us_code
= 200

1179 ,.
	gª•⁄£_°©us
= "OK"

1180 ,.
	gnum_hódîs
= 4

1181 ,.
	ghódîs
=

1187 ,.
	gbody
= ""

1190 
	#BONJOUR_MADAME_FR
 8

	)

1194 , {.
	g«me
= "bonjourmadame.fr"

1195 ,.
	gty≥

HTTP_RESPONSE


1196 ,.
	gøw
= "HTTP/1.0 301 Moved Permanently\r\n"

1207 ,.
	gshould_kìp_Æive

TRUE


1208 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1209 ,.
	ghâp_maj‹
= 1

1210 ,.
	ghâp_mö‹
= 0

1211 ,.
	g°©us_code
= 301

1212 ,.
	gª•⁄£_°©us
= "Moved Permanently"

1213 ,.
	gnum_hódîs
= 9

1214 ,.
	ghódîs
=

1225 ,.
	gbody
= ""

1228 
	#RES_FIELD_UNDERSCORE
 9

	)

1230 , {.
	g«me
= "field underscore"

1231 ,.
	gty≥

HTTP_RESPONSE


1232 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1246 ,.
	gshould_kìp_Æive

FALSE


1247 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1248 ,.
	ghâp_maj‹
= 1

1249 ,.
	ghâp_mö‹
= 1

1250 ,.
	g°©us_code
= 200

1251 ,.
	gª•⁄£_°©us
= "OK"

1252 ,.
	gnum_hódîs
= 11

1253 ,.
	ghódîs
=

1266 ,.
	gbody
= ""

1269 
	#NON_ASCII_IN_STATUS_LINE
 10

	)

1271 , {.
	g«me
= "non-ASCII in statusÜine"

1272 ,.
	gty≥

HTTP_RESPONSE


1273 ,.
	gøw
= "HTTP/1.1 500 Ori√´ntatieprobleem\r\n"

1278 ,.
	gshould_kìp_Æive

FALSE


1279 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1280 ,.
	ghâp_maj‹
= 1

1281 ,.
	ghâp_mö‹
= 1

1282 ,.
	g°©us_code
= 500

1283 ,.
	gª•⁄£_°©us
= "Ori√´ntatieprobleem"

1284 ,.
	gnum_hódîs
= 3

1285 ,.
	ghódîs
=

1290 ,.
	gbody
= ""

1293 
	#HTTP_VERSION_0_9
 11

	)

1295 , {.
	g«me
= "http version 0.9"

1296 ,.
	gty≥

HTTP_RESPONSE


1297 ,.
	gøw
= "HTTP/0.9 200 OK\r\n"

1299 ,.
	gshould_kìp_Æive

FALSE


1300 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1301 ,.
	ghâp_maj‹
= 0

1302 ,.
	ghâp_mö‹
= 9

1303 ,.
	g°©us_code
= 200

1304 ,.
	gª•⁄£_°©us
= "OK"

1305 ,.
	gnum_hódîs
= 0

1306 ,.
	ghódîs
=

1308 ,.
	gbody
= ""

1311 
	#NO_CONTENT_LENGTH_NO_TRANSFER_ENCODING_RESPONSE
 12

	)

1316 , {.
	g«me
= "neither content-lengthÇorÅransfer-encodingÑesponse"

1317 ,.
	gty≥

HTTP_RESPONSE


1318 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1322 ,.
	gshould_kìp_Æive

FALSE


1323 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1324 ,.
	ghâp_maj‹
= 1

1325 ,.
	ghâp_mö‹
= 1

1326 ,.
	g°©us_code
= 200

1327 ,.
	gª•⁄£_°©us
= "OK"

1328 ,.
	gnum_hódîs
= 1

1329 ,.
	ghódîs
=

1332 ,.
	gbody
= "hello world"

1335 
	#NO_BODY_HTTP10_KA_200
 13

	)

1336 , {.
	g«me
= "HTTP/1.0 with keep-aliveánd EOF-terminated 200 status"

1337 ,.
	gty≥

HTTP_RESPONSE


1338 ,.
	gøw
= "HTTP/1.0 200 OK\r\n"

1341 ,.
	gshould_kìp_Æive

FALSE


1342 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1343 ,.
	ghâp_maj‹
= 1

1344 ,.
	ghâp_mö‹
= 0

1345 ,.
	g°©us_code
= 200

1346 ,.
	gª•⁄£_°©us
= "OK"

1347 ,.
	gnum_hódîs
= 1

1348 ,.
	ghódîs
=

1351 ,.
	gbody_size
= 0

1352 ,.
	gbody
= ""

1355 
	#NO_BODY_HTTP10_KA_204
 14

	)

1356 , {.
	g«me
= "HTTP/1.0 with keep-aliveándá 204 status"

1357 ,.
	gty≥

HTTP_RESPONSE


1358 ,.
	gøw
= "HTTP/1.0 204 No content\r\n"

1361 ,.
	gshould_kìp_Æive

TRUE


1362 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1363 ,.
	ghâp_maj‹
= 1

1364 ,.
	ghâp_mö‹
= 0

1365 ,.
	g°©us_code
= 204

1366 ,.
	gª•⁄£_°©us
= "No content"

1367 ,.
	gnum_hódîs
= 1

1368 ,.
	ghódîs
=

1371 ,.
	gbody_size
= 0

1372 ,.
	gbody
= ""

1375 
	#NO_BODY_HTTP11_KA_200
 15

	)

1376 , {.
	g«me
= "HTTP/1.1 withán EOF-terminated 200 status"

1377 ,.
	gty≥

HTTP_RESPONSE


1378 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1380 ,.
	gshould_kìp_Æive

FALSE


1381 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1382 ,.
	ghâp_maj‹
= 1

1383 ,.
	ghâp_mö‹
= 1

1384 ,.
	g°©us_code
= 200

1385 ,.
	gª•⁄£_°©us
= "OK"

1386 ,.
	gnum_hódîs
= 0

1387 ,.
	ghódîs
={}

1388 ,.
	gbody_size
= 0

1389 ,.
	gbody
= ""

1392 
	#NO_BODY_HTTP11_KA_204
 16

	)

1393 , {.
	g«me
= "HTTP/1.1 withá 204 status"

1394 ,.
	gty≥

HTTP_RESPONSE


1395 ,.
	gøw
= "HTTP/1.1 204 No content\r\n"

1397 ,.
	gshould_kìp_Æive

TRUE


1398 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1399 ,.
	ghâp_maj‹
= 1

1400 ,.
	ghâp_mö‹
= 1

1401 ,.
	g°©us_code
= 204

1402 ,.
	gª•⁄£_°©us
= "No content"

1403 ,.
	gnum_hódîs
= 0

1404 ,.
	ghódîs
={}

1405 ,.
	gbody_size
= 0

1406 ,.
	gbody
= ""

1409 
	#NO_BODY_HTTP11_NOKA_204
 17

	)

1410 , {.
	g«me
= "HTTP/1.1 withá 204 statusánd keep-alive disabled"

1411 ,.
	gty≥

HTTP_RESPONSE


1412 ,.
	gøw
= "HTTP/1.1 204 No content\r\n"

1415 ,.
	gshould_kìp_Æive

FALSE


1416 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1417 ,.
	ghâp_maj‹
= 1

1418 ,.
	ghâp_mö‹
= 1

1419 ,.
	g°©us_code
= 204

1420 ,.
	gª•⁄£_°©us
= "No content"

1421 ,.
	gnum_hódîs
= 1

1422 ,.
	ghódîs
=

1425 ,.
	gbody_size
= 0

1426 ,.
	gbody
= ""

1429 
	#NO_BODY_HTTP11_KA_CHUNKED_200
 18

	)

1430 , {.
	g«me
= "HTTP/1.1 with chunkedÉndocingándá 200Ñesponse"

1431 ,.
	gty≥

HTTP_RESPONSE


1432 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1437 ,.
	gshould_kìp_Æive

TRUE


1438 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1439 ,.
	ghâp_maj‹
= 1

1440 ,.
	ghâp_mö‹
= 1

1441 ,.
	g°©us_code
= 200

1442 ,.
	gª•⁄£_°©us
= "OK"

1443 ,.
	gnum_hódîs
= 1

1444 ,.
	ghódîs
=

1447 ,.
	gbody_size
= 0

1448 ,.
	gbody
= ""

1451 #i‡!
HTTP_PARSER_STRICT


1452 
	#SPACE_IN_FIELD_RES
 19

	)

1454 , {.
	g«me
= "field space"

1455 ,.
	gty≥

HTTP_RESPONSE


1456 ,.
	gøw
= "HTTP/1.1 200 OK\r\n"

1466 ,.
	gshould_kìp_Æive

TRUE


1467 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1468 ,.
	ghâp_maj‹
= 1

1469 ,.
	ghâp_mö‹
= 1

1470 ,.
	g°©us_code
= 200

1471 ,.
	gª•⁄£_°©us
= "OK"

1472 ,.
	gnum_hódîs
= 7

1473 ,.
	ghódîs
=

1482 ,.
	gbody
= "<xml>hello</xml>"

1486 
	#AMAZON_COM
 20

	)

1487 , {.
	g«me
= "amazon.com"

1488 ,.
	gty≥

HTTP_RESPONSE


1489 ,.
	gøw
= "HTTP/1.1 301 MovedPermanently\r\n"

1504 ,.
	gshould_kìp_Æive

TRUE


1505 ,.
	gmesßge_com∂ëe_⁄_eof

FALSE


1506 ,.
	ghâp_maj‹
= 1

1507 ,.
	ghâp_mö‹
= 1

1508 ,.
	g°©us_code
= 301

1509 ,.
	gª•⁄£_°©us
= "MovedPermanently"

1510 ,.
	gnum_hódîs
= 9

1511 ,.
	ghódîs
= { { "Date", "Wed, 15 May 2013 17:06:33 GMT" }

1521 ,.
	gbody
= "\n"

1524 
	#EMPTY_REASON_PHRASE_AFTER_SPACE
 20

	)

1525 , {.
	g«me
= "emptyÑeasonÖhraseáfter space"

1526 ,.
	gty≥

HTTP_RESPONSE


1527 ,.
	gøw
= "HTTP/1.1 200 \r\n"

1529 ,.
	gshould_kìp_Æive

FALSE


1530 ,.
	gmesßge_com∂ëe_⁄_eof

TRUE


1531 ,.
	ghâp_maj‹
= 1

1532 ,.
	ghâp_mö‹
= 1

1533 ,.
	g°©us_code
= 200

1534 ,.
	gª•⁄£_°©us
= ""

1535 ,.
	gnum_hódîs
= 0

1536 ,.
	ghódîs
= {}

1537 ,.
	gbody
= ""

1540 , {.
	g«me

NULL
 }

1546 
size_t


1547 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
maxÀn
)

1549 c⁄° *
p
;

1551 
p
 = 
	`memchr
(
s
, '\0', 
maxÀn
);

1552 i‡(
p
 =
NULL
)

1553  
maxÀn
;

1555  
p
 - 
s
;

1556 
	}
}

1558 
size_t


1559 
	$°ænˇt
(*
d°
, 
size_t
 
Àn
, c⁄° *
§c
, size_à
n
)

1561 
size_t
 
¶í
;

1562 
size_t
 
dÀn
;

1563 
size_t
 
æí
;

1564 
size_t
 
n˝y
;

1566 
¶í
 = 
	`°∫Àn
(
§c
, 
n
);

1567 
dÀn
 = 
	`°∫Àn
(
d°
, 
Àn
);

1569 i‡(
dÀn
 < 
Àn
) {

1570 
æí
 = 
Àn
 - 
dÀn
;

1571 
n˝y
 = 
¶í
 < 
æí
 ? slen : (rlen - 1);

1572 
	`mem˝y
(
d°
 + 
dÀn
, 
§c
, 
n˝y
);

1573 
d°
[
dÀn
 + 
n˝y
] = '\0';

1576 
	`as£π
(
Àn
 > 
¶í
 + 
dÀn
);

1577  
¶í
 + 
dÀn
;

1578 
	}
}

1580 
size_t


1581 
	$°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
)

1583  
	`°ænˇt
(
d°
, 
Àn
, 
§c
, (
size_t
) -1);

1584 
	}
}

1586 
size_t


1587 
	$°æn˝y
(*
d°
, 
size_t
 
Àn
, c⁄° *
§c
, size_à
n
)

1589 
size_t
 
¶í
;

1590 
size_t
 
n˝y
;

1592 
¶í
 = 
	`°∫Àn
(
§c
, 
n
);

1594 i‡(
Àn
 > 0) {

1595 
n˝y
 = 
¶í
 < 
Àn
 ? slen : (len - 1);

1596 
	`mem˝y
(
d°
, 
§c
, 
n˝y
);

1597 
d°
[
n˝y
] = '\0';

1600 
	`as£π
(
Àn
 > 
¶í
);

1601  
¶í
;

1602 
	}
}

1604 
size_t


1605 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
)

1607  
	`°æn˝y
(
d°
, 
Àn
, 
§c
, (
size_t
) -1);

1608 
	}
}

1611 
	$ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1613 
	`as£π
(
p
 =
∑r£r
);

1614 
	`°ænˇt
(
mesßges
[
num_mesßges
].
ªque°_uæ
,

1615 (
mesßges
[
num_mesßges
].
ªque°_uæ
),

1616 
buf
,

1617 
Àn
);

1619 
	}
}

1622 
	$hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1624 
	`as£π
(
p
 =
∑r£r
);

1625 
mesßge
 *
m
 = &
mesßges
[
num_mesßges
];

1627 i‡(
m
->
œ°_hódî_ñemít
 !
FIELD
)

1628 
m
->
num_hódîs
++;

1630 
	`°ænˇt
(
m
->
hódîs
[m->
num_hódîs
-1][0],

1631 (
m
->
hódîs
[m->
num_hódîs
-1][0]),

1632 
buf
,

1633 
Àn
);

1635 
m
->
œ°_hódî_ñemít
 = 
FIELD
;

1638 
	}
}

1641 
	$hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1643 
	`as£π
(
p
 =
∑r£r
);

1644 
mesßge
 *
m
 = &
mesßges
[
num_mesßges
];

1646 
	`°ænˇt
(
m
->
hódîs
[m->
num_hódîs
-1][1],

1647 (
m
->
hódîs
[m->
num_hódîs
-1][1]),

1648 
buf
,

1649 
Àn
);

1651 
m
->
œ°_hódî_ñemít
 = 
VALUE
;

1654 
	}
}

1657 
	$check_body_is_föÆ
 (c⁄° 
hâp_∑r£r
 *
p
)

1659 i‡(
mesßges
[
num_mesßges
].
body_is_föÆ
) {

1660 
	`Ârötf
(
°dîr
, "\n\n *** Error http_body_is_final() shouldÑeturn 1 "

1663 
	`as£π
(0);

1664 
	`ab‹t
();

1666 
mesßges
[
num_mesßges
].
body_is_föÆ
 = 
	`hâp_body_is_föÆ
(
p
);

1667 
	}
}

1670 
	$body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1672 
	`as£π
(
p
 =
∑r£r
);

1673 
	`°ænˇt
(
mesßges
[
num_mesßges
].
body
,

1674 (
mesßges
[
num_mesßges
].
body
),

1675 
buf
,

1676 
Àn
);

1677 
mesßges
[
num_mesßges
].
body_size
 +
Àn
;

1678 
	`check_body_is_föÆ
(
p
);

1681 
	}
}

1684 
	$cou¡_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1686 
	`as£π
(
p
 =
∑r£r
);

1687 
	`as£π
(
buf
);

1688 
mesßges
[
num_mesßges
].
body_size
 +
Àn
;

1689 
	`check_body_is_föÆ
(
p
);

1691 
	}
}

1694 
	$mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1696 
	`as£π
(
p
 =
∑r£r
);

1697 
mesßges
[
num_mesßges
].
mesßge_begö_cb_ˇŒed
 = 
TRUE
;

1699 
	}
}

1702 
	$hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1704 
	`as£π
(
p
 =
∑r£r
);

1705 
mesßges
[
num_mesßges
].
mëhod
 = 
∑r£r
->method;

1706 
mesßges
[
num_mesßges
].
°©us_code
 = 
∑r£r
->status_code;

1707 
mesßges
[
num_mesßges
].
hâp_maj‹
 = 
∑r£r
->http_major;

1708 
mesßges
[
num_mesßges
].
hâp_mö‹
 = 
∑r£r
->http_minor;

1709 
mesßges
[
num_mesßges
].
hódîs_com∂ëe_cb_ˇŒed
 = 
TRUE
;

1710 
mesßges
[
num_mesßges
].
should_kìp_Æive
 = 
	`hâp_should_kìp_Æive
(
∑r£r
);

1712 
	}
}

1715 
	$mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1717 
	`as£π
(
p
 =
∑r£r
);

1718 i‡(
mesßges
[
num_mesßges
].
should_kìp_Æive
 !
	`hâp_should_kìp_Æive
(
∑r£r
))

1720 
	`Ârötf
(
°dîr
, "\n\n *** Error http_should_keep_alive() should have same "

1723 
	`as£π
(0);

1724 
	`ab‹t
();

1727 i‡(
mesßges
[
num_mesßges
].
body_size
 &&

1728 
	`hâp_body_is_föÆ
(
p
) &&

1729 !
mesßges
[
num_mesßges
].
body_is_föÆ
)

1731 
	`Ârötf
(
°dîr
, "\n\n *** Error http_body_is_final() shouldÑeturn 1 "

1734 
	`as£π
(0);

1735 
	`ab‹t
();

1738 
mesßges
[
num_mesßges
].
mesßge_com∂ëe_cb_ˇŒed
 = 
TRUE
;

1740 
mesßges
[
num_mesßges
].
mesßge_com∂ëe_⁄_eof
 = 
cuºíéy_∑rsög_eof
;

1742 
num_mesßges
++;

1744 
	}
}

1747 
	$ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1749 
	`as£π
(
p
 =
∑r£r
);

1750 
	`°ænˇt
(
mesßges
[
num_mesßges
].
ª•⁄£_°©us
,

1751 (
mesßges
[
num_mesßges
].
ª•⁄£_°©us
),

1752 
buf
,

1753 
Àn
);

1755 
	}
}

1760 
	$d⁄tˇŒ_mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1762 i‡(
p
) { }

1763 
	`Ârötf
(
°dîr
, "\n\n*** on_message_begin() called onÖausedÖarser ***\n\n");

1764 
	`ab‹t
();

1765 
	}
}

1768 
	$d⁄tˇŒ_hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1770 i‡(
p
 || 
buf
 || 
Àn
) { }

1771 
	`Ârötf
(
°dîr
, "\n\n*** on_header_field() called onÖausedÖarser ***\n\n");

1772 
	`ab‹t
();

1773 
	}
}

1776 
	$d⁄tˇŒ_hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1778 i‡(
p
 || 
buf
 || 
Àn
) { }

1779 
	`Ârötf
(
°dîr
, "\n\n*** on_header_value() called onÖausedÖarser ***\n\n");

1780 
	`ab‹t
();

1781 
	}
}

1784 
	$d⁄tˇŒ_ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1786 i‡(
p
 || 
buf
 || 
Àn
) { }

1787 
	`Ârötf
(
°dîr
, "\n\n*** on_request_url() called onÖausedÖarser ***\n\n");

1788 
	`ab‹t
();

1789 
	}
}

1792 
	$d⁄tˇŒ_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1794 i‡(
p
 || 
buf
 || 
Àn
) { }

1795 
	`Ârötf
(
°dîr
, "\n\n*** on_body_cb() called onÖausedÖarser ***\n\n");

1796 
	`ab‹t
();

1797 
	}
}

1800 
	$d⁄tˇŒ_hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1802 i‡(
p
) { }

1803 
	`Ârötf
(
°dîr
, "\n\n*** on_headers_complete() called onÖaused "

1805 
	`ab‹t
();

1806 
	}
}

1809 
	$d⁄tˇŒ_mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1811 i‡(
p
) { }

1812 
	`Ârötf
(
°dîr
, "\n\n*** on_message_complete() called onÖaused "

1814 
	`ab‹t
();

1815 
	}
}

1818 
	$d⁄tˇŒ_ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1820 i‡(
p
 || 
buf
 || 
Àn
) { }

1821 
	`Ârötf
(
°dîr
, "\n\n*** on_status() called onÖausedÖarser ***\n\n");

1822 
	`ab‹t
();

1823 
	}
}

1825 
hâp_∑r£r_£âögs
 
	g£âögs_d⁄tˇŒ
 =

1826 {.
⁄_mesßge_begö
 = 
d⁄tˇŒ_mesßge_begö_cb


1827 ,.
	g⁄_hódî_fõld
 = 
d⁄tˇŒ_hódî_fõld_cb


1828 ,.
	g⁄_hódî_vÆue
 = 
d⁄tˇŒ_hódî_vÆue_cb


1829 ,.
	g⁄_uæ
 = 
d⁄tˇŒ_ªque°_uæ_cb


1830 ,.
	g⁄_°©us
 = 
d⁄tˇŒ_ª•⁄£_°©us_cb


1831 ,.
	g⁄_body
 = 
d⁄tˇŒ_body_cb


1832 ,.
	g⁄_hódîs_com∂ëe
 = 
d⁄tˇŒ_hódîs_com∂ëe_cb


1833 ,.
	g⁄_mesßge_com∂ëe
 = 
d⁄tˇŒ_mesßge_com∂ëe_cb


1841 
	$∑u£_mesßge_begö_cb
 (
hâp_∑r£r
 *
p
)

1843 
	`hâp_∑r£r_∑u£
(
p
, 1);

1844 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1845  
	`mesßge_begö_cb
(
p
);

1846 
	}
}

1849 
	$∑u£_hódî_fõld_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1851 
	`hâp_∑r£r_∑u£
(
p
, 1);

1852 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1853  
	`hódî_fõld_cb
(
p
, 
buf
, 
Àn
);

1854 
	}
}

1857 
	$∑u£_hódî_vÆue_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1859 
	`hâp_∑r£r_∑u£
(
p
, 1);

1860 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1861  
	`hódî_vÆue_cb
(
p
, 
buf
, 
Àn
);

1862 
	}
}

1865 
	$∑u£_ªque°_uæ_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1867 
	`hâp_∑r£r_∑u£
(
p
, 1);

1868 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1869  
	`ªque°_uæ_cb
(
p
, 
buf
, 
Àn
);

1870 
	}
}

1873 
	$∑u£_body_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1875 
	`hâp_∑r£r_∑u£
(
p
, 1);

1876 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1877  
	`body_cb
(
p
, 
buf
, 
Àn
);

1878 
	}
}

1881 
	$∑u£_hódîs_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1883 
	`hâp_∑r£r_∑u£
(
p
, 1);

1884 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1885  
	`hódîs_com∂ëe_cb
(
p
);

1886 
	}
}

1889 
	$∑u£_mesßge_com∂ëe_cb
 (
hâp_∑r£r
 *
p
)

1891 
	`hâp_∑r£r_∑u£
(
p
, 1);

1892 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1893  
	`mesßge_com∂ëe_cb
(
p
);

1894 
	}
}

1897 
	$∑u£_ª•⁄£_°©us_cb
 (
hâp_∑r£r
 *
p
, c⁄° *
buf
, 
size_t
 
Àn
)

1899 
	`hâp_∑r£r_∑u£
(
p
, 1);

1900 *
cuºít_∑u£_∑r£r
 = 
£âögs_d⁄tˇŒ
;

1901  
	`ª•⁄£_°©us_cb
(
p
, 
buf
, 
Àn
);

1902 
	}
}

1904 
hâp_∑r£r_£âögs
 
	g£âögs_∑u£
 =

1905 {.
⁄_mesßge_begö
 = 
∑u£_mesßge_begö_cb


1906 ,.
	g⁄_hódî_fõld
 = 
∑u£_hódî_fõld_cb


1907 ,.
	g⁄_hódî_vÆue
 = 
∑u£_hódî_vÆue_cb


1908 ,.
	g⁄_uæ
 = 
∑u£_ªque°_uæ_cb


1909 ,.
	g⁄_°©us
 = 
∑u£_ª•⁄£_°©us_cb


1910 ,.
	g⁄_body
 = 
∑u£_body_cb


1911 ,.
	g⁄_hódîs_com∂ëe
 = 
∑u£_hódîs_com∂ëe_cb


1912 ,.
	g⁄_mesßge_com∂ëe
 = 
∑u£_mesßge_com∂ëe_cb


1915 
hâp_∑r£r_£âögs
 
	g£âögs
 =

1916 {.
⁄_mesßge_begö
 = 
mesßge_begö_cb


1917 ,.
	g⁄_hódî_fõld
 = 
hódî_fõld_cb


1918 ,.
	g⁄_hódî_vÆue
 = 
hódî_vÆue_cb


1919 ,.
	g⁄_uæ
 = 
ªque°_uæ_cb


1920 ,.
	g⁄_°©us
 = 
ª•⁄£_°©us_cb


1921 ,.
	g⁄_body
 = 
body_cb


1922 ,.
	g⁄_hódîs_com∂ëe
 = 
hódîs_com∂ëe_cb


1923 ,.
	g⁄_mesßge_com∂ëe
 = 
mesßge_com∂ëe_cb


1926 
hâp_∑r£r_£âögs
 
	g£âögs_cou¡_body
 =

1927 {.
⁄_mesßge_begö
 = 
mesßge_begö_cb


1928 ,.
	g⁄_hódî_fõld
 = 
hódî_fõld_cb


1929 ,.
	g⁄_hódî_vÆue
 = 
hódî_vÆue_cb


1930 ,.
	g⁄_uæ
 = 
ªque°_uæ_cb


1931 ,.
	g⁄_°©us
 = 
ª•⁄£_°©us_cb


1932 ,.
	g⁄_body
 = 
cou¡_body_cb


1933 ,.
	g⁄_hódîs_com∂ëe
 = 
hódîs_com∂ëe_cb


1934 ,.
	g⁄_mesßge_com∂ëe
 = 
mesßge_com∂ëe_cb


1937 
hâp_∑r£r_£âögs
 
	g£âögs_nuŒ
 =

1938 {.
⁄_mesßge_begö
 = 0

1939 ,.
	g⁄_hódî_fõld
 = 0

1940 ,.
	g⁄_hódî_vÆue
 = 0

1941 ,.
	g⁄_uæ
 = 0

1942 ,.
	g⁄_°©us
 = 0

1943 ,.
	g⁄_body
 = 0

1944 ,.
	g⁄_hódîs_com∂ëe
 = 0

1945 ,.
	g⁄_mesßge_com∂ëe
 = 0

1949 
	$∑r£r_öô
 (
hâp_∑r£r_ty≥
 
ty≥
)

1951 
num_mesßges
 = 0;

1953 
	`as£π
(
∑r£r
 =
NULL
);

1955 
∑r£r
 = 
	`mÆloc
((
hâp_∑r£r
));

1957 
	`hâp_∑r£r_öô
(
∑r£r
, 
ty≥
);

1959 
	`mem£t
(&
mesßges
, 0,  messages);

1961 
	}
}

1964 
	$∑r£r_‰ì
 ()

1966 
	`as£π
(
∑r£r
);

1967 
	`‰ì
(
∑r£r
);

1968 
∑r£r
 = 
NULL
;

1969 
	}
}

1971 
size_t
 
	$∑r£
 (c⁄° *
buf
, 
size_t
 
Àn
)

1973 
size_t
 
≈¨£d
;

1974 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1975 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, &
£âögs
, 
buf
, 
Àn
);

1976  
≈¨£d
;

1977 
	}
}

1979 
size_t
 
	$∑r£_cou¡_body
 (c⁄° *
buf
, 
size_t
 
Àn
)

1981 
size_t
 
≈¨£d
;

1982 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1983 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, &
£âögs_cou¡_body
, 
buf
, 
Àn
);

1984  
≈¨£d
;

1985 
	}
}

1987 
size_t
 
	$∑r£_∑u£
 (c⁄° *
buf
, 
size_t
 
Àn
)

1989 
size_t
 
≈¨£d
;

1990 
hâp_∑r£r_£âögs
 
s
 = 
£âögs_∑u£
;

1992 
cuºíéy_∑rsög_eof
 = (
Àn
 == 0);

1993 
cuºít_∑u£_∑r£r
 = &
s
;

1994 
≈¨£d
 = 
	`hâp_∑r£r_execuã
(
∑r£r
, 
cuºít_∑u£_∑r£r
, 
buf
, 
Àn
);

1995  
≈¨£d
;

1996 
	}
}

1998 
ölöe
 

1999 
	$check_°r_eq
 (c⁄° 
mesßge
 *
m
,

2000 c⁄° *
¥›
,

2001 c⁄° *
ex≥˘ed
,

2002 c⁄° *
found
) {

2003 i‡((
ex≥˘ed
 =
NULL
Ë!(
found
 == NULL)) {

2004 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2005 
	`¥ötf
("ex≥˘ed %s\n", (
ex≥˘ed
 =
NULL
) ? "NULL" :Éxpected);

2006 
	`¥ötf
(" found %s\n", (
found
 =
NULL
) ? "NULL" : found);

2009 i‡(
ex≥˘ed
 !
NULL
 && 0 !
	`°rcmp
”x≥˘ed, 
found
)) {

2010 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2011 
	`¥ötf
("ex≥˘ed '%s'\n", 
ex≥˘ed
);

2012 
	`¥ötf
(" found '%s'\n", 
found
);

2016 
	}
}

2018 
ölöe
 

2019 
	$check_num_eq
 (c⁄° 
mesßge
 *
m
,

2020 c⁄° *
¥›
,

2021 
ex≥˘ed
,

2022 
found
) {

2023 i‡(
ex≥˘ed
 !
found
) {

2024 
	`¥ötf
("\n*** Eº‹: %†ö '%s' ***\n\n", 
¥›
, 
m
->
«me
);

2025 
	`¥ötf
("ex≥˘ed %d\n", 
ex≥˘ed
);

2026 
	`¥ötf
(" found %d\n", 
found
);

2030 
	}
}

2032 
	#MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
found
, 
¥›
) \

2033 i‡(!
	`check_°r_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
found
->¥›)Ë 0

	)

2035 
	#MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
found
, 
¥›
) \

2036 i‡(!
	`check_num_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
found
->¥›)Ë 0

	)

2038 
	#MESSAGE_CHECK_URL_EQ
(
u
, 
ex≥˘ed
, 
found
, 
¥›
, 
‚
) \

2040 
ubuf
[256]; \

2042 i‡((
u
)->
fõld_£t
 & (1 << (
‚
))) { \

2043 
	`mem˝y
(
ubuf
, (
found
)->
ªque°_uæ
 + (
u
)->
fõld_d©a
[(
‚
)].
off
, \

2044 (
u
)->
fõld_d©a
[(
‚
)].
Àn
); \

2045 
ubuf
[(
u
)->
fõld_d©a
[(
‚
)].
Àn
] = '\0'; \

2047 
ubuf
[0] = '\0'; \

2050 
	`check_°r_eq
(
ex≥˘ed
, #¥›,Éx≥˘ed->
¥›
, 
ubuf
); \

2051 } 0)

	)

2054 
	$mesßge_eq
 (
ödex
, c⁄° 
mesßge
 *
ex≥˘ed
)

2056 
i
;

2057 
mesßge
 *
m
 = &
mesßges
[
ödex
];

2059 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
hâp_maj‹
);

2060 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
hâp_mö‹
);

2062 i‡(
ex≥˘ed
->
ty≥
 =
HTTP_REQUEST
) {

2063 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
mëhod
);

2065 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
°©us_code
);

2066 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
ª•⁄£_°©us
);

2069 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
should_kìp_Æive
);

2070 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
mesßge_com∂ëe_⁄_eof
);

2072 
	`as£π
(
m
->
mesßge_begö_cb_ˇŒed
);

2073 
	`as£π
(
m
->
hódîs_com∂ëe_cb_ˇŒed
);

2074 
	`as£π
(
m
->
mesßge_com∂ëe_cb_ˇŒed
);

2077 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
ªque°_uæ
);

2082 i‡(*
m
->
ªque°_uæ
 && m->
mëhod
 !
HTTP_CONNECT
) {

2083 
hâp_∑r£r_uæ
 
u
;

2085 i‡(
	`hâp_∑r£r_∑r£_uæ
(
m
->
ªque°_uæ
, 
	`°æí
(m->ªque°_uæ), 0, &
u
)) {

2086 
	`Ârötf
(
°dîr
, "\n\n*** failedÅoÖarse URL %s ***\n\n",

2087 
m
->
ªque°_uæ
);

2088 
	`ab‹t
();

2091 i‡(
ex≥˘ed
->
ho°
) {

2092 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
ho°
, 
UF_HOST
);

2095 i‡(
ex≥˘ed
->
u£röfo
) {

2096 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
u£röfo
, 
UF_USERINFO
);

2099 
m
->
p‹t
 = (
u
.
fõld_£t
 & (1 << 
UF_PORT
)) ?

2100 
u
.
p‹t
 : 0;

2102 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
quîy_°rög
, 
UF_QUERY
);

2103 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
‰agmít
, 
UF_FRAGMENT
);

2104 
	`MESSAGE_CHECK_URL_EQ
(&
u
, 
ex≥˘ed
, 
m
, 
ªque°_∑th
, 
UF_PATH
);

2105 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
p‹t
);

2108 i‡(
ex≥˘ed
->
body_size
) {

2109 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
body_size
);

2111 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
body
);

2114 
	`MESSAGE_CHECK_NUM_EQ
(
ex≥˘ed
, 
m
, 
num_hódîs
);

2116 
r
;

2117 
i
 = 0; i < 
m
->
num_hódîs
; i++) {

2118 
r
 = 
	`check_°r_eq
(
ex≥˘ed
, "hódî fõld",Éx≥˘ed->
hódîs
[
i
][0], 
m
->headers[i][0]);

2119 i‡(!
r
)  0;

2120 
r
 = 
	`check_°r_eq
(
ex≥˘ed
, "hódî vÆue",Éx≥˘ed->
hódîs
[
i
][1], 
m
->headers[i][1]);

2121 i‡(!
r
)  0;

2124 
	`MESSAGE_CHECK_STR_EQ
(
ex≥˘ed
, 
m
, 
upgøde
);

2127 
	}
}

2133 
size_t


2134 
	$cou¡_∑r£d_mesßges
(c⁄° 
size_t
 
nmsgs
, ...) {

2135 
size_t
 
i
;

2136 
va_li°
 
≠
;

2138 
	`va_°¨t
(
≠
, 
nmsgs
);

2140 
i
 = 0; i < 
nmsgs
; i++) {

2141 
mesßge
 *
m
 = 
	`va_¨g
(
≠
, message *);

2143 i‡(
m
->
upgøde
) {

2144 
	`va_íd
(
≠
);

2145  
i
 + 1;

2149 
	`va_íd
(
≠
);

2150  
nmsgs
;

2151 
	}
}

2157 
	$upgøde_mesßge_fix
(*
body
, c⁄° 
size_t
 
ƒód
, c⁄° size_à
nmsgs
, ...) {

2158 
va_li°
 
≠
;

2159 
size_t
 
i
;

2160 
size_t
 
off
 = 0;

2162 
	`va_°¨t
(
≠
, 
nmsgs
);

2164 
i
 = 0; i < 
nmsgs
; i++) {

2165 
mesßge
 *
m
 = 
	`va_¨g
(
≠
, message *);

2167 
off
 +
	`°æí
(
m
->
øw
);

2169 i‡(
m
->
upgøde
) {

2170 
off
 -
	`°æí
(
m
->
upgøde
);

2173 i‡(!
	`check_°r_eq
(
m
, "upgøde", 
body
 + 
off
, body + 
ƒód
)) {

2174 
	`ab‹t
();

2179 *(
body
 + 
ƒód
 + 
	`°æí
(
m
->
upgøde
)) = '\0';

2180 
mesßges
[
num_mesßges
 -1 ].
upgøde
 = 
body
 + 
ƒód
;

2182 
	`va_íd
(
≠
);

2187 
	`va_íd
(
≠
);

2188 
	`¥ötf
("\n\n*** Error:Éxpectedá message with upgrade ***\n");

2190 
	`ab‹t
();

2191 
	}
}

2194 
	$¥öt_îr‹
 (c⁄° *
øw
, 
size_t
 
îr‹_loˇti⁄
)

2196 
	`Ârötf
(
°dîr
, "\n*** %s ***\n\n",

2197 
	`hâp_î∫o_des¸ùti⁄
(
	`HTTP_PARSER_ERRNO
(
∑r£r
)));

2199 
this_löe
 = 0, 
ch¨_Àn
 = 0;

2200 
size_t
 
i
, 
j
, 
Àn
 = 
	`°æí
(
øw
), 
îr‹_loˇti⁄_löe
 = 0;

2201 
i
 = 0; i < 
Àn
; i++) {

2202 i‡(
i
 =
îr‹_loˇti⁄
Ë
this_löe
 = 1;

2203 
øw
[
i
]) {

2205 
ch¨_Àn
 = 2;

2206 
	`Ârötf
(
°dîr
, "\\r");

2210 
ch¨_Àn
 = 2;

2211 
	`Ârötf
(
°dîr
, "\\n\n");

2213 i‡(
this_löe
Ë
¥öt
;

2215 
îr‹_loˇti⁄_löe
 = 0;

2219 
ch¨_Àn
 = 1;

2220 
	`Âutc
(
øw
[
i
], 
°dîr
);

2223 i‡(!
this_löe
Ë
îr‹_loˇti⁄_löe
 +
ch¨_Àn
;

2226 
	`Ârötf
(
°dîr
, "[eof]\n");

2228 
¥öt
:

2229 
j
 = 0; j < 
îr‹_loˇti⁄_löe
; j++) {

2230 
	`Âutc
(' ', 
°dîr
);

2232 
	`Ârötf
(
°dîr
, "^\n\√º‹Üoˇti⁄: %u\n", ()
îr‹_loˇti⁄
);

2233 
	}
}

2236 
	$ã°_¥e£rve_d©a
 ()

2238 
my_d©a
[] = "application-specific data";

2239 
hâp_∑r£r
 
∑r£r
;

2240 
∑r£r
.
d©a
 = 
my_d©a
;

2241 
	`hâp_∑r£r_öô
(&
∑r£r
, 
HTTP_REQUEST
);

2242 i‡(
∑r£r
.
d©a
 !
my_d©a
) {

2243 
	`¥ötf
("\n***Öarser.dataÇotÖreservedáccross http_parser_init ***\n\n");

2244 
	`ab‹t
();

2246 
	}
}

2248 
	suæ_ã°
 {

2249 c⁄° *
	m«me
;

2250 c⁄° *
	muæ
;

2251 
	mis_c⁄√˘
;

2252 
hâp_∑r£r_uæ
 
	mu
;

2253 
	mrv
;

2256 c⁄° 
uæ_ã°
 
	guæ_ã°s
[] =

2257 { {.
«me
="proxyÑequest"

2258 ,.
	guæ
="http://hostname/"

2259 ,.
	gis_c⁄√˘
=0

2260 ,.
	gu
=

2261 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2262 ,.
	gp‹t
=0

2263 ,.
	gfõld_d©a
=

2273 ,.
	grv
=0

2276 , {.
	g«me
="proxyÑequest withÖort"

2277 ,.
	guæ
="http://hostname:444/"

2278 ,.
	gis_c⁄√˘
=0

2279 ,.
	gu
=

2280 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PORT
Ë| (1 << 
UF_PATH
)

2281 ,.
	gp‹t
=444

2282 ,.
	gfõld_d©a
=

2292 ,.
	grv
=0

2295 , {.
	g«me
="CONNECTÑequest"

2296 ,.
	guæ
="hostname:443"

2297 ,.
	gis_c⁄√˘
=1

2298 ,.
	gu
=

2299 {.
fõld_£t
=(1 << 
UF_HOST
Ë| (1 << 
UF_PORT
)

2300 ,.
	gp‹t
=443

2301 ,.
	gfõld_d©a
=

2311 ,.
	grv
=0

2314 , {.
	g«me
="CONNECTÑequest butÇot connect"

2315 ,.
	guæ
="hostname:443"

2316 ,.
	gis_c⁄√˘
=0

2317 ,.
	grv
=1

2320 , {.
	g«me
="proxy ipv6Ñequest"

2321 ,.
	guæ
="http://[1:2::3:4]/"

2322 ,.
	gis_c⁄√˘
=0

2323 ,.
	gu
=

2324 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2325 ,.
	gp‹t
=0

2326 ,.
	gfõld_d©a
=

2336 ,.
	grv
=0

2339 , {.
	g«me
="proxy ipv6Ñequest withÖort"

2340 ,.
	guæ
="http://[1:2::3:4]:67/"

2341 ,.
	gis_c⁄√˘
=0

2342 ,.
	gu
=

2343 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PORT
Ë| (1 << 
UF_PATH
)

2344 ,.
	gp‹t
=67

2345 ,.
	gfõld_d©a
=

2355 ,.
	grv
=0

2358 , {.
	g«me
="CONNECT ipv6áddress"

2359 ,.
	guæ
="[1:2::3:4]:443"

2360 ,.
	gis_c⁄√˘
=1

2361 ,.
	gu
=

2362 {.
fõld_£t
=(1 << 
UF_HOST
Ë| (1 << 
UF_PORT
)

2363 ,.
	gp‹t
=443

2364 ,.
	gfõld_d©a
=

2374 ,.
	grv
=0

2377 , {.
	g«me
="ipv4 in ipv6áddress"

2378 ,.
	guæ
="http://[2001:0000:0000:0000:0000:0000:1.9.1.1]/"

2379 ,.
	gis_c⁄√˘
=0

2380 ,.
	gu
=

2381 {.
fõld_£t
=(1 << 
UF_SCHEMA
Ë| (1 << 
UF_HOST
Ë| (1 << 
UF_PATH
)

2382 ,.
	gp‹t
=0

2383 ,.
	gfõld_d©a
=

2393 ,.
	grv
=0

2396 , {.
	g«me
="extra ? in query string"

2397 ,.
	guæ
="http://a.tbcdn.cn/p/fp/2010c/??fp-header-min.css,fp-base-min.css,"

2400 ,.
	gis_c⁄√˘
=0

2401 ,.
	gu
=

2402 {.
fõld_£t
=(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_QUERY
)

2403 ,.
	gp‹t
=0

2404 ,.
	gfõld_d©a
=

2414 ,.
	grv
=0

2417 , {.
	g«me
="space URLÉncoded"

2418 ,.
	guæ
="/toto.html?toto=a%20b"

2419 ,.
	gis_c⁄√˘
=0

2420 ,.
	gu
=

2421 {.
fõld_£t
(1<<
UF_PATH
Ë| (1<<
UF_QUERY
)

2422 ,.
	gp‹t
=0

2423 ,.
	gfõld_d©a
=

2433 ,.
	grv
=0

2437 , {.
	g«me
="URL fragment"

2438 ,.
	guæ
="/toto.html#titi"

2439 ,.
	gis_c⁄√˘
=0

2440 ,.
	gu
=

2441 {.
fõld_£t
(1<<
UF_PATH
Ë| (1<<
UF_FRAGMENT
)

2442 ,.
	gp‹t
=0

2443 ,.
	gfõld_d©a
=

2453 ,.
	grv
=0

2456 , {.
	g«me
="complex URL fragment"

2457 ,.
	guæ
="http://www.webmasterworld.com/r.cgi?f=21&d=8405&url="

2459 ,.
	gis_c⁄√˘
=0

2460 ,.
	gu
=

2461 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_QUERY
) |\

2462 (1<<
UF_FRAGMENT
)

2463 ,.
	gp‹t
=0

2464 ,.
	gfõld_d©a
=

2474 ,.
	grv
=0

2477 , {.
	g«me
="complex URL fromÇode js urlÖarser doc"

2478 ,.
	guæ
="http://host.com:8080/p/a/t/h?query=string#hash"

2479 ,.
	gis_c⁄√˘
=0

2480 ,.
	gu
=

2481 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PORT
Ë| (1<<
UF_PATH
) |\

2482 (1<<
UF_QUERY
Ë| (1<<
UF_FRAGMENT
)

2483 ,.
	gp‹t
=8080

2484 ,.
	gfõld_d©a
=

2494 ,.
	grv
=0

2497 , {.
	g«me
="complex URL with basicáuth fromÇode js urlÖarser doc"

2498 ,.
	guæ
="http://a:b@host.com:8080/p/a/t/h?query=string#hash"

2499 ,.
	gis_c⁄√˘
=0

2500 ,.
	gu
=

2501 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PORT
Ë| (1<<
UF_PATH
) |\

2502 (1<<
UF_QUERY
Ë| (1<<
UF_FRAGMENT
Ë| (1<<
UF_USERINFO
)

2503 ,.
	gp‹t
=8080

2504 ,.
	gfõld_d©a
=

2514 ,.
	grv
=0

2517 , {.
	g«me
="double @"

2518 ,.
	guæ
="http://a:b@@hostname:443/"

2519 ,.
	gis_c⁄√˘
=0

2520 ,.
	grv
=1

2523 , {.
	g«me
="proxyÉmpty host"

2524 ,.
	guæ
="http://:443/"

2525 ,.
	gis_c⁄√˘
=0

2526 ,.
	grv
=1

2529 , {.
	g«me
="proxyÉmptyÖort"

2530 ,.
	guæ
="http://hostname:/"

2531 ,.
	gis_c⁄√˘
=0

2532 ,.
	grv
=1

2535 , {.
	g«me
="CONNECT with basicáuth"

2536 ,.
	guæ
="a:b@hostname:443"

2537 ,.
	gis_c⁄√˘
=1

2538 ,.
	grv
=1

2541 , {.
	g«me
="CONNECTÉmpty host"

2542 ,.
	guæ
=":443"

2543 ,.
	gis_c⁄√˘
=1

2544 ,.
	grv
=1

2547 , {.
	g«me
="CONNECTÉmptyÖort"

2548 ,.
	guæ
="hostname:"

2549 ,.
	gis_c⁄√˘
=1

2550 ,.
	grv
=1

2553 , {.
	g«me
="CONNECT withÉxtra bits"

2554 ,.
	guæ
="hostname:443/"

2555 ,.
	gis_c⁄√˘
=1

2556 ,.
	grv
=1

2559 , {.
	g«me
="space in URL"

2560 ,.
	guæ
="/foo bar/"

2561 ,.
	grv
=1

2564 , {.
	g«me
="proxy basicáuth with space urlÉncoded"

2565 ,.
	guæ
="http://a%20:b@host.com/"

2566 ,.
	gis_c⁄√˘
=0

2567 ,.
	gu
=

2568 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2569 ,.
	gp‹t
=0

2570 ,.
	gfõld_d©a
=

2580 ,.
	grv
=0

2583 , {.
	g«me
="carriageÑeturn in URL"

2584 ,.
	guæ
="/foo\rbar/"

2585 ,.
	grv
=1

2588 , {.
	g«me
="proxy double : in URL"

2589 ,.
	guæ
="http://hostname::443/"

2590 ,.
	grv
=1

2593 , {.
	g«me
="proxy basicáuth with double :"

2594 ,.
	guæ
="http://a::b@host.com/"

2595 ,.
	gis_c⁄√˘
=0

2596 ,.
	gu
=

2597 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2598 ,.
	gp‹t
=0

2599 ,.
	gfõld_d©a
=

2609 ,.
	grv
=0

2612 , {.
	g«me
="line feed in URL"

2613 ,.
	guæ
="/foo\nbar/"

2614 ,.
	grv
=1

2617 , {.
	g«me
="proxyÉmpty basicáuth"

2618 ,.
	guæ
="http://@hostname/fo"

2619 ,.
	gu
=

2620 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
)

2621 ,.
	gp‹t
=0

2622 ,.
	gfõld_d©a
=

2632 ,.
	grv
=0

2634 , {.
	g«me
="proxyÜine feed in hostname"

2635 ,.
	guæ
="http://host\name/fo"

2636 ,.
	grv
=1

2639 , {.
	g«me
="proxy % in hostname"

2640 ,.
	guæ
="http://host%name/fo"

2641 ,.
	grv
=1

2644 , {.
	g«me
="proxy ; in hostname"

2645 ,.
	guæ
="http://host;ame/fo"

2646 ,.
	grv
=1

2649 , {.
	g«me
="proxy basicáuth with unreservedchars"

2650 ,.
	guæ
="http://a!;-_!=+$@host.com/"

2651 ,.
	gis_c⁄√˘
=0

2652 ,.
	gu
=

2653 {.
fõld_£t
(1<<
UF_SCHEMA
Ë| (1<<
UF_HOST
Ë| (1<<
UF_PATH
Ë| (1<<
UF_USERINFO
)

2654 ,.
	gp‹t
=0

2655 ,.
	gfõld_d©a
=

2665 ,.
	grv
=0

2668 , {.
	g«me
="proxy onlyÉmpty basicáuth"

2669 ,.
	guæ
="http://@/fo"

2670 ,.
	grv
=1

2673 , {.
	g«me
="proxy only basicáuth"

2674 ,.
	guæ
="http://toto@/fo"

2675 ,.
	grv
=1

2678 , {.
	g«me
="proxyÉmtpy hostname"

2679 ,.
	guæ
="http:///fo"

2680 ,.
	grv
=1

2683 , {.
	g«me
="proxy = in URL"

2684 ,.
	guæ
="http://host=ame/fo"

2685 ,.
	grv
=1

2688 #i‡
HTTP_PARSER_STRICT


2690 , {.
	g«me
="tab in URL"

2691 ,.
	guæ
="/foo\tbar/"

2692 ,.
	grv
=1

2695 , {.
	g«me
="form feed in URL"

2696 ,.
	guæ
="/foo\fbar/"

2697 ,.
	grv
=1

2702 , {.
	g«me
="tab in URL"

2703 ,.
	guæ
="/foo\tbar/"

2704 ,.
	gu
=

2705 {.
fõld_£t
=(1 << 
UF_PATH
)

2706 ,.
	gfõld_d©a
=

2716 ,.
	grv
=0

2719 , {.
	g«me
="form feed in URL"

2720 ,.
	guæ
="/foo\fbar/"

2721 ,.
	gu
=

2722 {.
fõld_£t
=(1 << 
UF_PATH
)

2723 ,.
	gfõld_d©a
=

2733 ,.
	grv
=0

2739 
	$dump_uæ
 (c⁄° *
uæ
, c⁄° 
hâp_∑r£r_uæ
 *
u
)

2741 
i
;

2743 
	`¥ötf
("\tfõld_£t: 0x%x,Ö‹t: %u\n", 
u
->
fõld_£t
, u->
p‹t
);

2744 
i
 = 0; i < 
UF_MAX
; i++) {

2745 i‡((
u
->
fõld_£t
 & (1 << 
i
)) == 0) {

2746 
	`¥ötf
("\tfõld_d©a[%u]: un£t\n", 
i
);

2750 
	`¥ötf
("\tfield_data[%u]: off: %uÜen: %uÖart: \"%.*s\n\"",

2751 
i
,

2752 
u
->
fõld_d©a
[
i
].
off
,

2753 
u
->
fõld_d©a
[
i
].
Àn
,

2754 
u
->
fõld_d©a
[
i
].
Àn
,

2755 
uæ
 + 
u
->
fõld_d©a
[
i
].
off
);

2757 
	}
}

2760 
	$ã°_∑r£_uæ
 ()

2762 
hâp_∑r£r_uæ
 
u
;

2763 c⁄° 
uæ_ã°
 *
ã°
;

2764 
i
;

2765 
rv
;

2767 
i
 = 0; i < ((
uæ_ã°s
) / (url_tests[0])); i++) {

2768 
ã°
 = &
uæ_ã°s
[
i
];

2769 
	`mem£t
(&
u
, 0, (u));

2771 
rv
 = 
	`hâp_∑r£r_∑r£_uæ
(
ã°
->
uæ
,

2772 
	`°æí
(
ã°
->
uæ
),

2773 
ã°
->
is_c⁄√˘
,

2774 &
u
);

2776 i‡(
ã°
->
rv
 == 0) {

2777 i‡(
rv
 != 0) {

2778 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\"Åest failed, "

2779 "u√x≥˘edÑv %d ***\n\n", 
ã°
->
uæ
,Åe°->
«me
, 
rv
);

2780 
	`ab‹t
();

2783 i‡(
	`memcmp
(&
u
, &
ã°
->u, (u)) != 0) {

2784 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\" failed ***\n",

2785 
ã°
->
uæ
,Åe°->
«me
);

2787 
	`¥ötf
("target http_parser_url:\n");

2788 
	`dump_uæ
(
ã°
->
uæ
, &ã°->
u
);

2789 
	`¥ötf
("result http_parser_url:\n");

2790 
	`dump_uæ
(
ã°
->
uæ
, &
u
);

2792 
	`ab‹t
();

2796 i‡(
rv
 == 0) {

2797 
	`¥ötf
("\n*** http_parser_parse_url(\"%s\") \"%s\"Åest failed, "

2798 "u√x≥˘edÑv %d ***\n\n", 
ã°
->
uæ
,Åe°->
«me
, 
rv
);

2799 
	`ab‹t
();

2803 
	}
}

2806 
	$ã°_mëhod_°r
 ()

2808 
	`as£π
(0 =
	`°rcmp
("GET", 
	`hâp_mëhod_°r
(
HTTP_GET
)));

2809 
	`as£π
(0 =
	`°rcmp
("<unknown>", 
	`hâp_mëhod_°r
(1337)));

2810 
	}
}

2813 
	$ã°_mesßge
 (c⁄° 
mesßge
 *message)

2815 
size_t
 
øw_Àn
 = 
	`°æí
(
mesßge
->
øw
);

2816 
size_t
 
msg1Àn
;

2817 
msg1Àn
 = 0; msg1À¿< 
øw_Àn
; msg1len++) {

2818 
	`∑r£r_öô
(
mesßge
->
ty≥
);

2820 
size_t
 
ªad
;

2821 c⁄° *
msg1
 = 
mesßge
->
øw
;

2822 c⁄° *
msg2
 = 
msg1
 + 
msg1Àn
;

2823 
size_t
 
msg2Àn
 = 
øw_Àn
 - 
msg1Àn
;

2825 i‡(
msg1Àn
) {

2826 
ªad
 = 
	`∑r£
(
msg1
, 
msg1Àn
);

2828 i‡(
mesßge
->
upgøde
 && 
∑r£r
->upgrade) {

2829 
mesßges
[
num_mesßges
 - 1].
upgøde
 = 
msg1
 + 
ªad
;

2830 
ã°
;

2833 i‡(
ªad
 !
msg1Àn
) {

2834 
	`¥öt_îr‹
(
msg1
, 
ªad
);

2835 
	`ab‹t
();

2840 
ªad
 = 
	`∑r£
(
msg2
, 
msg2Àn
);

2842 i‡(
mesßge
->
upgøde
 && 
∑r£r
->upgrade) {

2843 
mesßges
[
num_mesßges
 - 1].
upgøde
 = 
msg2
 + 
ªad
;

2844 
ã°
;

2847 i‡(
ªad
 !
msg2Àn
) {

2848 
	`¥öt_îr‹
(
msg2
, 
ªad
);

2849 
	`ab‹t
();

2852 
ªad
 = 
	`∑r£
(
NULL
, 0);

2854 i‡(
ªad
 != 0) {

2855 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2856 
	`ab‹t
();

2859 
ã°
:

2861 i‡(
num_mesßges
 != 1) {

2862 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
mesßge
->
«me
);

2863 
	`ab‹t
();

2866 if(!
	`mesßge_eq
(0, 
mesßge
)Ë
	`ab‹t
();

2868 
	`∑r£r_‰ì
();

2870 
	}
}

2873 
	$ã°_mesßge_cou¡_body
 (c⁄° 
mesßge
 *message)

2875 
	`∑r£r_öô
(
mesßge
->
ty≥
);

2877 
size_t
 
ªad
;

2878 
size_t
 
l
 = 
	`°æí
(
mesßge
->
øw
);

2879 
size_t
 
i
, 
t‹ód
;

2880 
size_t
 
chunk
 = 4024;

2882 
i
 = 0; i < 
l
; i+
chunk
) {

2883 
t‹ód
 = 
	`MIN
(
l
-
i
, 
chunk
);

2884 
ªad
 = 
	`∑r£_cou¡_body
(
mesßge
->
øw
 + 
i
, 
t‹ód
);

2885 i‡(
ªad
 !
t‹ód
) {

2886 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2887 
	`ab‹t
();

2892 
ªad
 = 
	`∑r£_cou¡_body
(
NULL
, 0);

2893 i‡(
ªad
 != 0) {

2894 
	`¥öt_îr‹
(
mesßge
->
øw
, 
ªad
);

2895 
	`ab‹t
();

2898 i‡(
num_mesßges
 != 1) {

2899 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
mesßge
->
«me
);

2900 
	`ab‹t
();

2903 if(!
	`mesßge_eq
(0, 
mesßge
)Ë
	`ab‹t
();

2905 
	`∑r£r_‰ì
();

2906 
	}
}

2909 
	$ã°_sim∂e
 (c⁄° *
buf
, 
hâp_î∫o
 
îr_ex≥˘ed
)

2911 
	`∑r£r_öô
(
HTTP_REQUEST
);

2913 
size_t
 
∑r£d
;

2914 
∑ss
;

2915 
hâp_î∫o
 
îr
;

2917 
∑r£d
 = 
	`∑r£
(
buf
, 
	`°æí
(buf));

2918 
∑ss
 = (
∑r£d
 =
	`°æí
(
buf
));

2919 
îr
 = 
	`HTTP_PARSER_ERRNO
(
∑r£r
);

2920 
∑r£d
 = 
	`∑r£
(
NULL
, 0);

2921 
∑ss
 &(
∑r£d
 == 0);

2923 
	`∑r£r_‰ì
();

2928 #i‡
HTTP_PARSER_STRICT


2929 i‡(
îr_ex≥˘ed
 !
îr
 &&Éº_ex≥˘ed !
HPE_OK
 &&Éº !
HPE_STRICT
) {

2931 i‡(
îr_ex≥˘ed
 !
îr
) {

2933 
	`Ârötf
(
°dîr
, "\n***Åest_simpleÉxpected %s, but saw %s ***\n\n%s\n",

2934 
	`hâp_î∫o_«me
(
îr_ex≥˘ed
), hâp_î∫o_«me(
îr
), 
buf
);

2935 
	`ab‹t
();

2937 
	}
}

2940 
	$ã°_hódî_ovîÊow_îr‹
 (
ªq
)

2942 
hâp_∑r£r
 
∑r£r
;

2943 
	`hâp_∑r£r_öô
(&
∑r£r
, 
ªq
 ? 
HTTP_REQUEST
 : 
HTTP_RESPONSE
);

2944 
size_t
 
∑r£d
;

2945 c⁄° *
buf
;

2946 
buf
 = 
ªq
 ? "GET / HTTP/1.1\r\n" : "HTTP/1.0 200 OK\r\n";

2947 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
	`°æí
(buf));

2948 
	`as£π
(
∑r£d
 =
	`°æí
(
buf
));

2950 
buf
 = "header-key: header-value\r\n";

2951 
size_t
 
buÊí
 = 
	`°æí
(
buf
);

2953 
i
;

2954 
i
 = 0; i < 10000; i++) {

2955 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
buÊí
);

2956 i‡(
∑r£d
 !
buÊí
) {

2958 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_HEADER_OVERFLOW
);

2963 
	`Ârötf
(
°dîr
, "\n*** ErrorÉxpected butÇone in header overflowÅest ***\n");

2964 
	`ab‹t
();

2965 
	}
}

2968 
	$ã°_c⁄ã¡_Àngth_ovîÊow
 (c⁄° *
buf
, 
size_t
 
buÊí
, 
ex≥˘_ok
)

2970 
hâp_∑r£r
 
∑r£r
;

2971 
	`hâp_∑r£r_öô
(&
∑r£r
, 
HTTP_RESPONSE
);

2972 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf
, 
buÊí
);

2974 i‡(
ex≥˘_ok
)

2975 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_OK
);

2977 
	`as£π
(
	`HTTP_PARSER_ERRNO
(&
∑r£r
Ë=
HPE_INVALID_CONTENT_LENGTH
);

2978 
	}
}

2981 
	$ã°_hódî_c⁄ã¡_Àngth_ovîÊow_îr‹
 ()

2983 
	#X
(
size
) \

2986 "\r\n"

	)

2987 c⁄° 
a
[] = 
	`X
(1844674407370955160);

2988 c⁄° 
b
[] = 
	`X
(18446744073709551615);

2989 c⁄° 
c
[] = 
	`X
(18446744073709551616);

2990 #unde‡
X


2991 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
a
, (a) - 1, 1);

2992 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
b
, (b) - 1, 0);

2993 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
c
, (c) - 1, 0);

2994 
	}
}

2997 
	$ã°_chunk_c⁄ã¡_Àngth_ovîÊow_îr‹
 ()

2999 
	#X
(
size
) \

3004 "..."

	)

3005 c⁄° 
a
[] = 
	`X
(
FFFFFFFFFFFFFFE
);

3006 c⁄° 
b
[] = 
	`X
(
FFFFFFFFFFFFFFFF
);

3007 c⁄° 
c
[] = 
	`X
(10000000000000000);

3008 #unde‡
X


3009 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
a
, (a) - 1, 1);

3010 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
b
, (b) - 1, 0);

3011 
	`ã°_c⁄ã¡_Àngth_ovîÊow
(
c
, (c) - 1, 0);

3012 
	}
}

3015 
	$ã°_no_ovîÊow_l⁄g_body
 (
ªq
, 
size_t
 
Àngth
)

3017 
hâp_∑r£r
 
∑r£r
;

3018 
	`hâp_∑r£r_öô
(&
∑r£r
, 
ªq
 ? 
HTTP_REQUEST
 : 
HTTP_RESPONSE
);

3019 
size_t
 
∑r£d
;

3020 
size_t
 
i
;

3021 
buf1
[3000];

3022 
size_t
 
buf1Àn
 = 
	`•rötf
(
buf1
, "%s\r\nConnection: Keep-Alive\r\nContent-Length: %lu\r\n\r\n",

3023 
ªq
 ? "POST / HTTP/1.0" : "HTTP/1.0 200 OK", ()
Àngth
);

3024 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf1
, 
buf1Àn
);

3025 i‡(
∑r£d
 !
buf1Àn
)

3026 
îr
;

3028 
i
 = 0; i < 
Àngth
; i++) {

3029 
foo
 = 'a';

3030 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, &
foo
, 1);

3031 i‡(
∑r£d
 != 1)

3032 
îr
;

3035 
∑r£d
 = 
	`hâp_∑r£r_execuã
(&
∑r£r
, &
£âögs_nuŒ
, 
buf1
, 
buf1Àn
);

3036 i‡(
∑r£d
 !
buf1Àn
Ë
îr
;

3039 
îr
:

3040 
	`Ârötf
(
°dîr
,

3042 
ªq
 ? "REQUEST" : "RESPONSE",

3043 ()
Àngth
);

3044 
	`ab‹t
();

3045 
	}
}

3048 
	$ã°_mu…ùÀ3
 (c⁄° 
mesßge
 *
r1
, c⁄° mesßgê*
r2
, c⁄° mesßgê*
r3
)

3050 
mesßge_cou¡
 = 
	`cou¡_∑r£d_mesßges
(3, 
r1
, 
r2
, 
r3
);

3052 
tŸÆ
[ 
	`°æí
(
r1
->
øw
)

3053 + 
	`°æí
(
r2
->
øw
)

3054 + 
	`°æí
(
r3
->
øw
)

3057 
tŸÆ
[0] = '\0';

3059 
	`°rˇt
(
tŸÆ
, 
r1
->
øw
);

3060 
	`°rˇt
(
tŸÆ
, 
r2
->
øw
);

3061 
	`°rˇt
(
tŸÆ
, 
r3
->
øw
);

3063 
	`∑r£r_öô
(
r1
->
ty≥
);

3065 
size_t
 
ªad
;

3067 
ªad
 = 
	`∑r£
(
tŸÆ
, 
	`°æí
(total));

3069 i‡(
∑r£r
->
upgøde
) {

3070 
	`upgøde_mesßge_fix
(
tŸÆ
, 
ªad
, 3, 
r1
, 
r2
, 
r3
);

3071 
ã°
;

3074 i‡(
ªad
 !
	`°æí
(
tŸÆ
)) {

3075 
	`¥öt_îr‹
(
tŸÆ
, 
ªad
);

3076 
	`ab‹t
();

3079 
ªad
 = 
	`∑r£
(
NULL
, 0);

3081 i‡(
ªad
 != 0) {

3082 
	`¥öt_îr‹
(
tŸÆ
, 
ªad
);

3083 
	`ab‹t
();

3086 
ã°
:

3088 i‡(
mesßge_cou¡
 !
num_mesßges
) {

3089 
	`Ârötf
(
°dîr
, "\n\n*** P¨£∏didn'à£ê3 mesßge†⁄ly %d *** \n", 
num_mesßges
);

3090 
	`ab‹t
();

3093 i‡(!
	`mesßge_eq
(0, 
r1
)Ë
	`ab‹t
();

3094 i‡(
mesßge_cou¡
 > 1 && !
	`mesßge_eq
(1, 
r2
)Ë
	`ab‹t
();

3095 i‡(
mesßge_cou¡
 > 2 && !
	`mesßge_eq
(2, 
r3
)Ë
	`ab‹t
();

3097 
	`∑r£r_‰ì
();

3098 
	}
}

3105 
	$ã°_sˇn
 (c⁄° 
mesßge
 *
r1
, c⁄° mesßgê*
r2
, c⁄° mesßgê*
r3
)

3107 
tŸÆ
[80*1024] = "\0";

3108 
buf1
[80*1024] = "\0";

3109 
buf2
[80*1024] = "\0";

3110 
buf3
[80*1024] = "\0";

3112 
	`°rˇt
(
tŸÆ
, 
r1
->
øw
);

3113 
	`°rˇt
(
tŸÆ
, 
r2
->
øw
);

3114 
	`°rˇt
(
tŸÆ
, 
r3
->
øw
);

3116 
size_t
 
ªad
;

3118 
tŸÆ_Àn
 = 
	`°æí
(
tŸÆ
);

3120 
tŸÆ_›s
 = 2 * (
tŸÆ_Àn
 - 1) * (total_len - 2) / 2;

3121 
›s
 = 0 ;

3123 
size_t
 
buf1_Àn
, 
buf2_Àn
, 
buf3_Àn
;

3124 
mesßge_cou¡
 = 
	`cou¡_∑r£d_mesßges
(3, 
r1
, 
r2
, 
r3
);

3126 
i
,
j
,
ty≥_bŸh
;

3127 
ty≥_bŸh
 = 0;Åype_both < 2;Åype_both ++ ) {

3128 
j
 = 2; j < 
tŸÆ_Àn
; j ++ ) {

3129 
i
 = 1; i < 
j
; i ++ ) {

3131 i‡(
›s
 % 1000 == 0) {

3132 
	`¥ötf
("\b\b\b\b%3.0f%%", 100 * ()
›s
 /()
tŸÆ_›s
);

3133 
	`fÊush
(
°dout
);

3135 
›s
 += 1;

3137 
	`∑r£r_öô
(
ty≥_bŸh
 ? 
HTTP_BOTH
 : 
r1
->
ty≥
);

3139 
buf1_Àn
 = 
i
;

3140 
	`°æn˝y
(
buf1
, (buf1), 
tŸÆ
, 
buf1_Àn
);

3141 
buf1
[
buf1_Àn
] = 0;

3143 
buf2_Àn
 = 
j
 - 
i
;

3144 
	`°æn˝y
(
buf2
, (
buf1
), 
tŸÆ
+
i
, 
buf2_Àn
);

3145 
buf2
[
buf2_Àn
] = 0;

3147 
buf3_Àn
 = 
tŸÆ_Àn
 - 
j
;

3148 
	`°æn˝y
(
buf3
, (
buf1
), 
tŸÆ
+
j
, 
buf3_Àn
);

3149 
buf3
[
buf3_Àn
] = 0;

3151 
ªad
 = 
	`∑r£
(
buf1
, 
buf1_Àn
);

3153 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3155 i‡(
ªad
 !
buf1_Àn
) {

3156 
	`¥öt_îr‹
(
buf1
, 
ªad
);

3157 
îr‹
;

3160 
ªad
 +
	`∑r£
(
buf2
, 
buf2_Àn
);

3162 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3164 i‡(
ªad
 !
buf1_Àn
 + 
buf2_Àn
) {

3165 
	`¥öt_îr‹
(
buf2
, 
ªad
);

3166 
îr‹
;

3169 
ªad
 +
	`∑r£
(
buf3
, 
buf3_Àn
);

3171 i‡(
∑r£r
->
upgøde
Ë
ã°
;

3173 i‡(
ªad
 !
buf1_Àn
 + 
buf2_Àn
 + 
buf3_Àn
) {

3174 
	`¥öt_îr‹
(
buf3
, 
ªad
);

3175 
îr‹
;

3178 
	`∑r£
(
NULL
, 0);

3180 
ã°
:

3181 i‡(
∑r£r
->
upgøde
) {

3182 
	`upgøde_mesßge_fix
(
tŸÆ
, 
ªad
, 3, 
r1
, 
r2
, 
r3
);

3185 i‡(
mesßge_cou¡
 !
num_mesßges
) {

3186 
	`Ârötf
(
°dîr
, "\n\nParser didn't see %d messages only %d\n",

3187 
mesßge_cou¡
, 
num_mesßges
);

3188 
îr‹
;

3191 i‡(!
	`mesßge_eq
(0, 
r1
)) {

3192 
	`Ârötf
(
°dîr
, "\n\nError matching messages[0] inÅest_scan.\n");

3193 
îr‹
;

3196 i‡(
mesßge_cou¡
 > 1 && !
	`mesßge_eq
(1, 
r2
)) {

3197 
	`Ârötf
(
°dîr
, "\n\nError matching messages[1] inÅest_scan.\n");

3198 
îr‹
;

3201 i‡(
mesßge_cou¡
 > 2 && !
	`mesßge_eq
(2, 
r3
)) {

3202 
	`Ârötf
(
°dîr
, "\n\nError matching messages[2] inÅest_scan.\n");

3203 
îr‹
;

3206 
	`∑r£r_‰ì
();

3210 
	`puts
("\b\b\b\b100%");

3213 
îr‹
:

3214 
	`Ârötf
(
°dîr
, "i=%d j=%d\n", 
i
, 
j
);

3215 
	`Ârötf
(
°dîr
, "buf1 (%uË%s\n\n", ()
buf1_Àn
, 
buf1
);

3216 
	`Ârötf
(
°dîr
, "buf2 (%uË%s\n\n", ()
buf2_Àn
 , 
buf2
);

3217 
	`Ârötf
(
°dîr
, "buf3 (%uË%s\n", ()
buf3_Àn
, 
buf3
);

3218 
	`ab‹t
();

3219 
	}
}

3224 
	$¸óã_œrge_chunked_mesßge
 (
body_size_ö_kb
, c⁄° * 
hódîs
)

3226 
i
;

3227 
size_t
 
wrŸe
 = 0;

3228 
size_t
 
hódîs_Àn
 = 
	`°æí
(
hódîs
);

3229 
size_t
 
bufsize
 = 
hódîs_Àn
 + (5+1024+2)*
body_size_ö_kb
 + 6;

3230 * 
buf
 = 
	`mÆloc
(
bufsize
);

3232 
	`mem˝y
(
buf
, 
hódîs
, 
hódîs_Àn
);

3233 
wrŸe
 +
hódîs_Àn
;

3235 
i
 = 0; i < 
body_size_ö_kb
; i++) {

3237 
	`mem˝y
(
buf
 + 
wrŸe
, "400\r\n", 5);

3238 
wrŸe
 += 5;

3239 
	`mem£t
(
buf
 + 
wrŸe
, 'C', 1024);

3240 
wrŸe
 += 1024;

3241 
	`°r˝y
(
buf
 + 
wrŸe
, "\r\n");

3242 
wrŸe
 += 2;

3245 
	`mem˝y
(
buf
 + 
wrŸe
, "0\r\n\r\n", 6);

3246 
wrŸe
 += 6;

3247 
	`as£π
(
wrŸe
 =
bufsize
);

3249  
buf
;

3250 
	}
}

3255 
	$ã°_mesßge_∑u£
 (c⁄° 
mesßge
 *
msg
)

3257 *
buf
 = (*Ë
msg
->
øw
;

3258 
size_t
 
buÊí
 = 
	`°æí
(
msg
->
øw
);

3259 
size_t
 
ƒód
;

3261 
	`∑r£r_öô
(
msg
->
ty≥
);

3264 
ƒód
 = 
	`∑r£_∑u£
(
buf
, 
buÊí
);

3268 i‡(
mesßges
[0].
mesßge_com∂ëe_cb_ˇŒed
 &&

3269 
msg
->
upgøde
 &&

3270 
∑r£r
->
upgøde
) {

3271 
mesßges
[0].
upgøde
 = 
buf
 + 
ƒód
;

3272 
ã°
;

3275 i‡(
ƒód
 < 
buÊí
) {

3278 i‡(
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_STRICT
) {

3279 
	`∑r£r_‰ì
();

3283 
	`as£π
 (
	`HTTP_PARSER_ERRNO
(
∑r£r
Ë=
HPE_PAUSED
);

3286 
buf
 +
ƒód
;

3287 
buÊí
 -
ƒód
;

3288 
	`hâp_∑r£r_∑u£
(
∑r£r
, 0);

3289 } 
buÊí
 > 0);

3291 
ƒód
 = 
	`∑r£_∑u£
(
NULL
, 0);

3292 
	`as£π
 (
ƒód
 == 0);

3294 
ã°
:

3295 i‡(
num_mesßges
 != 1) {

3296 
	`¥ötf
("\n***Çum_mesßge†!1á·îÅe°ög '%s' ***\n\n", 
msg
->
«me
);

3297 
	`ab‹t
();

3300 if(!
	`mesßge_eq
(0, 
msg
)Ë
	`ab‹t
();

3302 
	`∑r£r_‰ì
();

3303 
	}
}

3306 
	$maö
 ()

3308 
∑r£r
 = 
NULL
;

3309 
i
, 
j
, 
k
;

3310 
ªque°_cou¡
;

3311 
ª•⁄£_cou¡
;

3312 
vîsi⁄
;

3313 
maj‹
;

3314 
mö‹
;

3315 
∑tch
;

3317 
vîsi⁄
 = 
	`hâp_∑r£r_vîsi⁄
();

3318 
maj‹
 = (
vîsi⁄
 >> 16) & 255;

3319 
mö‹
 = (
vîsi⁄
 >> 8) & 255;

3320 
∑tch
 = 
vîsi⁄
 & 255;

3321 
	`¥ötf
("hâp_∑r£∏v%u.%u.%u (0x%06lx)\n", 
maj‹
, 
mö‹
, 
∑tch
, 
vîsi⁄
);

3323 
	`¥ötf
("sizeof(hâp_∑r£rË%u\n", ()(
hâp_∑r£r
));

3325 
ªque°_cou¡
 = 0; 
ªque°s
[ªque°_cou¡].
«me
;Ñequest_count++);

3326 
ª•⁄£_cou¡
 = 0; 
ª•⁄£s
[ª•⁄£_cou¡].
«me
;Ñesponse_count++);

3329 
	`ã°_¥e£rve_d©a
();

3330 
	`ã°_∑r£_uæ
();

3331 
	`ã°_mëhod_°r
();

3335 
	`ã°_hódî_ovîÊow_îr‹
(
HTTP_REQUEST
);

3336 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_REQUEST
, 1000);

3337 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_REQUEST
, 100000);

3339 
	`ã°_hódî_ovîÊow_îr‹
(
HTTP_RESPONSE
);

3340 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_RESPONSE
, 1000);

3341 
	`ã°_no_ovîÊow_l⁄g_body
(
HTTP_RESPONSE
, 100000);

3343 
	`ã°_hódî_c⁄ã¡_Àngth_ovîÊow_îr‹
();

3344 
	`ã°_chunk_c⁄ã¡_Àngth_ovîÊow_îr‹
();

3348 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3349 
	`ã°_mesßge
(&
ª•⁄£s
[
i
]);

3352 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3353 
	`ã°_mesßge_∑u£
(&
ª•⁄£s
[
i
]);

3356 
i
 = 0; i < 
ª•⁄£_cou¡
; i++) {

3357 i‡(!
ª•⁄£s
[
i
].
should_kìp_Æive
) ;

3358 
j
 = 0; j < 
ª•⁄£_cou¡
; j++) {

3359 i‡(!
ª•⁄£s
[
j
].
should_kìp_Æive
) ;

3360 
k
 = 0; k < 
ª•⁄£_cou¡
; k++) {

3361 
	`ã°_mu…ùÀ3
(&
ª•⁄£s
[
i
], &ª•⁄£s[
j
], &ª•⁄£s[
k
]);

3366 
	`ã°_mesßge_cou¡_body
(&
ª•⁄£s
[
NO_HEADERS_NO_BODY_404
]);

3367 
	`ã°_mesßge_cou¡_body
(&
ª•⁄£s
[
TRAILING_SPACE_ON_CHUNKED_BODY
]);

3371 * 
msg
 = 
	`¸óã_œrge_chunked_mesßge
(31337,

3376 
mesßge
 
œrge_chunked
 =

3377 {.
«me
= "large chunked"

3378 ,.
ty≥

HTTP_RESPONSE


3379 ,.
øw

msg


3380 ,.
should_kìp_Æive

FALSE


3381 ,.
mesßge_com∂ëe_⁄_eof

FALSE


3382 ,.
hâp_maj‹
= 1

3383 ,.
hâp_mö‹
= 0

3384 ,.
°©us_code
= 200

3385 ,.
ª•⁄£_°©us
= "OK"

3386 ,.
num_hódîs
= 2

3387 ,.
hódîs
=

3391 ,.
body_size
= 31337*1024

3393 
	`ã°_mesßge_cou¡_body
(&
œrge_chunked
);

3394 
	`‰ì
(
msg
);

3399 
	`¥ötf
("response scan 1/2 ");

3400 
	`ã°_sˇn
–&
ª•⁄£s
[
TRAILING_SPACE_ON_CHUNKED_BODY
]

3401 , &
ª•⁄£s
[
NO_BODY_HTTP10_KA_204
]

3402 , &
ª•⁄£s
[
NO_REASON_PHRASE
]

3405 
	`¥ötf
("response scan 2/2 ");

3406 
	`ã°_sˇn
–&
ª•⁄£s
[
BONJOUR_MADAME_FR
]

3407 , &
ª•⁄£s
[
UNDERSTORE_HEADER_KEY
]

3408 , &
ª•⁄£s
[
NO_CARRIAGE_RET
]

3411 
	`puts
("responses okay");

3416 
	`ã°_sim∂e
("GET / HTP/1.1\r\n\r\n", 
HPE_INVALID_VERSION
);

3419 
	`ã°_sim∂e
("GET / HTTP/1.1\r\n"

3424 
HPE_OK
);

3426 c⁄° *
Æl_mëhods
[] = {

3452 c⁄° **
this_mëhod
;

3453 
this_mëhod
 = 
Æl_mëhods
; *this_method;Åhis_method++) {

3454 
buf
[200];

3455 
	`•rötf
(
buf
, "%†/ HTTP/1.1\r\n\r\n", *
this_mëhod
);

3456 
	`ã°_sim∂e
(
buf
, 
HPE_OK
);

3459 c⁄° *
bad_mëhods
[] = {

3473 
this_mëhod
 = 
bad_mëhods
; *this_method;Åhis_method++) {

3474 
buf
[200];

3475 
	`•rötf
(
buf
, "%†/ HTTP/1.1\r\n\r\n", *
this_mëhod
);

3476 
	`ã°_sim∂e
(
buf
, 
HPE_INVALID_METHOD
);

3479 c⁄° *
dumbfuck2
 =

3514 
	`ã°_sim∂e
(
dumbfuck2
, 
HPE_OK
);

3522 c⁄° *
bad_gë_no_hódîs_no_body
 = "GET /bad_get_no_headers_no_body/world HTTP/1.1\r\n"

3526 
	`ã°_sim∂e
(
bad_gë_no_hódîs_no_body
, 0);

3532 
i
 = 0; 
ªque°s
[i].
«me
; i++) {

3533 
	`ã°_mesßge
(&
ªque°s
[
i
]);

3536 
i
 = 0; i < 
ªque°_cou¡
; i++) {

3537 
	`ã°_mesßge_∑u£
(&
ªque°s
[
i
]);

3540 
i
 = 0; i < 
ªque°_cou¡
; i++) {

3541 i‡(!
ªque°s
[
i
].
should_kìp_Æive
) ;

3542 
j
 = 0; j < 
ªque°_cou¡
; j++) {

3543 i‡(!
ªque°s
[
j
].
should_kìp_Æive
) ;

3544 
k
 = 0; k < 
ªque°_cou¡
; k++) {

3545 
	`ã°_mu…ùÀ3
(&
ªque°s
[
i
], &ªque°s[
j
], &ªque°s[
k
]);

3550 
	`¥ötf
("request scan 1/4 ");

3551 
	`ã°_sˇn
–&
ªque°s
[
GET_NO_HEADERS_NO_BODY
]

3552 , &
ªque°s
[
GET_ONE_HEADER_NO_BODY
]

3553 , &
ªque°s
[
GET_NO_HEADERS_NO_BODY
]

3556 
	`¥ötf
("request scan 2/4 ");

3557 
	`ã°_sˇn
–&
ªque°s
[
POST_CHUNKED_ALL_YOUR_BASE
]

3558 , &
ªque°s
[
POST_IDENTITY_BODY_WORLD
]

3559 , &
ªque°s
[
GET_FUNKY_CONTENT_LENGTH
]

3562 
	`¥ötf
("request scan 3/4 ");

3563 
	`ã°_sˇn
–&
ªque°s
[
TWO_CHUNKS_MULT_ZERO_END
]

3564 , &
ªque°s
[
CHUNKED_W_TRAILING_HEADERS
]

3565 , &
ªque°s
[
CHUNKED_W_BULLSHIT_AFTER_LENGTH
]

3568 
	`¥ötf
("request scan 4/4 ");

3569 
	`ã°_sˇn
–&
ªque°s
[
QUERY_URL_WITH_QUESTION_MARK_GET
]

3570 , &
ªque°s
[
PREFIX_NEWLINE_GET
 ]

3571 , &
ªque°s
[
CONNECT_REQUEST
]

3574 
	`puts
("requests okay");

3577 
	}
}

	@deps/http-parser/testparser.c

1 
	~"hâp_∑r£r.h
"

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<°d¨g.h
>

10 
	$⁄_mesßge_begö
 (
hâp_∑r£r
 *
∑r£r
){

11 
	`¥ötf
("on_message_begin\n");

13 
	}
}

15 
	$⁄_uæ
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

16 *
uæ
 = 
	`ˇŒoc
(1,
Àngth
+1);

17 
	`mem˝y
(
uæ
,
©
,
Àngth
);

18 
uæ
[
Àngth
] = 0;

19 
	`¥ötf
("⁄_uæ:%s\n",
uæ
);

21 
	}
}

23 
	$⁄_°©us
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

24 *
°©us
 = 
	`ˇŒoc
(1,
Àngth
+1);

25 
	`mem˝y
(
°©us
,
©
,
Àngth
);

26 
°©us
[
Àngth
] = 0;

27 
	`¥ötf
("⁄_°©us:%s\n",
°©us
);

29 
	}
}

31 
	$⁄_hódî_fõld
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

32 *
fõld
 = 
	`ˇŒoc
(1,
Àngth
+1);

33 
	`mem˝y
(
fõld
,
©
,
Àngth
);

34 
fõld
[
Àngth
] = 0;

35 
	`¥ötf
("⁄_hódî_fõld:%s\n",
fõld
);

37 
	}
}

39 
	$⁄_hódî_vÆue
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

40 *
vÆue
 = 
	`ˇŒoc
(1,
Àngth
+1);

41 
	`mem˝y
(
vÆue
,
©
,
Àngth
);

42 
vÆue
[
Àngth
] = 0;

43 
	`¥ötf
("⁄_hódî_vÆue:%s\n",
vÆue
);

45 
	}
}

47 
	$⁄_hódîs_com∂ëe
(
hâp_∑r£r
 *
∑r£r
){

48 
	`¥ötf
("on_headers_complete\n");

50 
	}
}

52 
	$⁄_body
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
©
, 
size_t
 
Àngth
){

53 *
body
 = 
	`ˇŒoc
(1,
Àngth
+1);

54 
	`mem˝y
(
body
,
©
,
Àngth
);

55 
body
[
Àngth
] = 0;

56 
	`¥ötf
("⁄_body:%s\n",
body
);

58 
	}
}

60 
	$⁄_mesßge_com∂ëe
(
hâp_∑r£r
 *
∑r£r
){

61 
	`¥ötf
("on_message_complete\n");

63 
	}
}

65 
	$maö
(){

67 
hâp_∑r£r_£âögs
 
£âögs
 = {

68 .
⁄_mesßge_begö
 = on_message_begin,

69 .
⁄_uæ
 = on_url,

70 .
⁄_°©us
 = on_status,

71 .
⁄_hódî_fõld
 = on_header_field,

72 .
⁄_hódî_vÆue
 = on_header_value,

73 .
⁄_hódîs_com∂ëe
 = on_headers_complete,

74 .
⁄_body
 = on_body,

75 .
⁄_mesßge_com∂ëe
 = on_message_complete,

77 
hâp_∑r£r
 
∑r£r
;

78 
	`hâp_∑r£r_öô
(&
∑r£r
, 
HTTP_REQUEST
);

81 
buf
[] = "GET /demo HTTP/1.1\r\n"

87 
	`hâp_∑r£r_execuã
(&
∑r£r
,&
£âögs
,
buf
,
	`°æí
("GET /demo HTTP/1.1\r\n"));

88 
	`hâp_∑r£r_execuã
(&
∑r£r
,&
£âögs
,
buf
+
	`°æí
("GET /demo HTTP/1.1\r\n"),(buf) - strlen("GET /demo HTTP/1.1\r\n"));

91 
	}
}

	@dlist.h

1 #i‚de‡
_DLIST_H


2 
	#_DLIST_H


	)

4 
˛ass
 
	gdli°
;

5 
	sdnode
{

6 
dnode
():
√xt
(
NULL
),
¥e
(NULL),
_dli°
(NULL){}

7 
dnode
 *
	m√xt
;

8 
dnode
 *
	m¥e
;

9 
dli°
 *
	m_dli°
;

12 ˛as†
	cdli°
{

13 
	mpublic
:

14 
	$dli°
():
	$size
(0){

15 
hód
.
√xt
 = &
èû
;

16 
èû
.
¥e
 = &
hód
;

18 
size_t
 
	$Size
(){

19  
size
;

20 
	}
}

22 
boﬁ
 
	$Em±y
(){

23  
size
 == 0;

24 
	}
}

26 
dnode
 *
	$Begö
(){

27 if(
	`Em±y
()) &
èû
;

28  
hód
.
√xt
;

29 
	}
}

31 
dnode
 *
	$End
(){

32  &
èû
;

33 
	}
}

35 
	$Push
(
dnode
 *
n
){

36 if(
n
->
_dli°
 ||Ç->
√xt
 ||Ç->
¥e
) ;

37 
èû
.
¥e
->
√xt
 = 
n
;

38 
n
->
¥e
 = 
èû
.pre;

39 
èû
.
¥e
 = 
n
;

40 
n
->
_dli°
 = 
this
;

41 
n
->
√xt
 = &
èû
;

42 ++
size
;

43 
	}
}

45 
	$Remove
(
dnode
 *
n
)

47 if(
n
->
_dli°
 !
this
 || (!n->
¥e
 && !n->
√xt
))

49 
n
->
¥e
->
√xt
 =Ç->next;

50 
n
->
√xt
->
¥e
 =Ç->pre;

51 
n
->
¥e
 =Ç->
√xt
 = 
NULL
;

52 
n
->
_dli°
 = 
NULL
;

53 --
size
;

54 
	}
}

56 
dnode
* 
	$P›
(){

57 if(
	`Em±y
())

58  
NULL
;

61 
dnode
 *
n
 = 
hód
.
√xt
;

62 
	`Remove
(
n
);

63  
n
;

65 
	}
}

67 
	g¥iv©e
:

68 
dnode
 
hód
;

69 
dnode
 
	gèû
;

70 
size_t
 
	gsize
;

	@example/client.lua

1 
	gC
.
C⁄√˘
("127.0.0.1",8010,
	$fun˘i⁄
 (
s
,
suc˚ss
)

2 
suc˚ss
 
thí


3 
C
.
	`Böd
(
s
,C.
	`PackëDecodî
(),
	$fun˘i⁄
 (
s
,
Ωk
)

4 
	`¥öt
("ªcvÖackë",
Ωk
:
	$RódSå
())

5 
C
.
	`Síd
(
s
,C.
	$NewWPackë
(
Ωk
))

6 
íd
)

7 
loˇl
 
wpk
 = 
C
.
	$NewWPackë
()

8 
wpk
:
	`WrôeSå
("hello")

9 
C
.
	$Síd
(
s
,
wpk
)

10 
íd


11 
íd
)

13 
åue
 do

14 
C
.
	$Run
(50)

15 
	`cﬁÀ˘g¨bage
("collect")

	@example/echo.lua

1 
loˇl
 
	gªcvcou¡
 = 0

3 
C
.
Li°í
("127.0.0.1",8010,
	$fun˘i⁄
 (
s
)

4 
	`¥öt
("√w clõ¡",
s
)

5 
C
.
	`Böd
(
s
,C.
	`PackëDecodî
(),
	$fun˘i⁄
 (
s
,
Ωk
)

6 
	`¥öt
("ªcvÖackë",
Ωk
:
	`RódSå
(),
ªcvcou¡
)

7 
ªcvcou¡
 =Ñecvcount + 1;

8 
C
.
	`Síd
(
s
,C.
	$NewWPackë
(
Ωk
))

9 
íd
)

10 
íd
)

12 
åue
 do

13 
C
.
	$Run
(50)

14 
íd


	@example/httpclient.lua

1 
loˇl
 
	gHâp
 = 
ªquúe
("lua.http")

3 
loˇl
 
˛õ¡
 = 
Hâp
.
HâpClõ¡
("sdk.test4.g.uc.cn")

4 
loˇl
 
hâp_ªque°
 = 
Hâp
.
HâpReque°
("/ss")

5 
hâp_ªque°
:
WrôeHód
({

10 
hâp_ªque°
:
End
([[{"id":1434594091614,"service":"ucid.bind.create","game":{"gameId":123456},"data":{"gameUser":"user123456"},"encrypt":"md5","sign":"2b2b75609346de77362cb5005eaa7a11"}]])

12 
nŸ
 
˛õ¡
:
Po°
(
hâp_ªque°
,
	$fun˘i⁄
 (
ªsu…
)

13 
ªsu…
 
thí


14 
k
,
v
 
ö
 
	`∑ús
(
ªsu…
:
	$GëHódîs
()) do

15 
	$¥öt
(
k
,
v
)

16 
íd


17 
	`¥öt
("ªcvÑesu…",
ªsu…
:
	$GëBody
())

19 
	`¥öt
("postÑequestÉrror")

20 
íd


21 
íd
Ë
thí


22 
	`¥öt
("post failed")

23 
íd


26 
åue
 do

27 
C
.
	$Run
(50)

28 
	`cﬁÀ˘g¨bage
("collect")

29 
íd


	@example/httpserver.lua

1 
loˇl
 
	gHâp
 = 
ªquúe
("lua.http")

3 
Hâp
.
HâpSîvî
("127.0.0.1",8010,
	$fun˘i⁄
(
ªq
,
ªs
)

4 
k
,
v
 
ö
 
	`∑ús
(
ªq
:
	$GëHódîs
()) do

5 
	$¥öt
(
k
,
v
)

6 
íd


7 
ªs
:
	`WrôeHód
(200,"OK", {"C⁄ã¡-Ty≥:Åext/∂aö"
	}
})

8 
ªs
:
End
("Hello World\n")

9 
íd
)

11 
åue
 do

12 
C
.
	$Run
(50)

13 
	`cﬁÀ˘g¨bage
("collect")

14 
íd


	@example/sdkserver/clientGetToken.lua

1 
loˇl
 
	gHâp
 = 
ªquúe
("lua.http")

2 
loˇl
 
cjs⁄
 = 
ªquúe
("cjson")

4 --
ã°
 
gëTokí


6 
loˇl
 
˛õ¡
 = 
Hâp
.
HâpClõ¡
("192.168.1.117",8010)

7 
loˇl
 
	ghâp_ªque°
 = 
Hâp
.
HâpReque°
([[/
gëTokí
?
sign
=
a2e5cb9674631820e7881f06b47adc0d
&
exãnsi⁄
=&
sid
=
s°1game803225ed07ef42448640b05006fcbb5f127783
&
≠pID
=1&
ch™√lID
=10]])

8 
hâp_ªque°
:
WrôeHód
({

16 
hâp_ªque°
:
	$End
(
nû
)

18 
nŸ
 
˛õ¡
:
	`Gë
(
hâp_ªque°
,
	$fun˘i⁄
 (
ªsu…
)

19 
ªsu…
 
thí


20 --
loˇl
 
d©a
 = 
cjs⁄
.
	`decode
(
C
.
	`Utf82Gbk
(
ªsu…
:
	`GëBody
()))

21 --
	$¥öt
(
d©a
.
id
,d©a.
°©e
.
msg
)

22 
	`¥öt
(
ªsu…
:
	`GëBody
())

23 --
	`¥öt
("getÑesponse")

25 
	`¥öt
("getÑequestÉrror")

26 
íd


27 
íd
Ë
thí


28 
	`¥öt
("get failed")

29 
íd


32 
åue
 do

33 
C
.
	$Run
(50)

34 
	`cﬁÀ˘g¨bage
("collect")

35 
íd


	@example/sdkserver/clientLoginServer.lua

1 
loˇl
 
	gHâp
 = 
ªquúe
("lua.http")

2 
loˇl
 
cjs⁄
 = 
ªquúe
("cjson")

4 --
ã°
 
gëTokí


6 
loˇl
 
˛õ¡
 = 
Hâp
.
HâpClõ¡
("192.168.1.117",8010)

7 
loˇl
 
	ghâp_ªque°
 = 
Hâp
.
HâpReque°
("/loginServer")

8 
hâp_ªque°
:
WrôeHód
({

16 
hâp_ªque°
:
	$End
([[
sign
=00661e98514100347e01e724d2db9cd9&
tokí
=333333&
u£rID
=11111
∑øm
]])

18 
nŸ
 
˛õ¡
:
	`Po°
(
hâp_ªque°
,
	$fun˘i⁄
 (
ªsu…
)

19 
ªsu…
 
thí


20 
	`¥öt
(
ªsu…
:
	$GëBody
())

22 
	`¥öt
("getÑequestÉrror")

23 
íd


24 
íd
Ë
thí


25 
	`¥öt
("get failed")

26 
íd


29 
åue
 do

30 
C
.
	$Run
(50)

31 
	`cﬁÀ˘g¨bage
("collect")

32 
íd


	@example/sdkserver/getToken.lua

1 
loˇl
 
	gRouãr
 = 
ªquúe
("lua.router")

2 
loˇl
 
cjs⁄
 = 
ªquúe
("cjson")

4 
Rouãr
.
RegH™dÀr
("/gëTokí",
	$fun˘i⁄
 (
ªq
,
ªs
,
∑øm
)

5 
loˇl
 
ªsu…
 = {

6 
°©e
 = 1,

7 
d©a
 = {

8 
u£rID
 = 11111,

9 
sdkU£rID
 = 222222,

10 
tokí
 = 333333,

11 
exãnsi⁄
 = 444444,

13 
	}
}

14 
ªs
:
WrôeHód
(200,"OK", {"Content-Type:Åext/plain"})

15 
ªs
:
End
(
cjs⁄
.
	$ícode
(
ªsu…
))

16 
íd
)

	@example/sdkserver/loginServer.lua

1 
loˇl
 
	gRouãr
 = 
ªquúe
("lua.router")

2 
loˇl
 
cjs⁄
 = 
ªquúe
("cjson")

4 
Rouãr
.
RegH™dÀr
("/logöSîvî",
	$fun˘i⁄
 (
ªq
,
ªs
,
∑øm
)

5 
loˇl
 
∑øms
 = {
	}
}

6 
k
, 
v
 
ö
 
°rög
.
gm©ch
(
∑øm
, "(%w+)=(%w+)") do

7 
∑øms
[
k
] = 
v


8 
íd


10 
loˇl
 
ªsu…
 = {

11 
°©e
 = 0,

12 
d©a
 = {

13 
accou¡Name
 = "pvp1",

14 
accou¡ID
 = "12345",

17 
ªs
:
WrôeHód
(200,"OK", {"Content-Type:Åext/plain"})

18 
ªs
:
End
(
cjs⁄
.
	$ícode
(
ªsu…
))

20 
íd
)

	@example/sdkserver/server.lua

1 
loˇl
 
	gcjs⁄
 = 
ªquúe
("cjson")

2 
loˇl
 
Hâp
 = 
ªquúe
("lua.http")

3 
loˇl
 
Rouãr
 = 
ªquúe
("lua.router")

4 
ªquúe
("sdkserver.getToken")

5 
ªquúe
("sdkserver.loginServer")

7 
Hâp
.
HâpSîvî
("192.168.1.117",8010,
	$fun˘i⁄
(
ªq
,
ªs
)

8  
Rouãr
.
	$Di•©ch
(
ªq
,
ªs
)

9 
íd
)

11 
åue
 do

12 
C
.
	$Run
(50)

13 
	`cﬁÀ˘g¨bage
("collect")

	@example/testmysql.lua

1 
loˇl
 
	gdrivî
 = 
ªquúe
 "luasql.mysql"

4 
ív
 = 
drivî
.
mysql
()

7 
c⁄n
 = 
ív
:
c⁄√˘
("ias_test","root","802802","127.0.0.1",3306)

10 
	gc⁄n
:
execuã
"SET NAMES GB2312"

13 
fun˘i⁄
 
	$rows
 (
c⁄√˘i⁄
, 
sql_°©emít
)

14 
loˇl
 
curs‹
 = 
	`as£π
 (
c⁄√˘i⁄
:
	$execuã
 (
sql_°©emít
))

15  
	$fun˘i⁄
 ()

16  
curs‹
:
	$„tch
()

17 
íd


18 
íd


20 
id
,
U£rName
 
ö
 
	`rows
(
c⁄n
 ,"SELECT id,UserName from user") do

21 
	`¥öt
(
°rög
.
	`f‹m©
("%† %s",
id
,
U£rName
))

22 
íd


26 
cur
 = 
c⁄n
:
	`execuã
("select id,UserName from user")

28 
	`¥öt
(
cur
:
	$numrows
())

30 
row
 = 
cur
:
	`„tch
("a")

32 
row
 do

33 
	$¥öt
(
row
.
id
,row.
U£rName
)

34 
row
 = 
cur
:
	`„tch
("a")

35 
íd


37 
c⁄n
:
	`˛o£
() --ÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìËøûÊé•

38 
ív
:
	`˛o£
() --ÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìÁéØÂ¢É

	@llist.h

20 #i‚de‡
_LLIST_H


21 
	#_LLIST_H


	)

23 
	~<°döt.h
>

24 
	~<°dlib.h
>

26 
	s ode


28 
 ode
 *
	m√xt
;

32 
	sŒi°


34 
	m¥iv©e
:

35 
size
;

36 
 ode
 *
	mhód
;

37 
 ode
 *
	mèû
;

38 
	mpublic
:

39 
Œi°
():
size
(0),
hód
(
NULL
),
èû
(NULL){

42 
 ode
 *
Hód
(){

43  
	mhód
;

46 
 ode
 *
Taû
(){

47  
	mèû
;

50 
push_back
(
 ode
 *
node
){

51 if(
	mnode
->
	m√xt
) ;

52 
	mnode
->
	m√xt
 = 
NULL
;

53 if(0 =
size
)

54 
hód
 = 
èû
 = 
node
;

57 
	mèû
->
	m√xt
 = 
node
;

58 
	mèû
 = 
node
;

60 ++
	msize
;

64 
push_‰⁄t
(
 ode
 *
node
)

66 if(
	mnode
->
	m√xt
) ;

67 
	mnode
->
	m√xt
 = 
NULL
;

68 if(0 =
size
)

69 
hód
 = 
èû
 = 
node
;

72 
	mnode
->
	m√xt
 = 
hód
;

73 
	mhód
 = 
node
;

75 ++
	msize
;

78 
 ode
* 
Œi°_p›
()

80 if(0 =
size
)

81  
NULL
;

82 
 ode
 *
	mnode
 = 
hód
;

83 
	mhód
 = 
hód
->
√xt
;

84 if(
	mNULL
 =
hód
)

85 
èû
 = 
NULL
;

86 --
	msize
;

87 
	mnode
->
	m√xt
 = 
NULL
;

88  
	mnode
;

91 
boﬁ
 
isEm±y
(){

92  
	msize
 == 0;

95 
Size
(){

96  
	msize
;

	@lua/http.lua

1 
loˇl
 
	gsockë
 = 
ªquúe
 "lua.socket"

3 
loˇl
 
hâp_ª•⁄£
 = {}

5 
fun˘i⁄
 
hâp_ª•⁄£
:
	$√w
()

6 
loˇl
 
o
 = {
	}
}

7 
o
.
__ödex
 = 
hâp_ª•⁄£


8 
o
.
hódîs
 = {}

9 
	$£tmë©abÀ
(
o
,o)

10  
o


11 
íd


13 
fun˘i⁄
 
hâp_ª•⁄£
:
	$buûdRe•⁄£
()

14 
loˇl
 
°rRe•⁄£
 = 
°rög
.
	`f‹m©
("HTTP/1.1 %d %s\r\n",
£lf
.
°©us
,£lf.
pha£
)

15 
k
,
v
 
ö
 
	$∑ús
(
£lf
.
hódîs
) do

16 
°rRe•⁄£
 = såRe•⁄£ .. 
°rög
.
	`f‹m©
("%s\r\n",
v
)

17 
íd


18 
£lf
.
body
 
thí


19 
°rRe•⁄£
 = såRe•⁄£ .. 
°rög
.
	`f‹m©
("C⁄ã¡-Lígth: %d \r\n\r\n%s",#£lf.
body
,
£lf
.body)

21 
°rRe•⁄£
 = strResponse .. "\r\n\r\n"

22 
íd


23  
°rRe•⁄£


24 
íd


26 
fun˘i⁄
 
hâp_ª•⁄£
:
	$WrôeHód
(
°©us
,
pha£
,
hóds
)

27 
£lf
.
°©us
 = status

28 
£lf
.
pha£
 =Öhase

29 
£lf
.
hódîs
 = sñf.hódî†
‹
 {
	}
}

30 
hóds
 
thí


31 
k
,
v
 
ö
 
	$∑ús
(
hóds
) do

32 
èbÀ
.
	$ö£π
(
£lf
.
hódîs
,
v
)

33 
íd


34 
íd


35 
íd


37 
fun˘i⁄
 
hâp_ª•⁄£
:
	$End
(
body
)

38 
£lf
.
body
 = body

39 
£lf
.
c⁄√˘i⁄
:
	`Síd
(
C
.
	`NewRawPackë
(£lf:
	$buûdRe•⁄£
()))

40 
íd


43 
loˇl
 
hâp_ªque°
 = {
	}
}

45 
fun˘i⁄
 
hâp_ªque°
:
	$√w
(
∑th
)

46 
loˇl
 
o
 = {
	}
}

47 
o
.
__ödex
 = 
hâp_ªque°


48 
	$£tmë©abÀ
(
o
,o)

49 
o
.
∑th
 =Öath

50 
o
.
hódîs
 = {
	}
}

51  
o


52 
íd


54 
fun˘i⁄
 
hâp_ªque°
:
	$WrôeHód
(
hóds
)

55 
£lf
.
hódîs
 = sñf.hódî†
‹
 {
	}
}

56 
hóds
 
thí


57 
k
,
v
 
ö
 
	$∑ús
(
hóds
) do

58 
èbÀ
.
	$ö£π
(
£lf
.
hódîs
,
v
)

59 
íd


60 
íd


61 
íd


63 
fun˘i⁄
 
hâp_ªque°
:
	$End
(
body
)

64 
£lf
.
body
 = body

65 
íd


68 
loˇl
 
hâp_£rvî
 = {
	}
}

70 
fun˘i⁄
 
hâp_£rvî
:
	$√w
()

71 
loˇl
 
o
 = {
	}
}

72 
o
.
__ödex
 = 
hâp_£rvî


73 
	$£tmë©abÀ
(
o
,o)

74  
o


75 
íd


77 
fun˘i⁄
 
hâp_£rvî
:
	$Cª©eSîvî
(
ù
,
p‹t
,
⁄_ªque°
)

78 
£lf
.
sockë
 = 
C
.
	`Li°í
(
ù
,
p‹t
,
	$fun˘i⁄
 (
s
)

79 
loˇl
 
c⁄√˘i⁄
 = 
sockë
.
	$New
(
s
)

80 
C
.
	`Böd
(
s
,C.
	`HâpDecodî
(65535),
	$fun˘i⁄
 (
_
,
Ωk
)

81 
loˇl
 
ª•⁄£
 = 
hâp_ª•⁄£
:
	$√w
()

82 
ª•⁄£
.
c⁄√˘i⁄
 = connection

83 
	$⁄_ªque°
(
Ωk
,
ª•⁄£
Ë
thí


84 
c⁄√˘i⁄
:
	$Clo£
()

85 
íd


86 
íd
,

87 
	$fun˘i⁄
 (
_
)

88 
c⁄√˘i⁄
 = 
nû


89 
íd
)

90 
íd
)

91 
£lf
.
sockë
 
thí


92  
£lf


94  
nû


95 
íd


96 
íd


98 
loˇl
 
fun˘i⁄
 
	$HâpSîvî
(
ù
,
p‹t
,
⁄_ªque°
)

99  
hâp_£rvî
:
	$√w
():
	$Cª©eSîvî
(
ù
,
p‹t
,
⁄_ªque°
)

100 
íd


103 
loˇl
 
hâp˛õ¡
 = {
	}
}

105 
fun˘i⁄
 
hâp˛õ¡
:
	$√w
(
ho°
,
p‹t
)

106 
loˇl
 
o
 = {
	}
}

107 
o
.
__ödex
 = 
hâp˛õ¡


108 
	$£tmë©abÀ
(
o
,o)

109 
o
.
ho°
 = host

110 
o
.
p‹t
 =Ö‹à
‹
 80

111  
o


112 
íd


114 
fun˘i⁄
 
hâp˛õ¡
:
	$buûdReque°
(
ªque°
)

115 
loˇl
 
°rReque°
 = 
°rög
.
	`f‹m©
("%†%†HTTP/1.1\r\n",
ªque°
.
mëhod
,ªque°.
∑th
)

116 
°rReque°
 = såReque° .. 
°rög
.
	`f‹m©
("Ho°: %†\r\n",
£lf
.
ho°
)

117 
k
,
v
 
ö
 
	$∑ús
(
ªque°
.
hódîs
) do

118 
°rReque°
 = såReque° .. 
°rög
.
	`f‹m©
("%s\r\n",
v
)

119 
íd


120 
ªque°
.
body
 
thí


121 
°rReque°
 = såReque° .. 
°rög
.
	`f‹m©
("C⁄ã¡-Lígth: %d \r\n\r\n%s",#ªque°.
body
,
ªque°
.body)

123 
°rReque°
 = strRequest .. "\r\n"

124 
íd


125  
°rReque°


126 
íd


129 
fun˘i⁄
 
hâp˛õ¡
:
	$ªque°
(
mëhod
,
ªque°
,
⁄_ªsu…
)

130 
	$¥öt
(
£lf
.
ho°
,£lf.
p‹t
)

131 
C
.
	`C⁄√˘
(
£lf
.
ho°
,£lf.
p‹t
,
	$fun˘i⁄
 (
s
,
suc˚ss
)

132 
suc˚ss
 
thí


133 
	`¥öt
("connect success")

134 
loˇl
 
c⁄√˘i⁄
 = 
sockë
.
	$New
(
s
)

135 
C
.
	`Böd
(
s
,C.
	`HâpDecodî
(65535*2),
	$fun˘i⁄
 (
_
,
Ωk
)

136 
	$⁄_ªsu…
(
Ωk
)

137 
⁄_ªsu…
 = 
nû


138 
c⁄√˘i⁄
 
thí


139 
c⁄√˘i⁄
:
	$Clo£
()

140 
íd


141 
íd
,

142 
	$fun˘i⁄
 (
_
)

143 
⁄_ªsu…
 
thí


144 
	$⁄_ªsu…
(
nû
)

145 
íd


146 
c⁄√˘i⁄
 = 
nû


147 
íd
)

148 
ªque°
.
mëhod
 = method

149 
c⁄√˘i⁄
:
	`Síd
(
C
.
	`NewRawPackë
(
£lf
:
	$buûdReque°
(
ªque°
)))

151 
	$⁄_ªsu…
(
nû
)

152 
	`¥öt
("connect failed")

153 
íd


154 
íd
Ë
thí


155  
åue


157  
Ál£


158 
íd


159 
íd


161 
fun˘i⁄
 
hâp˛õ¡
:
	$Po°
(
ªque°
,
⁄_ªsu…
)

162  
£lf
:
	`ªque°
("POST",
ªque°
,
⁄_ªsu…
)

163 
íd


165 
fun˘i⁄
 
hâp˛õ¡
:
	$Gë
(
ªque°
,
⁄_ªsu…
)

166  
£lf
:
	`ªque°
("GET",
ªque°
,
⁄_ªsu…
)

167 
íd


169 
loˇl
 
fun˘i⁄
 
	$HâpClõ¡
(
ho°
,
p‹t
)

170  
hâp˛õ¡
:
	$√w
(
ho°
,
p‹t
)

171 
íd


173 
loˇl
 
fun˘i⁄
 
	$HâpReque°
(
∑th
)

174  
hâp_ªque°
:
	$√w
(
∑th
)

175 
íd


179 
HâpSîvî
 = HttpServer,

180 
HâpClõ¡
 = HttpClient,

181 
HâpReque°
 = HttpRequest,

182 
	}
}

	@lua/router.lua

1 
loˇl
 
	grouãr
 = {

2 
h™dÀr
 = {}

5 
loˇl
 
fun˘i⁄
 
	$S∂ôSåög
(
s
,
£∑øt‹
)

6 
loˇl
 
ªt
 = {
	}
}

7 
loˇl
 
öôidx
 = 1

8 
loˇl
 
•idx


9 
åue
 do

10 
•idx
 = 
°rög
.
	$föd
(
s
,
£∑øt‹
,
öôidx
)

11 
nŸ
 
•idx
 
thí


13 
íd


14 
èbÀ
.
	`ö£π
(
ªt
,
°rög
. 
	`sub
(
s
,
öôidx
,
•idx
-1))

15 
öôidx
 = 
•idx
 + 1

16 
íd


17 
öôidx
 <
°rög
.
	$Àn
(
s
Ë
thí


18 
èbÀ
.
	`ö£π
(
ªt
,
°rög
. 
	$sub
(
s
,
öôidx
))

19 
íd


20  
ªt


21 
íd


23 
loˇl
 
fun˘i⁄
 
	$∑r£
(
ªq
)

24 
loˇl
 
mëhod
 = 
ªq
:
	$GëMëhod
()

25 
loˇl
 
uæ°r
 = 
ªq
:
	$GëUæ
()

26 
loˇl
 
uæ
 = "/"

27 
loˇl
 
quîy_°r
 = 
uæ°r


29 
loˇl
 
idx1
 = 
°rög
.
	`föd
(
uæ°r
,"/",1)

30 
idx1
 
thí


31 
loˇl
 
idx2
 = 
°rög
.
	`föd
(
uæ°r
,"?",
idx1
)

32 
idx2
 
thí


33 
quîy_°r
 = 
°rög
.
	`sub
(
uæ°r
,
idx2
 + 1)

34 
idx2
 = idx2 - 1

35 
íd


36 
uæ
 = 
°rög
.
	$sub
(
uæ°r
,
idx1
,
idx2
)

37 
íd


39 
mëhod
 ="POST" 
thí


40  
uæ
,
ªq
:
	$GëBody
()

41 
ñ£if
 
mëhod
 ="GET" 
thí


42 
loˇl
 
∑øm_°rs
 = 
	`S∂ôSåög
(
quîy_°r
,"&")

43 
loˇl
 
∑øm
 = {
	}
}

44 
k1
,
v1
 
ö
 
	$∑ús
(
∑øm_°rs
) do

45 
k2
, 
v2
 
ö
 
°rög
.
	`gm©ch
(
v1
, "(%g+)=(%g+)") do

46 
∑øm
[
k2
] = 
v2


47 
íd


48 
íd


49  
uæ
,
∑øm


52 
íd


53 
íd


56 
fun˘i⁄
 
rouãr
.
	$Di•©ch
(
ªq
,
ªs
)

57 
loˇl
 
uæ
,
∑øm
 = 
	$∑r£
(
ªq
)

58 
uæ
 
thí


59 
loˇl
 
h™dÀr
 = 
rouãr
.h™dÀr[
uæ
]

60 
h™dÀr
 
thí


61  
	$h™dÀr
(
ªq
,
ªs
,
∑øm
)

64 
íd


67 
íd


68 
íd


70 
fun˘i⁄
 
rouãr
.
	$RegH™dÀr
(
uæ
,
h™dÀr
)

71 
rouãr
.
h™dÀr
[
uæ
] = handler

72 
íd


74  
rouãr


	@lua/socket.lua

1 
loˇl
 
	gsockë
 = {}

3 
fun˘i⁄
 
sockë
:
	$√w
(
s
)

4 
loˇl
 
o
 = {
	}
}

5 
o
.
__ödex
 = 
sockë


6 
o
.
__gc
 = 
	$fun˘i⁄
 (
£lf
)

7 
£lf
:
	$Clo£
()

8 
C
.
	$SockëRñó£
(
£lf
.
s
)

9 
íd


10 
	$£tmë©abÀ
(
o
,o)

11 
o
.
s
 = s

12 
C
.
	$SockëRëaö
(
s
)

13  
o


14 
íd


16 
fun˘i⁄
 
sockë
:
	$Síd
(
∑ckë
,
⁄_föish
)

17 
⁄_föish
 
thí


18  
C
.
	`Síd
(
£lf
.
s
,
∑ckë
,
	$fun˘i⁄
 ()

19 
	$⁄_föish
(
£lf
)

20 
íd
)

22  
C
.
	$Síd
(
£lf
.
s
,
∑ckë
)

23 
íd


24 
íd


26 
fun˘i⁄
 
sockë
:
	$Clo£
()

27 
C
.
	$Clo£
(
£lf
.
s
)

28 
íd


32 
New
 = 
	`fun˘i⁄
 (
s
Ë 
sockë
:
	`√w
(sË
íd


33 
	}
}

	@main.cpp

1 
	~"LuaUtû.h
"

3 
boﬁ
 
Reg2Lua
(
lua_Sèã
 *
L
);

5 
	$maö
(
¨gc
,**
¨gv
){

6 
lua_Sèã
 *
L
;

7 if(
¨gc
 < 2){

8 
	`¥ötf
("usageÅestluaÜuafile\n");

11 
L
 = 
	`luaL_√w°©e
();

12 
	`luaL_›ílibs
(
L
);

13 
	`Reg2Lua
(
L
);

14 i‡(
	`luaL_dofûe
(
L
,
¨gv
[1])) {

15 c⁄° * 
îr‹
 = 
	`lua_to°rög
(
L
, -1);

16 
	`lua_p›
(
L
,1);

17 
	`¥ötf
("%s\n",
îr‹
);

20 
	}
}

	@md5/md5.lua

2 -- 
	g$Id
: 
md5
.
lua
,
	gv
 1.4 2006/08/21 19:24:21 
ˇºegÆ
 
Exp
 
$


5 
loˇl
 
c‹e


6 
loˇl
 
°rög
 = såög 
‹
 
ªquúe
"string"

7 
°rög
.
föd
(
_VERSION
, "Lu®5.0"Ë
thí


8 
loˇl
 
	g˝©h
 = 
os
.
gëív
"LUA_CPATH" 
‹
 "/usr/local/lib/lua/5.0/"

9 
c‹e
 = 
lﬂdlib
(
˝©h
.."md5/core.so", "luaopen_md5_core")()

11 
	gc‹e
 = 
ªquúe
"md5.core"

12 
íd


16 -- @
∑øm
 
k
 
Såög
 
wôh
 
‹igöÆ
 
mesßge
.

17 -- @ 
Såög
 
wôh
 
the
 
md5
 
hash
 
vÆue
 
c⁄vîãd
 
to
 
hexadecimÆ
 
digôs


19 
fun˘i⁄
 
c‹e
.
	$sumhexa
 (
k
)

20 
k
 = 
c‹e
.
	$sum
(
k
)

21  (
°rög
.
	`gsub
(
k
, ".", 
	$fun˘i⁄
 (
c
)

22  
°rög
.
	`f‹m©
("%02x", såög.
	$byã
(
c
))

23 
íd
))

24 
íd


26  
c‹e


	@
1
.
0
42
765
ByteBuffer.h
Decoder.h
HttpDecoder.h
HttpPacket.h
LuaPacket.cpp
LuaPacket.h
LuaUtil.h
NetLua.cpp
Packet.h
RPacket.cpp
RPacket.h
RawBinPacket.h
Reactor.cpp
Reactor.h
Socket.cpp
Socket.h
SysTime.cpp
SysTime.h
WPacket.h
deps/http-parser/contrib/parsertrace.c
deps/http-parser/contrib/url_parser.c
deps/http-parser/http_parser.c
deps/http-parser/http_parser.h
deps/http-parser/test.c
deps/http-parser/testparser.c
dlist.h
example/client.lua
example/echo.lua
example/httpclient.lua
example/httpserver.lua
example/sdkserver/clientGetToken.lua
example/sdkserver/clientLoginServer.lua
example/sdkserver/getToken.lua
example/sdkserver/loginServer.lua
example/sdkserver/server.lua
example/testmysql.lua
llist.h
lua/http.lua
lua/router.lua
lua/socket.lua
main.cpp
md5/md5.lua
